{"version":3,"sources":["components/theme/logo.png","store/reducers/roomcode.reducer.js","store/actionTypes.js","store/reducers/hostdash.reducer.js","store/reducers/useragenda.reducer.js","store/reducers/hostagenda.reducer.js","store/reducers/userpoll.reducer.js","store/dataBases.js","store/MockDataFunctions.js","store/reducers/hostpoll.reducer.js","store/reducers/pollresults.reducer.js","store/reducers/roomresults.reducer.js","store/reducers/index.js","databaseCommunication/permissions.js","databaseCommunication/hashFunctions.js","LoginUtils.js","databaseCommunication/pollFunctions.js","databaseCommunication/roomFunctions.js","store/sagas/roomcode.saga.js","store/sagas/hostdash.saga.js","store/sagas/useragenda.saga.js","store/sagas/hostagenda.saga.js","store/sagas/userpoll.saga.js","store/sagas/hostpoll.saga.js","store/sagas/pollresults.saga.js","store/sagas/roomresults.saga.js","store/sagas/index.js","components/theme/Breakpoints.js","pages/format-pages/ViewportHandler.js","components/theme/Colors.js","components/theme/Text.js","components/theme/Fonts.js","components/theme/Body.js","components/theme/Jumbo.js","components/theme/PageHeader.js","components/theme/PageFooter.js","pages/format-pages/BasePage.js","pages/format-pages/MainPage.js","history.js","components/buttons/Button.js","components/cards/Card.js","components/cards/LoginCard.js","pages/Login.js","App.js","components/groups/Group.js","components/items/Item.js","components/items/HostRoomItem.js","components/theme/Icon.js","components/items/EditItem.js","components/items/AddItem.js","components/format-text/StatusText.js","components/format-cards/PrimaryCard.js","components/format-cards/SecondaryCard.js","components/format-cards/TertiaryCard.js","components/format-cards/StatusTertiaryCard.js","components/cards/HostDashCard.js","pages/HostDash.js","pages/format-pages/SideBarPage.js","components/items/AgendaItem.js","components/items/HostAgendaItem.js","components/buttons/EditButton.js","components/cards/HostAgendaCard.js","components/inputs/TextArea.js","components/inputs/InputField.js","components/inputs/Input.js","components/groups/DragItem.js","components/groups/DragGroup.js","components/groups/EditingGroup.js","components/items/HostEditAgendaItem.js","components/cards/HostEditAgendaCard.js","components/cards/HostStatusCard.js","pages/HostAgenda.js","components/cards/RoomcodeCard.js","pages/Roomcode.js","components/cards/UserAgendaCard.js","pages/UserAgenda.js","components/option-groups/OptionGroup.js","components/buttons/Bubble.js","components/buttons/CheckBox.js","components/options/OptionBase.js","components/options/Option.js","components/options/TextOption.js","components/options/InputOption.js","components/options/VotingOption.js","components/buttons/SubmitButton.js","components/cards/HostPollCard.js","components/options/AdderOption.js","components/options/EditingOption.js","components/items/HostEditPollOptionItem.js","components/cards/EditPollCard.js","components/cards/HostEditPanelCard.js","pages/HostPoll.js","components/cards/UserPollCard.js","pages/UserPoll.js","components/charts/BarChart.js","components/cards/PDFPreviewCard.js","components/cards/PollResultsCard.js","pages/PollResults.js","csv/csvFunctions.js","components/cards/RoomResultsCard.js","pages/RoomResults.js","Routes.js","index.js"],"names":["module","exports","result","ActionTypes","roomcode","UPDATE_ROOMCODE","CHECK_ROOMCODE_START","CHECK_ROOMCODE_SUCCESS","CHECK_ROOMCODE_ERROR","RESET_ROOMCODE","hostdash","FETCH_ROOMS_START","FETCH_ROOMS_SUCCESS","FETCH_ROOMS_ERROR","DELETE_ROOM_START","DELETE_ROOM_SUCCESS","DELETE_ROOM_ERROR","ADD_ROOM_START","ADD_ROOM_SUCCESS","ADD_ROOM_ERROR","useragenda","FETCH_AGENDA_START","FETCH_AGENDA_SUCCESS","FETCH_AGENDA_ERROR","hostagenda","UPDATE_AGENDA_START","UPDATE_AGENDA_SUCCESS","UPDATE_AGENDA_ERROR","ADD_POLL_START","ADD_POLL_SUCCESS","ADD_POLL_ERROR","TOGGLE_EDIT","UPDATE_TITLE","DELETE_POLL","UPDATE_ORDER","UPDATE_POLL_STATUS_START","UPDATE_POLL_STATUS_SUCCESS","UPDATE_POLL_STATUS_ERROR","UPDATE_ROOM_STATUS_START","UPDATE_ROOM_STATUS_SUCCESS","UPDATE_ROOM_STATUS_ERROR","userpoll","FETCH_POLL_START","FETCH_POLL_SUCCESS","FETCH_POLL_ERROR","UPDATE_SELECTION","SUBMIT_VOTE_START","SUBMIT_VOTE_SUCCESS","SUBMIT_VOTE_ERROR","UPDATE_SUBMISSION_STATUS","UPDATE_INPUT","hostpoll","ADD_POLL","UPDATE_OPTION","UPDATE_DESCRIPTION","UPDATE_SETTINGS","UPDATE_POLL_START","UPDATE_POLL_SUCCESS","UPDATE_POLL_ERROR","pollresults","FETCH_RESULTS_START","FETCH_RESULTS_SUCCESS","FETCH_RESULTS_ERROR","roomresults","initialState","submitted","loading","error","rooms","order","title","status","polls","newPolls","newOrder","editing","newState","poll","type","description","options","optionsOrder","userInputOption","userInput","id","value","submissionId","submissionValue","pollStatus","selection","submission","submitStatus","submitLoading","submissionStatus","state","selected","i","length","pollBase","count","showResults","pollHash","results","roomBase","roomHash","hosts","generateOptionId","Math","floor","random","slice","newOptions","newOptionsOrder","pollResults","roomResults","allResults","combineReducers","action","console","log","response","FETCH_AGENGA_START","event","target","newPoll","newPending","map","push","poll_id","filter","UPDATE_AGENGA_START","newPendingOrder","inputSubmission","inputSubmissionId","location_state","option_id","undefined","optionType","settings","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","crypto","require","SECRETKEY","readSecretKey","a","generatePollMsg","msg","JSON","stringify","Object","keys","sort","forEach","key","index","key2","index2","generateRoomMsg","room","generateHmac","hmac","createHmac","update","digest","generatePollHash","generateRoomHash","compareHashes","fetched","expectedHash","fireauth","auth","firestore","signOutCurrentUser","signOut","then","catch","getCurrentUserEmail","email","currentUser","userLogin","provider","GoogleAuthProvider","setCustomParameters","signInWithPopup","credential","accessToken","user","errorCode","code","errorMessage","message","userIsHamiltonian","split","getUserId","userIsLoggedIn","userIsHost","host_id","userIsVoter","docRef","collection","doc","get","exists","generatePollId","generateUserOptionId","fetchPollData","room_id","getHost","document","docSnap","docData","data","optionRef","optDocSnap","optDocData","opt","alert","updatePoll","poll_state","original_state","pollRef","entries","set","fetchAgenda","agenda","fetchedHash","roomSnap","roomData","getPollOrder","pollOrder","collect","collectSnap","collectData","docs","addPoll","collectRef","ids","thisHash","toString","values","pending","FieldValue","arrayUnion","fetchRoomData","newRoom","newHash","updatePollStatus","new_status","oldStatus","setPollOrder","countVotes","getPollResults","user_id","voteRef","voteSnap","voteData","finalVotes","userCollectRef","userCollectSnap","x","optionSnap","submitVote","token","uid","multi_vote","choice","vote","choices","concat","item","inputcode","existingValuesSnap","existingValuesData","vals","includes","userInputResult","pollSnap","votes","deletePoll","userOptionRef","userOptionSnap","delete","generateRoomCode","checkRoomcode","checkRoomStatuses","roomKey","roomStatus","indexOf","fetchHostRooms","open","closed","snap","roomWithPollOrder","orderRef","orderSnap","setRoomOrder","new_order","deleteHostRoom","roomRef","addHostRoom","roomCode","roomDocs","hostDash","roomHashData","updateRoom","room_state","oldPolls","roomHashInfo","old_order","b","deleted","roomDocument","roomDocSnap","roomDocData","updateRoomStatus","currentStatus","newPollsOrder","allPolls","getRoomResults","closedPolls","pollsResults","poll_result","validateRoomcode","call","put","fetchRooms","deleteRoom","addRoom","fetchUserAgenda","fetchHostAgenda","updateHostAgenda","addRoomPoll","changePollStatus","changeRoomStatus","roomSelector","select","roomState","newStatus","fetchUserPoll","sendVote","pollSelector","currentPoll","fetchHostPoll","updateHostPoll","changePollStatusPoll","pollState","fetchPollResults","fetchRoomResults","watcherSaga","takeLatest","getViewport","windowWidth","Breakpoints","ViewportHandler","props","initView","window","innerWidth","viewport","handleResize","bind","e","this","setState","addEventListener","React","cloneElement","children","Component","defaultProps","Colors","TextWrapper","styled","span","color","fontSize","lineHeight","Text","primitive","rest","as","WebFont","load","google","families","Fonts","fontConfig","fontFamily","fontWeight","twoExtraSmall","extraSmall","small","medium","large","extraLarge","BodyWrapper","Body","sizeConfig","threeExtraLarge","twoExtraLarge","threeExtraSmall","fourExtraSmall","fiveExtraSmall","JumboComponent","Jumbo","Wrapper","div","PageHeader","src","logo","alt","height","PageFooter","PageWrapper","CenterWrapper","BasePageWrapper","ComponentWrapper","MainPage","BasePage","history","onClick","backgroundColor","textColor","BodyText","JumboText","ButtonComponent","button","disabled","padding","buttonConfig","buttonHeight","Button","config","jumbo","bodyText","jumboText","borderColor","CardComponent","borderRadius","width","borderWidth","paddingConfig","getPadding","size","borderSmall","borderMedium","borderLarge","Card","CenterRowWrapper","LoginWrapper","HostWrapper","LoginCard","onHostLogin","onUserLogin","_renderLogin","_renderHostLogin","userLoginHandler","pushLandingPage","hostLoginHandler","fetch","text","responseText","userOrHost","LoginComponent","LoginPage","App","Login","GroupWrapper","ItemWrapper","lastChild","Group","Children","_renderOptions","ChildWrapper","ItemBase","renderChildren","HostRoomItem","roomTitle","onViewClick","viewButton","roomCodeText","Item","Icon","baseSize","IconWrapper","EditItem","iconColor","onDelete","AddItem","statusConfig","StatusText","args","getSizeConfig","getStatusConfig","dotIcon","cardColor","cardBorderColor","SectionWrapper","InnerWrapper","HeaderWrapper","HeaderTextWrapper","HeaderButtonWrapper","ScrollableWrapper","FooterWrapper","SecondaryCard","header","headerButton","footer","_renderHeader","_renderFooter","child","section","headerComponent","headerColor","renderHeader","PrimaryCard","sections","TertiaryCard","renderedSections","content","_renderSection","StatusTertiaryCard","renderSection","SectionGroup","onAdd","items","addItems","HostDashCard","statusList","sectionRooms","DashComponent","connect","dispatch","onFetchRooms","onDeleteRoom","onAddRoom","useEffect","SideBarWrapper","HorizontalSideBarWrapper","VerticalComponentWrapper","MainComponentWrapper","VerticalPage","mainComponent","sideContent","HorizontalPage","SideBarPage","AgendaItem","pollTitle","hostButton","onStatusClick","statusText","statusButtonConfig","HostAgendaItem","nextStatus","statusButton","ButtonWrapper","EditButton","HostAgendaCard","onEditClick","onStatusButtonClick","openPolls","pendingPolls","placeholder","fontColor","TextAreaComponent","textarea","placeholderColor","TextArea","InputFieldComponent","InputField","labelColor","LabelWrapper","Input","onChange","inputProps","component","label","DraggableItem","DragHandle","DragItem","handleColor","draggableId","provided","draggableProps","ref","innerRef","dragHandleProps","DropContainer","InnerList","nextProps","DragGroup","onDragEnd","destination","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","droppableId","droppableProps","EditingGroup","awaitSetState","stateProps","prevProps","find","addItem","HostEditAgendaItem","buttonText","Header","HeaderButton","AddComponent","onAddClick","PendingSectionGroup","onDeleteClick","HostEditAgendaCard","onPollEditClick","onTitleChange","HeadingWrapper","SectionHeadingWrapper","HorizontalSectionWrapper","PanelHeader","StatusButton","PanelSection","HostStatusCard","getSize","SideBarComponent","AgendaComponent","cardProps","onFetchAgenda","onUpdatePollStatus","onUpdateStatus","match","params","handleChange","handleSubmit","TextInputWrapper","TitleWrapper","Title","titlePadding","CodeInput","inputPadding","EnterButton","RoomCodeForm","RoomcodeWrapper","RoomcodeComponent","RoomcodeCard","updateCode","validateCode","resetCode","UserAgendaCard","OptionGroup","_handleClick","_handleClickMulti","_handleClickSngl","clicked","selectedOptions","iconType","itemProps","newSelected","onSelect","propTypes","PropTypes","func","bool","ExtraPropTypes","Bubble","renderClicked","renderUnClicked","CheckBox","buttonColor","buttonType","ChildrenWrapper","IconButtonWrapper","ExtraIconWrapper","OptionWrapper","OptionBase","iconButton","extraIcons","renderExtraIcons","Option","bubble","add","checkbox","TextOption","InputOption","inputType","submitIcon","VotingOption","childProps","SubmitWrapper","unfilledInput","subText","submit","unselected","resubmit","pollpending","submitloading","SubmitButton","renderButton","renderText","HostPollCard","pollData","_editButton","_submitButton","optionComponents","_renderOptionGroup","AdderOption","deleteIcon","EditingOption","HostEditPollOptionItem","object","Description","EditPollCard","onDescriptionChange","onOptionChange","renderOptionGroup","HorizontalContentWrapper","PanelContent","HostEditPanelCard","updateSettings","typeSelection","otherSelection","pollType","onTypeClick","onOtherClick","PollComponent","onFetchPoll","onToggleEdit","onAddOption","onDeleteOption","onUpdateOrder","onUpdateOption","onUpdateTitle","onUpdateDescription","onUpdateSettings","pollcode","location","replace","UserPollCard","submittedOptions","onSubmit","onInputChange","_description","submitButtonStatus","BarChart","dataLabels","dataValues","labels","datasets","showLabel","hoverBackgroundColor","hoverBorderColor","legend","display","scales","xAxes","ticks","beginAtZero","createRef","PDFPreviewCard","PollResultsCard","_header","_chart","_children","onFetchResults","toPDF","formatResultsAsCSV","csv","numVotes","HiddenWrapper","csvLinkStyle","RoomResultsCard","filename","_toPDFButton","style","_renderCharts","chartComponents","MyPDF","forwardRef","_pdfChildren","Routes","path","exact","HostDash","Roomcode","HostAgenda","UserAgenda","HostPoll","UserPoll","PollResults","RoomResults","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","className","getElementById"],"mappings":"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","file":"static/js/main.fa8596ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.41be865c.png\";","import ActionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  roomcode: '',\r\n  submitted: false,\r\n  loading: false,\r\n  error: false,\r\n};\r\n\r\nlet result;\r\n\r\nexport default function reducePoll(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n\r\n    case ActionTypes.roomcode.UPDATE_ROOMCODE:\r\n      result = action.value;\r\n      // console.log(result);\r\n      return {\r\n        ...state,\r\n        roomcode: result,\r\n        submitted: false,\r\n        error: false,\r\n      };\r\n    case ActionTypes.roomcode.CHECK_ROOMCODE_START:\r\n      return {\r\n        ...state,\r\n        submitted: true,\r\n        loading: true,\r\n        error: false,\r\n      };\r\n    case ActionTypes.roomcode.CHECK_ROOMCODE_SUCCESS:\r\n        console.log('j')\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.roomcode.CHECK_ROOMCODE_ERROR:\r\n      console.log('je')\r\n      return {\r\n        ...state,\r\n        roomcode: '',\r\n        loading: false,\r\n        error: true,\r\n      };\r\n    case ActionTypes.roomcode.RESET_ROOMCODE:\r\n      return {\r\n        ...state,\r\n        roomcode: '',\r\n        submitted: false,\r\n        loading: false,\r\n        error: false,\r\n      }\r\n\r\n  }\r\n  // console.log(state);\r\n  return state;\r\n}\r\n\r\n// export default function;\r\n","\r\nconst ActionTypes = {\r\n    roomcode: {\r\n      UPDATE_ROOMCODE: 'UPDATE_ROOMCODE',\r\n      CHECK_ROOMCODE_START: 'CHECK_ROOMCODE_START',\r\n      CHECK_ROOMCODE_SUCCESS: 'CHECK_ROOMCODE_SUCCESS',\r\n      CHECK_ROOMCODE_ERROR: 'CHECK_ROOMCODE_ERROR',\r\n      RESET_ROOMCODE: 'RESET_ROOMCODE'\r\n    },\r\n    hostdash: {\r\n      FETCH_ROOMS_START: 'FETCH_ROOMS_START',\r\n      FETCH_ROOMS_SUCCESS: 'FETCH_ROOMS_SUCCESS',\r\n      FETCH_ROOMS_ERROR: 'FETCH_ROOMS_ERROR',\r\n      DELETE_ROOM_START: 'DELETE_ROOM_START',\r\n      DELETE_ROOM_SUCCESS: 'DELETE_ROOM_SUCCESS',\r\n      DELETE_ROOM_ERROR: 'DELETE_ROOM_ERROR',\r\n      ADD_ROOM_START: 'ADD_ROOM_START',\r\n      ADD_ROOM_SUCCESS: 'ADD_ROOM_SUCCESS',\r\n      ADD_ROOM_ERROR: 'ADD_ROOM_ERROR'\r\n    },\r\n    useragenda: {\r\n      FETCH_AGENDA_START: 'FETCH_USER_AGENDA_START',\r\n      FETCH_AGENDA_SUCCESS: 'FETCH_USER_AGENDA_SUCCESS',\r\n      FETCH_AGENDA_ERROR: 'FETCH_USER_AGENDA_ERROR',\r\n    },\r\n    hostagenda: {\r\n      FETCH_AGENDA_START: 'FETCH_HOST_AGENDA_START',\r\n      FETCH_AGENDA_SUCCESS: 'FETCH_HOST_AGENDA_SUCCESS',\r\n      FETCH_AGENDA_ERROR: 'FETCH_HOST_AGENDA_ERROR',\r\n\r\n      UPDATE_AGENDA_START: 'UPDATE_AGENDA_START',\r\n      UPDATE_AGENDA_SUCCESS: 'UPDATE_AGENDA_SUCCESS',\r\n      UPDATE_AGENDA_ERROR: 'UPDATE_AGENDA_ERROR',\r\n\r\n      ADD_POLL_START: 'ADD_POLL_START',\r\n      ADD_POLL_SUCCESS: 'ADD_POLL_SUCCESS',\r\n      ADD_POLL_ERROR: 'ADD_POLL_ERROR',\r\n\r\n      TOGGLE_EDIT: 'TOGGLE_EDIT_ROOM',\r\n      UPDATE_TITLE: 'UPDATE_ROOM_TITLE',\r\n      DELETE_POLL: 'DELETE_POLL_ROOM',\r\n      UPDATE_ORDER: 'UPDATE_ORDER_ROOM',\r\n\r\n      UPDATE_POLL_STATUS_START: 'UPDATE_POLL_STATUS_AGENDA_START',\r\n      UPDATE_POLL_STATUS_SUCCESS: 'UPDATE_POLL_STATUS_AGENDA_SUCCESS',\r\n      UPDATE_POLL_STATUS_ERROR: 'UPDATE_POLL_STATUS_AGENDA_ERROR',\r\n\r\n      UPDATE_ROOM_STATUS_START: 'UPDATE_ROOM_STATUS_AGENDA_START',\r\n      UPDATE_ROOM_STATUS_SUCCESS: 'UPDATE_ROOM_STATUS_AGENDA_SUCCESS',\r\n      UPDATE_ROOM_STATUS_ERROR: 'UPDATE_ROOM_STATUS_AGENDA_ERROR',\r\n    },\r\n    userpoll: {\r\n      FETCH_POLL_START: 'FETCH_USER_POLL_START',\r\n      FETCH_POLL_SUCCESS: 'FETCH_USER_POLL_SUCCESS',\r\n      FETCH_POLL_ERROR: 'FETCH_USER_POLL_ERROR',\r\n      UPDATE_SELECTION: 'UPDATE_SELECTION_OPTIONS',\r\n      SUBMIT_VOTE_START: 'SUBMIT_VOTE_START',\r\n      SUBMIT_VOTE_SUCCESS: 'SUBMIT_VOTE_SUCCESS',\r\n      SUBMIT_VOTE_ERROR: 'SUBMIT_VOTE_ERROR',\r\n      UPDATE_SUBMISSION_STATUS: 'UPDATE_SUBMISSION_STATUS',\r\n      UPDATE_INPUT: 'USER_UPDATE_INPUT',\r\n    },\r\n    hostpoll: {\r\n      FETCH_POLL_START: 'FETCH_HOST_POLL_START',\r\n      FETCH_POLL_SUCCESS: 'FETCH_HOST_POLL_SUCCESS',\r\n      FETCH_POLL_ERROR: 'FETCH_HOST_POLL_ERROR',\r\n\r\n      TOGGLE_EDIT: 'HOST_TOGGLE_EDIT',\r\n      ADD_POLL: 'HOST_ADD_POLL',\r\n      DELETE_POLL: 'HOST_DELETE_POLL',\r\n      UPDATE_ORDER: 'HOST_UPDATE_ORDER',\r\n      UPDATE_OPTION: 'HOST_UPDATE_OPTION',\r\n      UPDATE_TITLE: 'HOST_UPDATE_TITLE',\r\n      UPDATE_DESCRIPTION: 'HOST_UPDATE_DESCRIPTION',\r\n      UPDATE_SETTINGS: 'HOST_UPDATE_SETTINGS',\r\n\r\n      UPDATE_POLL_START: 'UPDATE_POLL_START',\r\n      UPDATE_POLL_SUCCESS: 'UPDATE_POLL_SUCCESS',\r\n      UPDATE_POLL_ERROR: 'UPDATE_POLL_ERROR',\r\n\r\n      UPDATE_POLL_STATUS_START: 'UPDATE_POLL_STATUS_POLL_START',\r\n      UPDATE_POLL_STATUS_SUCCESS: 'UPDATE_POLL_STATUS_POLL_SUCCESS',\r\n      UPDATE_POLL_STATUS_ERROR: 'UPDATE_POLL_STATUS_POLL_ERROR',\r\n    },\r\n    pollresults: {\r\n      FETCH_RESULTS_START: 'FETCH_RESULTS_START',\r\n      FETCH_RESULTS_SUCCESS: 'FETCH_RESULTS_SUCCESS',\r\n      FETCH_RESULTS_ERROR: 'FETCH_RESULTS_ERROR',\r\n    },\r\n    roomresults: {\r\n      FETCH_RESULTS_START: 'FETCH_ROOM_RESULTS_START',\r\n      FETCH_RESULTS_SUCCESS: 'FETCH_ROOM_RESULTS_SUCCESS',\r\n      FETCH_RESULTS_ERROR: 'FETCH_ROOM_RESULTS_ERROR',\r\n    }\r\n};\r\n\r\nexport default ActionTypes;\r\n","// import PollItem from '../../components/PollItem';\r\nimport ActionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  rooms: null,\r\n  order: {\r\n    'open': [],\r\n    'closed': [],\r\n    'pending': []\r\n  },\r\n  loading: false,\r\n  error: null,\r\n}\r\n\r\nlet result;\r\n\r\nexport default function reduceHostDash(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case ActionTypes.hostdash.FETCH_ROOMS_START:\r\n      // console.log('here');\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostdash.FETCH_ROOMS_SUCCESS:\r\n      result = action.response;\r\n      // console.log(result);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        rooms: result.rooms,\r\n        order: result.order\r\n      };\r\n    case ActionTypes.hostdash.FETCH_ROOMS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n\r\n\r\n    case ActionTypes.hostdash.DELETE_ROOM_START:\r\n    return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostdash.DELETE_ROOM_SUCCESS:\r\n      result = action.response;\r\n      // console.log(result);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        rooms: result.rooms,\r\n        order: result.order\r\n      };\r\n    case ActionTypes.hostdash.DELETE_ROOM_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n\r\n    case ActionTypes.hostdash.ADD_ROOM_START:\r\n      console.log('jer')\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostdash.ADD_ROOM_SUCCESS:\r\n      result = action.response;\r\n      console.log(result);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        rooms: result.rooms,\r\n        order: result.order\r\n      };\r\n    case ActionTypes.hostdash.ADD_ROOM_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n  // console.log(state);\r\n  return state;\r\n}\r\n\r\n// export default function;\r\n","// import PollItem from '../../components/PollItem';\r\nimport ActionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  title: null,\r\n  status: null,\r\n  polls: null,\r\n  order: {\r\n    'open': [],\r\n    'closed': [],\r\n    'pending': []\r\n  },\r\n  loading: false,\r\n  error: null,\r\n}\r\n\r\nlet result;\r\n\r\nexport default function reduceUserAgenda(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case ActionTypes.useragenda.FETCH_AGENGA_START:\r\n      console.log('here');\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.useragenda.FETCH_AGENDA_SUCCESS:\r\n      result = action.response;\r\n      console.log(result)\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        title: result.title,\r\n        status: result.status,\r\n        polls: result.polls,\r\n        order: result.order\r\n      };\r\n    case ActionTypes.useragenda.FETCH_AGENDA_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n    default:\r\n      return state;\r\n\r\n  }\r\n  return state;\r\n}\r\n","// import { generatePollId } from '../MockDataFunctions';\r\nimport ActionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  title: null,\r\n  status: null,\r\n  polls: null,\r\n  order: {\r\n    'open': [],\r\n    'closed': [],\r\n    'pending': []\r\n  },\r\n  editing: false,\r\n  loading: false,\r\n  error: null,\r\n}\r\n\r\nlet result;\r\nlet newPolls;\r\nlet newOrder;\r\n\r\nexport default function reduceHostAgenda(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case ActionTypes.hostagenda.FETCH_AGENGA_START:\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostagenda.FETCH_AGENDA_SUCCESS:\r\n      result = action.response;\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        title: result.title,\r\n        status: result.status,\r\n        polls: result.polls,\r\n        order: result.order\r\n      };\r\n    case ActionTypes.hostagenda.FETCH_AGENDA_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n\r\n    case ActionTypes.hostagenda.UPDATE_TITLE:\r\n      return {\r\n        ...state,\r\n        title: action.event.target.value,\r\n      };\r\n\r\n    case ActionTypes.hostagenda.ADD_POLL_START:\r\n      console.log('here')\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostagenda.ADD_POLL_SUCCESS:\r\n      result = action.response;\r\n\r\n      newPolls = {...state.polls};\r\n      newPolls[result.newPoll.id] = result.newPoll;\r\n\r\n      newOrder = {...state.order};\r\n      const newPending = newOrder['pending'].map(i => i)\r\n      newPending.push(result.newPoll.id);\r\n\r\n      return {\r\n        ...state,\r\n        polls: newPolls,\r\n        order: { ...newOrder,\r\n                 'pending': newPending\r\n        }\r\n      };\r\n    case ActionTypes.hostagenda.ADD_POLL_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n\r\n\r\n    case ActionTypes.hostagenda.DELETE_POLL:\r\n      newPolls = {...state.polls};\r\n      delete newPolls[action.poll_id];\r\n\r\n      newOrder = {...state.order}\r\n      newOrder['pending'] = state.order['pending'].filter(i => i != action.poll_id)\r\n\r\n      return {\r\n        ...state,\r\n        polls: newPolls,\r\n        order: newOrder\r\n      };\r\n\r\n\r\n    case ActionTypes.hostagenda.UPDATE_AGENGA_START:\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostagenda.UPDATE_AGENDA_SUCCESS:\r\n      result = action.response;\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        title: result.title,\r\n        status: result.status,\r\n        polls: result.polls,\r\n        order: result.order\r\n      };\r\n    case ActionTypes.hostagenda.UPDATE_AGENDA_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n    case ActionTypes.hostagenda.TOGGLE_EDIT:\r\n      // console.log('here')\r\n      const editing = !state.editing;\r\n      return {\r\n        ...state,\r\n        editing: editing\r\n      }\r\n\r\n\r\n    case ActionTypes.hostagenda.UPDATE_ORDER:\r\n\r\n      newOrder = {...state.order};\r\n      newOrder['pending'] = action.newPendingOrder;\r\n\r\n      return {\r\n        ...state,\r\n        order: newOrder\r\n      }\r\n    default:\r\n      return state;\r\n\r\n    case ActionTypes.hostagenda.UPDATE_POLL_STATUS_START:\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostagenda.UPDATE_POLL_STATUS_SUCCESS:\r\n      result = action.response;\r\n\r\n      return {\r\n        ...state,\r\n        polls: {...result.polls},\r\n        order: { ...result.order}\r\n      };\r\n    case ActionTypes.hostagenda.UPDATE_POLL_STATUS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n\r\n    case ActionTypes.hostagenda.UPDATE_ROOM_STATUS_START:\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostagenda.UPDATE_ROOM_STATUS_SUCCESS:\r\n      result = action.response;\r\n\r\n      return {\r\n        ...state,\r\n        status: result.status,\r\n        polls: {...result.polls},\r\n        order: { ...result.order}\r\n      };\r\n    case ActionTypes.hostagenda.UPDATE_ROOM_STATUS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n\r\n  }\r\n  return state;\r\n}\r\n","// import PollItem from '../../components/PollItem';\r\nimport ActionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  poll: {  title: null,\r\n    status: null,\r\n    type: null,\r\n    description: null,\r\n    options: null,\r\n    optionsOrder: [],\r\n    userInputOption: false,\r\n  },\r\n  userInput: {\r\n    id: '000',\r\n    value: '',\r\n    submissionId: null,\r\n    submissionValue: null,\r\n  },\r\n  pollStatus: {\r\n    selection: {},\r\n    submission: {},\r\n    submitStatus: 'unselected'\r\n  },\r\n  submitLoading: false,\r\n  loading: false,\r\n  error: null,\r\n}\r\n\r\nconst submissionStatus = (state) => {\r\n\r\n  let status;\r\n\r\n  if (!state.pollStatus.selected && !state.pollStatus.submitted) {\r\n    status = 'unselected'\r\n  }\r\n  else if (state.pollStatus.selected && !state.pollStatus.submitted) {\r\n    if (state.pollStatus.selection['000'] && state.userInput.value === ''){\r\n      status = 'unfilledInput'\r\n    }\r\n    else { status= 'submit' }\r\n  }\r\n  else if (!state.pollStatus.selected && state.pollStatus.submitted) {\r\n    status = 'submitted'\r\n  }\r\n  else {\r\n    status = 'submitted'\r\n    // let resubmit = false;\r\n    for (let i=0; i < state.poll.optionsOrder.length; i++) {\r\n      let id = state.poll.optionsOrder[i];\r\n      if (state.pollStatus.selection[id] !== state.pollStatus.submission[id]) {\r\n        status = 'resubmit'\r\n        // resubmit = true;\r\n        break;}\r\n    }\r\n    // console.log(resubmit);\r\n    if (state.pollStatus.selection['000']) {\r\n\r\n      if (!state.pollStatus.submission['000'] ) {\r\n        if (state.userInput.value !== '') {\r\n          // resubmit = true;\r\n          status = 'resubmit'\r\n        }\r\n        else { status = 'unfilledInput'}\r\n      }\r\n      else {\r\n        if (state.userInput.value !== state.userInput.submissionValue) {\r\n          if (state.userInput.value !== '') {\r\n            status = 'resubmit'\r\n            // resubmit = true;\r\n          }\r\n          else { status = 'unfilledInput'}\r\n        }\r\n      }\r\n\r\n      // if (!state.pollStatus.submission['000'] && state.userInput.value !== ''){\r\n      //   console.log('1')\r\n      //   resubmit = true;\r\n      // }\r\n      // else if (state.pollStatus.submission['000']){\r\n      //   if (state.userInput.value !== '' && state.userInput.value !== state.userInput.submissionValue){\r\n      //     console.log('2')\r\n      //     resubmit = true;\r\n      //   }\r\n      //   else if (resubmit && state.userInput.value === state.userInput.submissionValue){\r\n      //     resubmit = true;\r\n      //   }\r\n      //   else { resubmit = false }\r\n      // }\r\n      // else { resubmit = false }\r\n    }\r\n    else if (state.pollStatus.submission['000']) {\r\n      status = 'resubmit'\r\n      // resubmit = true;\r\n    }\r\n\r\n    // resubmit ? status = 'resubmit' : status = 'submitted';\r\n  }\r\n\r\n  return status;\r\n}\r\n\r\nlet result;\r\nlet newState;\r\n\r\nexport default function reduceUserPoll(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case ActionTypes.userpoll.FETCH_POLL_START:\r\n      console.log('here');\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.userpoll.FETCH_POLL_SUCCESS:\r\n      result = action.response;\r\n      console.log(result)\r\n      return {\r\n        ...state,\r\n        poll: {...result},\r\n        loading: false,\r\n      };\r\n    case ActionTypes.userpoll.FETCH_POLL_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n\r\n    case ActionTypes.userpoll.UPDATE_SELECTION:\r\n\r\n      let selected = false;\r\n      for (let i=0; i < state.poll.optionsOrder.length; i++) {\r\n        let id = state.poll.optionsOrder[i];\r\n        if (action.selection[id]) { selected = true; break;}\r\n      }\r\n      if (state.poll.userInputOption && action.selection['000']) {\r\n        selected = true;\r\n      }\r\n\r\n      newState = {\r\n        ...state,\r\n        pollStatus: {\r\n          ...state.pollStatus,\r\n          selection: action.selection,\r\n          selected: selected,\r\n        },\r\n      }\r\n\r\n      return {\r\n        ...newState,\r\n        pollStatus: {\r\n          ...newState.pollStatus,\r\n          submitStatus: submissionStatus(newState)\r\n        }\r\n      };\r\n\r\n    case ActionTypes.userpoll.SUBMIT_VOTE_START:\r\n      console.log('here');\r\n      return { ...state, submitLoading: true, loading: true, error: null };\r\n    case ActionTypes.userpoll.SUBMIT_VOTE_SUCCESS:\r\n\r\n      console.log(state);\r\n      result = action.response;\r\n\r\n      let inputSubmission = state.pollStatus.selection['000'] ? state.userInput.value : null;\r\n\r\n      console.log(action)\r\n      newState = {\r\n        ...state,\r\n        userInput: {\r\n          ...state.userInput,\r\n          submissionId: result.inputSubmissionId,\r\n          submissionValue: inputSubmission\r\n        },\r\n        pollStatus: {\r\n          ...state.pollStatus,\r\n          submission: {...state.pollStatus.selection},\r\n          submitted: true,\r\n        },\r\n        submitLoading: false,\r\n        loading: false,\r\n      }\r\n\r\n      console.log(newState)\r\n\r\n      return {\r\n        ...newState,\r\n        pollStatus: {\r\n          ...newState.pollStatus,\r\n          submitStatus: submissionStatus(newState)\r\n        }\r\n      }\r\n\r\n      case ActionTypes.userpoll.SUBMIT_VOTE_ERROR:\r\n        return {\r\n          ...state,\r\n          submitLoading: false,\r\n          loading: false,\r\n          error: true\r\n        };\r\n\r\n      // newState = {\r\n      //   ...state,\r\n      //   submission: {...state.selection},\r\n      //   submitted: true,\r\n      //   inputSubmission: inputSubmission\r\n      // }\r\n      //\r\n      // return {\r\n      //   ...newState,\r\n      //   submissionStatus: submissionStatus(newState)\r\n\r\n    case ActionTypes.userpoll.UPDATE_INPUT:\r\n\r\n      console.log(action);\r\n\r\n      newState = {\r\n        ...state,\r\n        userInput: {\r\n          ...state.userInput,\r\n          value: action.event.target.value,\r\n        }\r\n      }\r\n      return {\r\n        ...newState,\r\n        pollStatus: {\r\n          ...newState.pollStatus,\r\n          submitStatus: submissionStatus(newState)\r\n        }\r\n      }\r\n    default:\r\n      return state;\r\n\r\n  }\r\n  return state;\r\n}\r\n","export const optionBase = (id) => {\r\n  return {\r\n    id: id,\r\n    value: 'Option'\r\n  }\r\n}\r\n\r\nexport const pollBase = (id) => {\r\n  return {\r\n    id: id,\r\n    title: 'Poll',\r\n    status: 'pending',\r\n    type: 'single',\r\n    description: 'Poll description.',\r\n    options: {\r\n\t    '00': {count: 0, id: '00', value: 'Yes'},\r\n      '01': {count: 0, id: '01', value: 'No'},\r\n      '02': {count: 0, id: '02', value: 'Abstain'},\r\n    },\r\n    userInputOption: false,\r\n    optionsOrder: ['00', '01', '02'],\r\n    showResults: true,\r\n    pollHash: \"\",\r\n    results: {\r\n      '00': {id: '00', count: 0},\r\n      '01': {id: '01', count: 0},\r\n      '02': {id: '02', count: 0},\r\n    }\r\n  }\r\n}\r\n\r\nexport const roomBase = (id) => {\r\n  return {\r\n    id: id,\r\n    status: 'pending',\r\n    title: 'Room',\r\n    polls: {\r\n      '00': {\r\n        id: '00',\r\n        title: 'Poll',\r\n        status: 'pending',\r\n        type: 'single',\r\n        description: 'Poll description.',\r\n        options: {\r\n          '00': {count: 0, id: '00', value: 'Yes'},\r\n          '01': {count: 0, id: '01', value: 'No'},\r\n          '02': {count: 0, id: '02', value: 'Abstain'},\r\n        },\r\n        userInputOption: false,\r\n        optionsOrder: ['00', '01', '02'],\r\n        showResults: true,\r\n        results: {\r\n          '00': {id: '00', count: 0},\r\n          '01': {id: '01', count: 0},\r\n          '02': {id: '02', count: 0},\r\n        }\r\n      },\r\n      order: {\r\n        'open': [],\r\n        'closed': [],\r\n        'pending': ['00']\r\n      },\r\n    },\r\n    roomHash: \"\",\r\n    hosts: []\r\n  }\r\n}\r\n","import mockData from './mockData'\r\nimport { optionBase, pollBase, roomBase, } from './dataBases'\r\n\r\n\r\n\r\n\r\nfunction fetchPollData(room_id, poll_id) {\r\n  return mockData.rooms[room_id].polls[poll_id];\r\n}\r\n\r\nfunction checkRoomcode(room_id) {\r\n  if (mockData.rooms[room_id]) {\r\n    return {}\r\n  }\r\n  else {\r\n    throw \"Room undefined.\"\r\n  }\r\n}\r\n\r\nfunction fetchHostRooms() {\r\n  const { order, ...rooms } = mockData.rooms;\r\n\r\n  return {\r\n    rooms: rooms,\r\n    order: order\r\n  }\r\n}\r\n\r\nfunction deleteHostRoom(room_id) {\r\n  let { order, ...rooms } = mockData.rooms;\r\n  const room = mockData.rooms[room_id]\r\n\r\n  const newOrder = order[room.status].filter((i) => i != room_id);\r\n  order[room.status] = newOrder;\r\n\r\n  delete rooms[room_id];\r\n\r\n  mockData.rooms = { order, ...rooms}\r\n  return {\r\n    rooms: rooms,\r\n    order: order\r\n  }\r\n\r\n}\r\n\r\nfunction generateRoomCode() {\r\n  const code = Math.floor(Math.random() * 10000);\r\n  const roomcode = `0000${code}`;\r\n\r\n  return roomcode.slice(-4);\r\n}\r\n\r\nfunction addHostRoom() {\r\n  let roomcode = generateRoomCode();\r\n  while (mockData[roomcode] != undefined ) {\r\n    roomcode = generateRoomCode();\r\n  }\r\n\r\n  const room = roomBase(roomcode);\r\n\r\n\r\n  mockData.rooms[roomcode] = room;\r\n  console.log(mockData)\r\n  mockData.rooms.order['pending'].push(roomcode);\r\n  console.log(mockData)\r\n\r\n  const { order, ...rooms } = mockData.rooms;\r\n  console.log(mockData.rooms)\r\n  return {\r\n    rooms: rooms,\r\n    order: order\r\n  }\r\n}\r\n\r\n\r\nfunction fetchAgenda(room_id) {\r\n\r\n  console.log('fetch')\r\n\r\n  const room = mockData.rooms[room_id];\r\n  const { order, ...rest } = room.polls;\r\n\r\n  console.log(room);\r\n\r\n  return {\r\n    title: room.title,\r\n    status: room.status,\r\n    polls: {...rest},\r\n    order: order\r\n  }\r\n}\r\n\r\nfunction updateRoom (roomcode, roomState) {\r\n\r\n  console.log(roomState)\r\n\r\n  let room = {...mockData.rooms[roomcode]};\r\n  let newPolls = {...room.polls,\r\n                  ...roomState.polls,\r\n                  order: roomState.order }\r\n  room.title = roomState.title;\r\n  room.status = roomState.status;\r\n  room.polls = newPolls;\r\n\r\n  mockData.rooms[roomcode] = room;\r\n\r\n  console.log('updated');\r\n  console.log(mockData)\r\n\r\n  return {\r\n    ...roomState\r\n  }\r\n}\r\n\r\nfunction generatePollId() {\r\n  const id = Math.floor(Math.random() * 100);\r\n  const poll_id = `00${id}`;\r\n\r\n  return poll_id.slice(-2);\r\n}\r\n\r\nfunction addPoll(roomcode) {\r\n\r\n  let poll_id = generatePollId();\r\n  while (mockData.rooms[roomcode].polls[poll_id] != undefined ) {\r\n    poll_id = generatePollId();\r\n  }\r\n\r\n  return {\r\n    newPoll: pollBase(poll_id)\r\n  }\r\n}\r\n\r\nfunction updatePoll (roomcode, pollcode, pollState) {\r\n  console.log(pollState)\r\n\r\n  let room = {...mockData.rooms[roomcode]};\r\n  let poll = {...room.polls[pollcode]};\r\n  console.log(poll)\r\n  room.polls[pollcode] = {\r\n    ...room.polls[pollcode],\r\n    ...pollState\r\n  };\r\n\r\n  mockData.rooms[roomcode] = room;\r\n\r\n  console.log(mockData)\r\n\r\n  console.log('updated');\r\n  console.log(pollState)\r\n\r\n  return {\r\n    ...pollState\r\n  }\r\n}\r\n\r\nfunction  updateRoomStatus(roomcode, newStatus) {\r\n\r\n  const currentStatus = mockData.rooms[roomcode].status;\r\n  console.log(currentStatus)\r\n  let newRoomOrder = mockData.rooms.order;\r\n  console.log(newRoomOrder)\r\n  newRoomOrder[currentStatus] = newRoomOrder[currentStatus].filter((i) => i !== roomcode);\r\n  console.log(newRoomOrder)\r\n  console.log(newStatus)\r\n  newRoomOrder[newStatus].push(roomcode);\r\n  console.log(newRoomOrder)\r\n\r\n  if (newStatus === 'closed') {\r\n\r\n    let newPollsOrder = mockData.rooms[roomcode].polls.order;\r\n    console.log(newPollsOrder)\r\n    let allPolls = newPollsOrder['closed'].concat(newPollsOrder['open'], newPollsOrder['pending']);\r\n    newPollsOrder = {\r\n      'closed': allPolls,\r\n      'open': [],\r\n      'pending': [],\r\n    }\r\n\r\n    console.log(newPollsOrder)\r\n\r\n    for (let i = 0; i < allPolls.length; i++) {\r\n      let poll_id = allPolls[i];\r\n      mockData.rooms[roomcode].polls[poll_id].status = 'closed';\r\n    }\r\n\r\n    mockData.rooms[roomcode].polls.order = newPollsOrder;\r\n  }\r\n\r\n  mockData.rooms.order = newRoomOrder;\r\n  mockData.rooms[roomcode].status = newStatus;\r\n\r\n  console.log(mockData)\r\n\r\n  const { order, ...rest } = mockData.rooms[roomcode].polls;\r\n\r\n  return {\r\n    status: mockData.rooms[roomcode].status,\r\n    polls: {...rest},\r\n    order: order\r\n  }\r\n}\r\n\r\n\r\nfunction updatePollStatus(roomcode, pollcode, newStatus) {\r\n\r\n  if (mockData.rooms[roomcode].status === 'open') {\r\n\r\n    let newPoll = {...mockData.rooms[roomcode].polls[pollcode]};\r\n    const oldStatus = newPoll.status;\r\n    newPoll.status = newStatus;\r\n\r\n    const newOrder = {...mockData.rooms[roomcode].polls.order}\r\n    newOrder[oldStatus] = newOrder[oldStatus].filter(i => i !== pollcode);\r\n    newOrder[newStatus].push(pollcode);\r\n\r\n    mockData.rooms[roomcode].polls[pollcode] = {...newPoll};\r\n    mockData.rooms[roomcode].polls.order = {...newOrder};\r\n  }\r\n\r\n  const { order, ...rest } = mockData.rooms[roomcode].polls;\r\n\r\n  return {\r\n    polls: {...rest},\r\n    order: order\r\n  }\r\n}\r\n\r\nfunction generateOptionId() {\r\n  const id = Math.floor(Math.random() * 100);\r\n  const poll_id = `00${id}`;\r\n\r\n  return poll_id.slice(-2);\r\n}\r\n\r\nfunction getPollResults(room_id, poll_id) {\r\n\r\n  const poll = {...mockData.rooms[room_id].polls[poll_id]}\r\n  return {\r\n    title: poll.title,\r\n    description: poll.description,\r\n    optionsOrder: poll.optionsOrder,\r\n    options: {...poll.options},\r\n    results: {...poll.results}\r\n  }\r\n}\r\n\r\nfunction generateUserOptionId() {\r\n  const id = Math.floor(Math.random() * 1000);\r\n  const poll_id = `000${id}`;\r\n\r\n  return poll_id.slice(-3);\r\n}\r\n\r\nfunction submitVote(room_id, poll_id, selection, submission, userInput) {\r\n   const poll = mockData.rooms[room_id].polls[poll_id];\r\n\r\n   for (let i; i < poll.optionsOrder.length; i++) {\r\n     let option_id = poll.optionsOrder[i];\r\n     let count = poll.results[option_id].count;\r\n\r\n     if (submission[option_id]) { count = count - 1}\r\n     if (selection[option_id]) { count = count + 1}\r\n\r\n     poll.results[option_id].count = count;\r\n   }\r\n\r\n   let inputcode = null;\r\n   if (selection[userInput.id]) {\r\n     if (!userInput.submissionId) {\r\n       inputcode = generateUserOptionId();\r\n       while (poll.results[inputcode]) {\r\n         inputcode = generateUserOptionId();\r\n       }\r\n     }\r\n     else { inputcode = userInput.submissionId }\r\n\r\n     const userInputResult = {\r\n       id: inputcode,\r\n       value: userInput.value,\r\n       count: 1\r\n     }\r\n\r\n     poll.results[inputcode] = userInputResult;\r\n   }\r\n   else if (userInput.submissionId ){\r\n     delete poll.results[userInput.submissionId]\r\n   }\r\n   console.log(mockData.rooms[room_id].polls[poll_id].results)\r\n   mockData.rooms[room_id].polls[poll_id] = poll;\r\n\r\n   return {\r\n     submitted: true,\r\n     inputSubmissionId: inputcode\r\n   }\r\n}\r\n\r\nfunction getRoomResults(room_id) {\r\n\r\n  const room = {...mockData.rooms[room_id]}\r\n  console.log(room)\r\n  const polls = {...room.polls}\r\n  console.log(polls)\r\n  const closedPolls = polls.order['closed'];\r\n  console.log(closedPolls);\r\n\r\n  const pollsResults = {};\r\n\r\n  for (let i = 0; i < closedPolls.length; i++) {\r\n    const poll_id = closedPolls[i];\r\n    console.log(poll_id)\r\n    const poll_result = getPollResults(room_id, poll_id);\r\n    pollsResults[poll_id] = poll_result;\r\n  }\r\n\r\n  console.log(pollsResults);\r\n\r\n\r\n  return {\r\n    title: room.title,\r\n    order: closedPolls,\r\n    allResults: pollsResults,\r\n  }\r\n}\r\n\r\nexport { checkRoomcode, fetchPollData,\r\n         fetchHostRooms, deleteHostRoom, addHostRoom,\r\n         fetchAgenda, updateRoom, addPoll, updatePoll, updatePollStatus,\r\n         updateRoomStatus,\r\n        generateOptionId, getPollResults, getRoomResults, submitVote }\r\n","// import PollItem from '../../components/PollItem';\r\nimport ActionTypes from '../actionTypes';\r\nimport { generateOptionId } from '../MockDataFunctions';\r\n\r\nconst initialState = {\r\n  poll: {\r\n    title: null,\r\n    status: null,\r\n    type: null,\r\n    description: null,\r\n    options: null,\r\n    optionsOrder: [],\r\n    userInputOption: false,\r\n    showResults: true,\r\n  },\r\n  editing: false,\r\n  loading: false,\r\n  error: null,\r\n}\r\n\r\n\r\nlet result;\r\nlet newOptions;\r\nlet newOptionsOrder;\r\n\r\nexport default function reduceUserPoll(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case ActionTypes.hostpoll.FETCH_POLL_START:\r\n      console.log('here');\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostpoll.FETCH_POLL_SUCCESS:\r\n      result = action.response;\r\n      return {\r\n        ...state,\r\n        poll: {...result},\r\n        editing: action.location_state ? action.location_state.editing : false,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.hostpoll.FETCH_POLL_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n    case ActionTypes.hostpoll.TOGGLE_EDIT:\r\n      return {\r\n        ...state,\r\n        editing: !state.editing,\r\n      };\r\n    case ActionTypes.hostpoll.DELETE_POLL:\r\n      newOptions = {...state.poll.options};\r\n      delete newOptions[action.option_id];\r\n      newOptionsOrder = state.poll.optionsOrder.filter((i) => i !== action.option_id)\r\n\r\n      return {\r\n        ...state,\r\n        poll: {...state.poll,\r\n               options: newOptions,\r\n               optionsOrder: newOptionsOrder\r\n              }\r\n      };\r\n    case ActionTypes.hostpoll.ADD_POLL:\r\n      let option_id = generateOptionId();\r\n      while (state.poll.options[option_id] != undefined ) {\r\n        option_id = generateOptionId();\r\n      }\r\n\r\n      newOptions = {...state.poll.options};\r\n      newOptions[option_id] = {\r\n        id: option_id,\r\n        value: 'Option ' + option_id,\r\n        optionType: 'text'\r\n      };\r\n      newOptionsOrder = state.poll.optionsOrder.map(i => i);\r\n      newOptionsOrder.push(option_id);\r\n\r\n      return {\r\n        ...state,\r\n        poll: {...state.poll,\r\n               options: newOptions,\r\n               optionsOrder: newOptionsOrder\r\n              }\r\n      };\r\n\r\n    case ActionTypes.hostpoll.UPDATE_ORDER:\r\n      return {\r\n        ...state,\r\n        poll: {\r\n          ...state.poll,\r\n          optionsOrder: action.order,\r\n        }\r\n      }\r\n    case ActionTypes.hostpoll.UPDATE_OPTION:\r\n      newOptions = {...state.poll.options};\r\n      newOptions[action.option_id] = {\r\n        ...newOptions[action.option_id],\r\n        value: action.event.target.value,\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        poll: {...state.poll,\r\n               options: newOptions,\r\n              }\r\n      };\r\n    case ActionTypes.hostpoll.UPDATE_TITLE:\r\n\r\n      return {\r\n        ...state,\r\n        poll: {...state.poll,\r\n               title: action.event.target.value,\r\n              }\r\n      };\r\n\r\n    case ActionTypes.hostpoll.UPDATE_DESCRIPTION:\r\n\r\n      return {\r\n        ...state,\r\n        poll: {...state.poll,\r\n               description: action.event.target.value,\r\n              }\r\n      }\r\n    case ActionTypes.hostpoll.UPDATE_SETTINGS:\r\n      console.log(action.settings);\r\n      return {\r\n        ...state,\r\n        poll: {...state.poll,\r\n               ...action.settings,\r\n              }\r\n    }\r\n\r\n    case ActionTypes.hostpoll.UPDATE_POLL_START:\r\n      console.log('here');\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostpoll.UPDATE_POLL_SUCCESS:\r\n      result = action.response;\r\n      console.log(result)\r\n      return {\r\n        ...state,\r\n        poll: {...result},\r\n        loading: false,\r\n      };\r\n    case ActionTypes.hostpoll.UPDATE_POLL_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n\r\n    case ActionTypes.hostpoll.UPDATE_POLL_STATUS_START:\r\n      console.log('here 0');\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostpoll.UPDATE_POLL_STATUS_SUCCESS:\r\n      result = action.poll;\r\n      console.log(result)\r\n      return {\r\n        ...state,\r\n        poll: {...result},\r\n        loading: false,\r\n      };\r\n    case ActionTypes.hostpoll.UPDATE_POLL_STATUS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n\r\n    default:\r\n      return state;\r\n\r\n  }\r\n  return state;\r\n}\r\n","import ActionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  pollResults: {\r\n    optionsOrder: [],\r\n  },\r\n\r\n  loading: false,\r\n  error: false,\r\n};\r\n\r\nlet result;\r\n\r\nexport default function reducePollResult(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case ActionTypes.pollresults.FETCH_RESULTS_START:\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.pollresults.FETCH_RESULTS_SUCCESS:\r\n      result = action.response;\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        pollResults: result,\r\n      };\r\n    case ActionTypes.pollresults.FETCH_RESULTS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n    };\r\n  return state;\r\n}\r\n\r\n// export default function;\r\n","import ActionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  roomResults: {\r\n    title: null,\r\n    allResults: null,\r\n    order: [],\r\n  },\r\n\r\n  loading: false,\r\n  error: false,\r\n};\r\n\r\nlet result;\r\n\r\nexport default function reduceRoomResult(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case ActionTypes.roomresults.FETCH_RESULTS_START:\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.roomresults.FETCH_RESULTS_SUCCESS:\r\n      result = action.response;\r\n      console.log(result)\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        roomResults: {...result},\r\n      };\r\n    case ActionTypes.roomresults.FETCH_RESULTS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n    };\r\n  return state;\r\n}\r\n\r\n// export default function;\r\n","import { combineReducers } \t  from 'redux';\r\nimport roomcode               from './roomcode.reducer'\r\nimport hostdash  \t\t\t\t\t\t  from './hostdash.reducer';\r\nimport useragenda  \t\t\t\t\t  from './useragenda.reducer';\r\nimport hostagenda \t\t\t\t\t  from './hostagenda.reducer';\r\nimport userpoll               from './userpoll.reducer';\r\nimport hostpoll               from './hostpoll.reducer';\r\nimport pollresults            from './pollresults.reducer';\r\nimport roomresults            from './roomresults.reducer';\r\n\r\nexport default combineReducers({\r\n  roomcode,\r\n  hostdash,\r\n  useragenda,\r\n  hostagenda,\r\n  userpoll,\r\n  hostpoll,\r\n  pollresults,\r\n  roomresults,\r\n});\r\n\r\n// export default combineReducers({\r\n// \tpoll,\r\n// \troomcode,\r\n// \tmeetingroom,\r\n// });\r\n","import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyC6IvTrHvamb83DUmxCJQCOIJCsQHce4wA\",\r\n  authDomain: \"faculty-voting-9ad15.firebaseapp.com\",\r\n  databaseURL: \"https://faculty-voting-9ad15.firebaseio.com\",\r\n  projectId: \"faculty-voting-9ad15\",\r\n  storageBucket: \"faculty-voting-9ad15.appspot.com\",\r\n  messagingSenderId: \"627933747870\",\r\n  appId: \"1:627933747870:web:348d54dac28eab6f84b98f\",\r\n  measurementId: \"G-VB13V4GH27\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// const firestore = firebase.firestore();\r\n// const fireauth = firebase.auth();\r\n\r\nexport default firebase;\r\n","var crypto = require(\"crypto\");\r\n//UNCOMMENT ONCE ON SERVER\r\n// var fs = require(\"fs\");\r\n\r\n// TODO (Jack): Change this so the key is stored on the server or in the directory\r\n// let tempKey = \"test-key\";\r\nlet SECRETKEY = null;\r\n\r\n\r\n/*\r\n// UNCOMMENT ONCE ON SERVER\r\nconst readSecretKey = async () => {\r\n    // Reads the secret key in from 'secret_key.txt'\r\n    // code from\r\n    // https://stackoverflow.com/questions/5784621/how-to-read-binary-files-byte-by-byte-in-node-js\r\n    SECRETKEY = fs.readFile('secret_key.txt', function(err, data) {\r\n\tif (err) {\r\n\t    console.log(err);\r\n\t}\r\n    });\r\n}\r\n\r\n*/\r\n// This is a dummy func since we can't do file reading on react\r\nconst readSecretKey = async () => {\r\n    SECRETKEY = \"placeholder secret key\";\r\n}\r\n\r\n    \r\nconst generatePollMsg = async (poll) => {\r\n    let msg = \"\";\r\n    msg += \"id=\" + poll['id'] + \";\";\r\n    msg += \"title=\" + poll['title'] + \";\";\r\n    msg += \"status=\" + poll['status'] + \";\";\r\n    msg += \"type=\" + poll['type'] + \";\";\r\n    msg += \"desc=\" + poll['description'] + \";\";\r\n    msg += \"userInputOption=\" + poll['userInputOption'] + \";\";\r\n    msg += \"optionsOrder=\" + JSON.stringify(poll['optionsOrder']) + \";\";\r\n    msg += \"showResults=\" + poll['showResults'] + \";\";\r\n    msg += \"options={\";\r\n    const optKeys = Object.keys(poll['options']).sort();\r\n    optKeys.forEach((key, index) => {\r\n\tmsg += \"\" + key + \":{\";\r\n\tconst optKeys2 = Object.keys(poll['options'][key]).sort();\r\n\toptKeys2.forEach((key2, index2) => {\r\n\t    msg += \"\" + key2 + \":\" + poll['options'][key][key2] + \"\";\r\n\t});\r\n\tmsg += \"}\";\r\n    });\r\n    msg += \"};\";\r\n    return msg;\r\n}\r\n\r\n\r\nconst generateRoomMsg = async (room) => {\r\n    let msg = \"\";\r\n    msg += \"id=\" + room['id'] + \";\";\r\n    msg += \"title=\" + room['title'] + \";\";\r\n    msg += \"status=\" + room['status'] + \";\";\r\n    msg += \"hosts=\" + room['hosts'] + \";\";\r\n    msg += \"pollOrder={\\\"pending\\\":\" + JSON.stringify(room['pollOrder']['pending']);\r\n    msg += \",\\\"closed\\\":\" + JSON.stringify(room['pollOrder']['closed']);\r\n    msg += \",\\\"open\\\":\" + JSON.stringify(room['pollOrder']['open']) + \"}\";\r\n    \r\n    return msg;\r\n}\r\n\r\n/*\r\nconst generateHmac = async (msg) => {\r\n    let key = sjcl.codec.utf8String.toBits(tempKey);\r\n    let out = (new sjcl.misc.hmac(key, sjcl.hash.sha256)).mac(msg);\r\n    let hmac = sjcl.codec.hex.fromBits(out);\r\n    return hmac;\r\n}\r\n*/\r\n\r\nconst generateHmac = async (msg) => {\r\n    // If we haven't yet read in the secret key, do so now.\r\n    if (SECRETKEY === null) {\r\n\tawait readSecretKey();\r\n    }\r\n    const hmac = crypto.createHmac('sha256', SECRETKEY);\r\n    hmac.update(msg);\r\n    return hmac.digest('hex');\r\n}\r\n\r\n\r\nconst generatePollHash = async (poll) => {\r\n    // Given a poll, generate the hash associated with it\r\n\r\n    let msg = await generatePollMsg(poll);\r\n    //console.log(\"Generating hash of: \" + msg);\r\n    \r\n    let hmac = await generateHmac(msg);\r\n    //console.log(\"Hash: \" + hmac);\r\n    \r\n    return hmac;\r\n}\r\n\r\nconst generateRoomHash = async (room) => {\r\n    // Given a room, generate the hash associated with it\r\n\r\n    let msg = await generateRoomMsg(room);\r\n    //console.log(\"Generating hash of: \" + msg);\r\n    \r\n    let hmac = await generateHmac(msg);\r\n    //console.log(\"Hash: \" + hmac);\r\n    \r\n    return hmac;\r\n}\r\n\r\nconst compareHashes = async (map, fetched, type) => {\r\n    // Given a map and a fetched hash, see if the hash is good.\r\n    // Output: true if good, false if bad\r\n\r\n    let expectedHash = \"\";\r\n    \r\n    // See what we would expect hash to be\r\n    if (type == \"poll\") {\r\n\texpectedHash = await generatePollHash(map);\r\n    } else {\r\n\texpectedHash = await generateRoomHash(map);\r\n    }\r\n   \r\n    if (expectedHash != fetched) {\r\n        // The hashes don't match - bad!\r\n        return false;\r\n    } else {\r\n        // The hashes match - good.\r\n        return true;\r\n    }\r\n}\r\n\r\nexport { generatePollHash, generateRoomHash, compareHashes };\r\n","import firebase from './databaseCommunication/permissions.js'\r\n\r\nconst fireauth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nconst signOutCurrentUser = async () => {\r\n    fireauth.signOut().then(function() {\r\n\t// Sign-out successful.\r\n    }).catch(function(error) {\r\n\t// An error happened.\r\n    });\r\n}\r\n\r\nconst getCurrentUserEmail = () => {\r\n    let email = \"\";\r\n    if (fireauth.currentUser === null) {\r\n\t\temail = \"null\";\r\n    } else {\r\n\t\temail = fireauth.currentUser.email;\r\n    }\r\n    console.log(email);\r\n    return email;\r\n}\r\n\r\nconst getToken = () => {\r\n\tif (fireauth.currentUser === null) {\r\n\t\treturn null;\r\n    } else {\r\n\t\treturn fireauth.currentUser.uid;\r\n    }\r\n}\r\n\r\nconst userLogin = async () => {\r\n\t//await firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION);\r\n    var provider = new firebase.auth.GoogleAuthProvider();\r\n    provider.setCustomParameters({\r\n\t'prompt': 'select_account'\r\n    });\r\n\r\n    await fireauth.signInWithPopup(provider).then(function(result) {\r\n\t\t// This gives you a Google Access Token. You can use it to access the Google API.\r\n\t\tvar token = result.credential.accessToken;\r\n\t\t// The signed-in user info.\r\n\t\tvar user = result.user;\r\n\t\t// ...\r\n    }).catch(function(error) {\r\n\t\t// Handle Errors here.\r\n\t\tvar errorCode = error.code;\r\n\t\tvar errorMessage = error.message;\r\n\t\t// The email of the user's account used.\r\n\t\tvar email = error.email;\r\n\t\t// The firebase.auth.AuthCredential type that was used.\r\n\t\tvar credential = error.credential;\r\n\t\t// ...\r\n\r\n\t\tconsole.log(error);  // Handle Errors here.\r\n\t\tvar errorCode = error.code;\r\n\t\tconsole.log(errorCode);\r\n\r\n\t\tvar errorMessage = error.message;\r\n\t\tconsole.log(errorMessage);\r\n\r\n\t\tsignOutCurrentUser();\r\n    });\r\n}\r\n\r\nconst userIsHamiltonian = () => {\r\n    let email = getCurrentUserEmail();\r\n    let result = (email.split('@')[1] == \"hamilton.edu\");\r\n    return result;\r\n}\r\n\r\n\r\nconst getUserId = () => {\r\n    if (!(userIsLoggedIn())) {\r\n\t\treturn \"\";\r\n    } else {\r\n\t\tlet email = getCurrentUserEmail();\r\n\t\treturn email.split('@')[0];\r\n    }\r\n}\r\n\r\nconst userIsHost = async (host_id) => {\r\n    console.log(\"Checking if host...\");\r\n    \r\n    if (getUserId() == host_id) {\r\n\tconsole.log(\"User is host.\")\r\n\treturn true;\r\n    } else {\r\n\tconsole.log(\"User isn't host.\");\r\n\treturn false;\r\n    }\r\n}\r\n\r\nconst userIsVoter = async () => {\r\n    // Return true if the current user is a voter\r\n    // code from\r\n    // https://stackoverflow.com/questions/53332471/checking-if-a-document-exists-in-a-firestore-collection\r\n    console.log(\"Checking if voter...\");\r\n    \r\n    try {\r\n\tlet docRef = firestore\r\n\t    .collection(\"voting\")\r\n\t    .doc(getUserId())\r\n\r\n\tlet doc = await docRef.get();\r\n\r\n\tif (doc.exists) {\r\n\t    console.log(\"User is a voter.\");\r\n\t    return true;\r\n\t} else {\r\n\t    console.log(\"User isn't a voter.\");\r\n\t    return false;\r\n\t}\r\n    } catch(error) {\r\n\tconsole.log(error);\r\n\treturn false;\r\n    }\r\n}\r\n\r\n\r\nconst userIsLoggedIn = async () => {\r\n    return fireauth.currentUser !== null;\r\n}\r\n\r\n\r\nconst userIsHostOfRoom = async (room_id) => {\r\n    // Given a roomId, returns true if the currently logged in user is the host of that room.\r\n\r\n    console.log(\"checking if current user is host of \" + room_id);\r\n    \r\n    let currentUser = await getUserId();\r\n\r\n    try {\r\n\tlet docRef = firestore\r\n\t    .collection(currentUser)\r\n\t    .doc(room_id);\r\n\r\n\tlet doc = await docRef.get();\r\n\r\n\tif (doc.exists) {\r\n\t    console.log(\"current user is host of \" + room_id);\r\n\t    return true;\r\n\t} else {\r\n\t    console.log(\"current user isn't host of \" + room_id);\r\n\t    return false;\r\n\t}\r\n    } catch(error) {\r\n\tconsole.log(error);\r\n\treturn false;\r\n    }\r\n}\r\n\r\nexport {userLogin, getUserId, getCurrentUserEmail, signOutCurrentUser, userIsHamiltonian, userIsHost, userIsVoter, getToken, userIsLoggedIn, userIsHostOfRoom};\r\n","import firebase from './permissions.js';\r\nimport { generatePollHash, generateRoomHash, compareHashes } from './hashFunctions';\r\nimport { pollBase } from '../store/dataBases';\r\nimport { fetchHostRooms, setPollOrder, getHost, fetchRoomData } from './roomFunctions';\r\nimport { userIsHost, getToken, userIsVoter, userIsHostOfRoom } from '../LoginUtils.js';\r\n\r\nconst firestore = firebase.firestore()\r\n\r\nfunction generatePollId() {\r\n    const id = Math.floor(Math.random() * 100);\r\n    const poll_id = `00${id}`;\r\n\r\n    return poll_id.slice(-2);\r\n}\r\n\r\nfunction generateUserOptionId() {\r\n    const id = Math.floor(Math.random() * 1000);\r\n    const poll_id = `000${id}`;\r\n\r\n    return poll_id.slice(-3);\r\n}\r\n\r\nconst fetchPollData = async (host_id, room_id, poll_id) => {\r\n\r\n    if ( host_id === null ){\r\n        host_id = await getHost(room_id);\r\n        //console.log(host_id);\r\n    }\r\n\r\n    try {\r\n        const document = firestore\r\n                            .collection(host_id)\r\n                            .doc(room_id)\r\n                            .collection('polls')\r\n                            .doc(poll_id);\r\n        let docSnap = await document.get();\r\n        let docData = docSnap.data();\r\n\r\n        let poll = {\r\n            id: poll_id,\r\n            title: docData['title'],\r\n            status: docData['status'],\r\n            type: docData['type'],\r\n            description: docData['description'],\r\n            options: {},\r\n            userInputOption: docData['userInputOption'],\r\n            optionsOrder: docData['optionsOrder'],\r\n            showResults: docData['showResults']\r\n        };\r\n\r\n        //console.log(poll.optionsOrder)\r\n\r\n        for (let i = 0; i < poll.optionsOrder.length; i++) {\r\n          const option_id = poll.optionsOrder[i];\r\n\r\n          const optionRef = firestore\r\n                            .collection(host_id)\r\n                            .doc(room_id)\r\n                            .collection('polls')\r\n                            .doc(poll_id)\r\n                            .collection('Options')\r\n                            .doc(option_id);\r\n\r\n          let optDocSnap = await optionRef.get();\r\n          let optDocData = optDocSnap.data();\r\n\r\n          //console.log(option_id);\r\n\r\n          var opt = {\r\n              id: optDocData['id'],\r\n              value: optDocData['value'],\r\n              //count: optDocData['count']\r\n          };\r\n\r\n          poll.options[option_id] = opt;\r\n          //console.log(poll.options);\r\n        }\r\n\r\n        // Check the hash to make sure it's good\r\n\tlet hashComparison = await compareHashes(poll, docData['pollHash'], \"poll\");\r\n        if (!hashComparison) {\r\n            // hash is bad:\r\n            console.log(\"!!Warning!! Data fetched from poll \" + docData['title'] + \" has a bad hash. This means that the data has been tampered with via the Firebase Console!\");\r\n            alert(\"Bad hash warning - see console for more info.\");\r\n        }\r\n\r\n\t    return poll;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst updatePoll = async (host_id, room_id, poll_id, poll_state) => {\r\n    if (!(await userIsHost(host_id))) {\r\n        console.log(\"You are not the host! Call to addHostRoom cancelled.\");\r\n    } else {\r\n        try {\r\n            let options = poll_state.options;\r\n            let original_state = {...poll_state};\r\n            //console.log(original_state);\r\n            let pollRef = firestore\r\n                            .collection(host_id)\r\n                            .doc(room_id)\r\n                            .collection('polls')\r\n                            .doc(poll_id);\r\n\r\n            delete poll_state.options;\r\n\r\n            poll_state['pollHash'] = await generatePollHash(original_state);\r\n            \r\n            await pollRef.update(poll_state);\r\n\r\n            for(const [key, value] of Object.entries(options)) {\r\n                //console.log(opt)\r\n                await pollRef.collection('Options').doc(key).set(value)\r\n            };\r\n            //console.log(original_state);\r\n            return {\r\n                ...original_state\r\n            };\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst fetchAgenda = async (host_id, room_id) => {\r\n// const fetchAgenda = async (room_id) => {\r\n\r\n    if ( host_id === null ){\r\n      host_id = await getHost(room_id);\r\n      console.log(host_id);\r\n    }\r\n\r\n    try {\r\n        let agenda = { polls: {}, order: {} };\r\n\t    let fetchedHash = \"\";\r\n\r\n        let roomSnap = await firestore.collection(host_id).doc(room_id).get();\r\n        //console.log(host_id)\r\n        //console.log(room_id)\r\n        let roomData = roomSnap.data();\r\n        //console.log(roomData)\r\n        agenda['title'] = roomData['title'];\r\n        agenda['status'] = roomData['status'];\r\n        fetchedHash = roomData['roomHash'];\r\n\r\n        let room = {\r\n            id: room_id,\r\n            title: agenda['title'],\r\n            status: agenda['status'],\r\n            pollOrder: await getPollOrder(host_id, room_id),\r\n            hosts: roomData['hosts']\r\n        }\r\n\r\n        let hashComparison = await compareHashes(room, fetchedHash, \"room\");\r\n        if (!hashComparison) {\r\n            // hash is bad:\r\n            console.log(\"!!Warning!! Data fetched from agenda \" + room['id'] + \" has a bad hash. This means that the data has been tampered with via the Firebase Console!\");\r\n            alert(\"Bad hash warning - see console for more info.\");\r\n        }\r\n\r\n        const collect = firestore\r\n                            .collection(host_id)\r\n                            .doc(room_id)\r\n                            .collection('polls');\r\n\r\n        const collectSnap = await collect.get();\r\n        const collectData = collectSnap.docs;\r\n\r\n        for (let i = 0; i < collectData.length; i++) {\r\n            const poll_id = collectData[i].id;\r\n\r\n            if(poll_id != 'order') {\r\n                agenda['polls'][poll_id] = await fetchPollData(host_id, room_id, poll_id);\r\n            }\r\n            else {\r\n                agenda['order'] = collectData[i].data();\r\n            }\r\n        }\r\n\r\n        return agenda;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst addPoll = async (host_id, room_id) => {\r\n    if (!(await userIsHost(host_id))) {\r\n\tconsole.log(\"You are not the host! Call to addHostRoom cancelled.\");\r\n    } else {\r\n        try {\r\n            let poll_id = generatePollId();\r\n\r\n            // Make sure we aren't reusing PollId\r\n            let collectRef = firestore\r\n                                .collection(host_id)\r\n                                .doc(room_id)\r\n                                .collection('polls');\r\n\r\n            let collectSnap = await collectRef.get();\r\n\r\n            let ids = [];\r\n            for(let i = 0; i < collectSnap.docs; i++) {\r\n                if(collectSnap.docs[i].data().exists) {\r\n                    ids.push(collectSnap.docs[i].data().id);\r\n                }\r\n            }\r\n\r\n            while(poll_id in ids) {\r\n                poll_id = generatePollId();\r\n            }\r\n\r\n            // object we will return\r\n            let poll = pollBase(poll_id);\r\n\r\n            // reference to specific poll location\r\n            let pollRef = firestore\r\n                            .collection(host_id)\r\n                            .doc(room_id)\r\n                            .collection('polls')\r\n                            .doc(poll_id);\r\n\r\n            // remove options right now so firebase doesn't add an unwanted field to the collection\r\n            let options = poll['options'];\r\n\r\n            // generate hash here:\r\n            let thisHash = await generatePollHash(poll);\r\n            poll.pollHash = thisHash;\r\n\r\n            delete poll.options;\r\n            delete poll.results;\r\n\r\n            // add poll minus options to firebase (hash is updated here)\r\n            await pollRef.set(poll);\r\n\r\n            // fill out the options of the poll (in the correct location)\r\n            for(const opt of Object.entries(options)) {\r\n                //console.log(opt)\r\n                pollRef.collection('Options').doc(opt[1].id.toString()).set({\r\n                    //count: 0,\r\n                    id: opt[1].id,\r\n                    value: opt[1].value\r\n                })\r\n            };\r\n\r\n            // configure firebase to allow storing user options and voting\r\n            await pollRef.collection('userOptions').doc('order').set({ values : {} });\r\n            await pollRef.collection('Votes').doc('votes').set({});\r\n\r\n            // At this point, poll is done being created and added to firebase\r\n\r\n            // update the poll order in firebase\r\n            await firestore\r\n                .collection(host_id)\r\n                .doc(room_id)\r\n                .collection('polls')\r\n                .doc('order')\r\n                .update({\r\n                    pending: firebase.firestore.FieldValue.arrayUnion(poll_id)\r\n                });\r\n\r\n            // Get the room info so we can compute new hash\r\n            let newRoom = await fetchRoomData(host_id, room_id);\r\n\r\n            // Generate the new hash\r\n            let newHash = await generateRoomHash(newRoom);\r\n\r\n            // update roomHash in firebase\r\n            // if this breaks, roomHash might not exist currently (go into firebase and add it manually\r\n            await firestore\r\n                .collection(host_id)\r\n                .doc(room_id)\r\n                .update({roomHash: newHash});\r\n\r\n            return {\r\n                newPoll: poll\r\n            };\r\n        } catch (error) {\r\n                console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst updatePollStatus = async (host_id, room_id, poll_id, new_status) => {\r\n    // NEED TO CHECK DIFFERENCE IN POLLS IN NEW_STATUS AND CURRENT STATE AND THEN DELETE THOSE POLLS\r\n    if (!userIsHost(host_id)) {\r\n\tconsole.log(\"You are not the host! Call to addHostRoom cancelled.\");\r\n    } else {\r\n        try {\r\n            // new poll map\r\n            let newPoll = await fetchPollData(host_id, room_id, poll_id);\r\n            const oldStatus = newPoll.status;\r\n            newPoll.status = new_status;\r\n\r\n            // generate new poll hash\r\n            let newHash = await generatePollHash(newPoll);\r\n            var docSnap = await firestore.collection(host_id).doc(room_id).collection('polls').doc('order').get();\r\n\r\n            const newOrder = {...docSnap.data()};\r\n            newOrder[oldStatus] = newOrder[oldStatus].filter(i => i !== poll_id);\r\n            newOrder[new_status].push(poll_id);\r\n\r\n            await setPollOrder(host_id, room_id, newOrder);\r\n\r\n            // update the status and hash of the poll object\r\n            await firestore\r\n                    .collection(host_id)\r\n                    .doc(room_id)\r\n                    .collection('polls')\r\n                    .doc(poll_id)\r\n                    .update({\r\n                        status: new_status,\r\n                        pollHash: newHash\r\n                    });\r\n\r\n            const polls = await fetchAgenda(host_id, room_id);\r\n            if(new_status === 'closed') {\r\n                await countVotes(host_id, room_id, poll_id);\r\n            }\r\n            return {\r\n                polls: polls['polls'],\r\n                order: newOrder\r\n            }\r\n        } catch (error) {\r\n                console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst getPollResults = async (user_id, room_id, poll_id, host_id = null) => {\r\n\r\n    // USE user_id TO CHECK IF THEY CAN SEE RESULTS\r\n    if (host_id !== null ) { host_id = host_id }\r\n    else { host_id = await getHost(room_id); }\r\n    // const host_id = await getHost(room_id);\r\n    // console.log(host_id)\r\n    try {\r\n        let poll = await fetchPollData(host_id, room_id, poll_id);\r\n        let options = poll.options;\r\n        let results = {};\r\n        let voteRef = firestore\r\n                        .collection(host_id)\r\n                        .doc(room_id)\r\n                        .collection('polls')\r\n                        .doc(poll_id)\r\n                        .collection('Votes')\r\n                        .doc('votes');\r\n        let voteSnap = await voteRef.get();\r\n        let voteData = voteSnap.data().finalVotes;\r\n        \r\n        for (let i = 0; i < poll.optionsOrder.length; i++) {\r\n            const option_id = poll.optionsOrder[i];\r\n\r\n            results[option_id] = {\r\n                id: option_id,\r\n                count: voteData[option_id]\r\n            };\r\n            //console.log(results[option_id].count)\r\n        }\r\n\r\n        let userCollectRef = firestore\r\n                                .collection(host_id)\r\n                                .doc(room_id)\r\n                                .collection('polls')\r\n                                .doc(poll_id)\r\n                                .collection('userOptions');\r\n        let userCollectSnap = await userCollectRef.get();\r\n\r\n        // checks to see if write-in options exist\r\n        if(userCollectSnap.docs.length > 1) {\r\n            for(let x = 0; x < userCollectSnap.docs.length; x++) {\r\n                let optionSnap = await firestore\r\n                                        .collection(host_id)\r\n                                        .doc(room_id)\r\n                                        .collection('polls')\r\n                                        .doc(poll_id)\r\n                                        .collection('userOptions')\r\n                                        .doc(userCollectSnap.docs[x].id)\r\n                                        .get();\r\n                //console.log(userCollectSnap.docs[x].id)\r\n                if(voteData[userCollectSnap.docs[x].id] > 0) {\r\n                    results[userCollectSnap.docs[x].id] = {\r\n                        id: userCollectSnap.docs[x].id,\r\n                        count: voteData[userCollectSnap.docs[x].id]\r\n                    }\r\n                    poll.optionsOrder.push(userCollectSnap.docs[x].id);\r\n                    poll.options[userCollectSnap.docs[x].id] = {\r\n                        ...results[userCollectSnap.docs[x].id],\r\n                        value: optionSnap.data()['value']\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return {\r\n            title: poll.title,\r\n            description: poll.description,\r\n            optionsOrder: poll.optionsOrder,\r\n            options: {...options},\r\n            results: {...results}\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst submitVote = async (user_id, room_id, poll_id, selection, submission, userInput) => {\r\n    // TODO (Jack): Need to update hash of the poll\r\n\r\n    // USER user_id to check if have voting status\r\n\r\n    const host_id = await getHost(room_id);\r\n    if (!(await userIsVoter())) {\r\n        console.log(\"You do not have voting rights! Call to submitVote cancelled.\");\r\n        alert(\"You do not have voting rights. Speak to the Dean of Faculty if you believe this is an error.\");\r\n    } else {\r\n        try {\r\n            let poll = await fetchPollData(host_id, room_id, poll_id);\r\n            let token = getToken();\r\n            let voteRef = firestore\r\n                                .collection(host_id)\r\n                                .doc(room_id)\r\n                                .collection('polls')\r\n                                .doc(poll_id)\r\n                                .collection('Votes')\r\n                                .doc('votes');\r\n            let docSnap = await voteRef.get();\r\n            let docData = docSnap.data();\r\n\r\n            let multi_vote = {};\r\n            multi_vote[token] = { choice: [] };\r\n\r\n            for (let i = 0; i < poll.optionsOrder.length; i++) {\r\n                let option_id = poll.optionsOrder[i];\r\n                let vote = {};\r\n\r\n                if(poll.type === 'single') {\r\n                    vote[token] = { choice: [option_id] };\r\n                    if(selection[option_id] && docData[token]) {    \r\n                        await voteRef.update(vote);   \r\n                    }\r\n                    else if(selection[option_id]) {\r\n                        await voteRef.set(vote);\r\n                    }\r\n                }\r\n                else {\r\n                    //let multi_token = token + option_id;\r\n                    let choices = multi_vote[token][\"choice\"];\r\n                    \r\n                    if(selection[option_id]) {    \r\n                        multi_vote[token][\"choice\"] = choices.concat([option_id]);\r\n                        //await voteRef.update(vote);   \r\n                    }\r\n                    // else if(selection[option_id]) {\r\n                    //     await voteRef.update(vote);\r\n                    // }\r\n                    if(submission[option_id] && !selection[option_id]) {\r\n                        // console.log(option_id)\r\n                        // console.log(multi_token)\r\n                        multi_vote[token][\"choice\"] = choices.filter(item => item !== option_id);\r\n                        // vote[multi_token] = firebase.firestore.FieldValue.delete();\r\n                        // await voteRef.update(vote)\r\n                    }\r\n                    if(multi_vote[token][\"choice\"].length > 0) {\r\n                        console.log(\"HERE\")\r\n                        await voteRef.update(multi_vote);\r\n                    }\r\n                }\r\n            }\r\n\r\n            // THE ABOVE WORKS PROPERLY\r\n\r\n            let inputcode = null;\r\n            let exists = false;\r\n            let userCollectRef = firestore\r\n                            .collection(host_id)\r\n                            .doc(room_id)\r\n                            .collection('polls')\r\n                            .doc(poll_id)\r\n                            .collection('userOptions');\r\n            \r\n            if (selection[userInput.id]) {           \r\n                let existingValuesSnap = await userCollectRef.doc('order').get();\r\n                let existingValuesData = existingValuesSnap.data();\r\n                let vals = existingValuesData.values;\r\n                \r\n                if (Object.keys(vals).includes(userInput.value)) {\r\n                    console.log('exists')\r\n                    inputcode = vals[userInput.value];\r\n                    exists = true;\r\n                }\r\n                else {\r\n                    console.log('genny')\r\n                    inputcode = generateUserOptionId();\r\n                }\r\n\r\n                vals[userInput.value] = inputcode;\r\n\r\n                await userCollectRef.doc('order').update({\r\n                    values: vals\r\n                });\r\n            }\r\n            else {\r\n                console.log(userInput)\r\n                inputcode = userInput.submissionId\r\n            }\r\n            //console.log(inputcode)\r\n            if(inputcode)  {\r\n                let vote = {};\r\n                vote[token] = { choice: inputcode };\r\n                \r\n                if(poll.type === 'single') {\r\n                    if (!exists) {    \r\n                        const userInputResult = {\r\n                            id: inputcode,\r\n                            value: userInput.value\r\n                            //count: 1\r\n                        }\r\n\r\n                        // add vote to firebase\r\n                        await userCollectRef.doc(inputcode).set(userInputResult);\r\n                    \r\n                        if(docData[token]) {    \r\n                            await voteRef.update(vote);   \r\n                        }\r\n                        else {\r\n                            await voteRef.set(vote);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // console.log(submission)\r\n                        // console.log(selection)\r\n                        //let docSnap = await userCollectRef.doc(inputcode).get();\r\n                        // let count = docSnap.data()['count'];\r\n\r\n                        // if (submission['000']) {\r\n                        //     await userCollectRef.doc(inputcode).update({ count: count - 1 });\r\n                        // }\r\n                        if (selection['000']) {\r\n                            //await userCollectRef.doc(inputcode).update({ count: count + 1 });\r\n                            await voteRef.set(vote)\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    if (!exists) {    \r\n                        const userInputResult = {\r\n                            id: inputcode,\r\n                            value: userInput.value\r\n                            //count: 1\r\n                        }\r\n\r\n                        // add vote to firebase\r\n                        await userCollectRef.doc(inputcode).set(userInputResult);\r\n                    }\r\n                    \r\n                    multi_vote[token][\"choice\"] = multi_vote[token][\"choice\"].concat([inputcode]);  \r\n\r\n                    if(!selection['000'] && submission['000']) {\r\n                        multi_vote[token][\"choice\"] = multi_vote[token][\"choice\"].filter(item => item !== inputcode);\r\n                    }\r\n\r\n                    if(multi_vote[token][\"choice\"].length > 0) {\r\n                        //console.log(\"HERE\")\r\n                        await voteRef.update(multi_vote);\r\n                    }\r\n                }\r\n            }\r\n            \r\n            return {\r\n                submitted: true,\r\n                inputSubmissionId: inputcode\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst getPollOrder = async (host_id, room_id) => {\r\n    try {\r\n        let pollSnap = await firestore\r\n            .collection(host_id)\r\n            .doc(room_id)\r\n            .collection('polls')\r\n            .doc('order')\r\n            .get();\r\n\t\r\n        return pollSnap.data();\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst countVotes = async (host_id, room_id, poll_id) => {\r\n    try {\r\n        let votes = {};\r\n        let voteRef = firestore\r\n                        .collection(host_id)\r\n                        .doc(room_id)\r\n                        .collection('polls')\r\n                        .doc(poll_id)\r\n                        .collection('Votes')\r\n                        .doc('votes');\r\n        let voteSnap = await voteRef.get();\r\n        let voteData = voteSnap.data();\r\n        \r\n        for(const[key, value] of Object.entries(voteData)) {\r\n            let choices = value.choice;\r\n            //console.log(choices)\r\n            for(let i = 0; i < choices.length; i++) {\r\n                if(votes[choices[i]]) {\r\n                    votes[choices[i]]++;\r\n                }\r\n                else {\r\n                    votes[choices[i]] = 1;\r\n                } \r\n            }\r\n        }\r\n\r\n        await voteRef.update({\r\n            finalVotes: votes\r\n        })\r\n        \r\n        return;\r\n    }\r\n    catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst deletePoll = async (host_id, room_id, poll_id) => {\r\n    try {\r\n        let pollRef = firestore\r\n                        .collection(host_id)\r\n                        .doc(room_id)\r\n                        .collection('polls')\r\n                        .doc(poll_id);\r\n\r\n        let optionRef = pollRef.collection('Options');\r\n        let userOptionRef = pollRef.collection('userOptions');\r\n        let optionSnap = await optionRef.get();\r\n        let userOptionSnap = await userOptionRef.get();\r\n\r\n        // delete options collection\r\n        for (let x = 0; x < optionSnap.docs.length; x++) {\r\n            await optionRef.doc(optionSnap.docs[x].id).delete();\r\n        }\r\n\r\n        // delete userOptions collection\r\n        for (let x = 0; x < userOptionSnap.docs.length; x++) {\r\n            await userOptionRef.doc(userOptionSnap.docs[x].id).delete();\r\n        }\r\n\r\n        // delete votes document\r\n        await pollRef.collection('Votes').doc('votes').delete();\r\n\r\n        // delete poll\r\n        await pollRef.delete();\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport { fetchAgenda, addPoll, updatePollStatus, fetchPollData, getPollResults, updatePoll, submitVote, getPollOrder, deletePoll };\r\n","import firebase from './permissions.js';\r\nimport { roomBase } from '../store/dataBases';\r\nimport { addPoll, fetchAgenda, updatePollStatus, fetchPollData, getPollResults, getPollOrder, deletePoll } from './pollFunctions';\r\nimport { generateRoomHash, generatePollHash, compareHashes } from './hashFunctions';\r\nimport { userIsHost, userIsVoter } from '../LoginUtils.js';\r\n\r\n\r\nconst firestore = firebase.firestore();\r\nconst fireauth = firebase.auth();\r\n\r\nfunction generateRoomCode() {\r\n    const code = Math.floor(Math.random() * 10000);\r\n    const roomcode = `0000${code}`;\r\n\r\n    return roomcode.slice(-4);\r\n}\r\n\r\n// const checkRoomcode = async (host_id, room_id) => {\r\nconst checkRoomcode = async (room_id) => {\r\n    try {\r\n        const host_id = await getHost(room_id);\r\n        const docRef = firestore.collection(host_id).doc(room_id)\r\n        const doc = await docRef.get();\r\n        //console.log(doc.exists)\r\n        if(doc.exists) {\r\n            return {};\r\n        }\r\n        else {\r\n            throw \"Room undefined.\"\r\n        }\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst checkRoomStatuses = async (rooms, order) => {\r\n    // Ensure that all rooms' status matches the array they're in in order\r\n    // (if they don't all match, the information was changed without updating the hash\r\n    //console.log(typeof rooms);\r\n    for (let roomKey in rooms) {\r\n        let room = rooms[roomKey];\r\n        let roomStatus = room['status'];\r\n        if (!(order[roomStatus].indexOf(room['id']) > -1)) {\r\n            console.log(\"!!Warning!! Room status in \" + room['title'] + \" has been changed. This means that the data has been tampered with via the Firebase Console!\");\r\n            alert(\"Bad status warning - see console for more info.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // all good\r\n    return true;\r\n}\r\n\r\nconst fetchHostRooms = async (host_id) => {\r\n    // console.log(\"checking if user is voter...\");\r\n    // console.log(await userIsVoter());\r\n\r\n    try {\r\n        let rooms = {}; //{ openRooms: [], pendingRooms: [], closedRooms: [] };\r\n        let collect = firestore.collection(host_id);\r\n        let order = { open: [], pending: [], closed: [] };\r\n        await collect.get().then(snap => {\r\n            snap.forEach(async function (doc) {\r\n                let room = { title: '', status: '', id: '' };\r\n                //console.log(doc)\r\n\r\n                if(doc.id !== 'order') {\r\n                    room['id'] = doc.id;\r\n                    room['title'] = doc.data()['title'];\r\n                    room['status'] = doc.data()['status'];\r\n\t\t            room['hosts'] = doc.data()['hosts'];\r\n                    rooms[doc.id] = room;\r\n\r\n                    // add in polls['order'] so we can factor that into the hash\r\n                    let roomWithPollOrder = room;\r\n\r\n                    let orderRef = firestore.collection(host_id).doc(doc.id).collection('polls').doc('order');\r\n                    let orderSnap = await orderRef.get();\r\n\r\n                    roomWithPollOrder['pollOrder'] = orderSnap.data();\r\n                    //console.log(roomWithPollOrder)\r\n                    //console.log(doc.data()['roomHash'])\r\n                    //console.log(room)\r\n                    // make sure the hash of that room is good\r\n                    // room = {'id': '', 'title': '', 'status': '', 'pollOrder': ''}\r\n                    let hashComparison = await compareHashes(roomWithPollOrder, doc.data()['roomHash'], \"room\");\r\n                    if (!hashComparison) {\r\n                        // hash is bad:\r\n                        console.log(\"!!Warning!! Data fetched from room \" + room['id'] + \" has a bad hash. This means that the data has been tampered with via the Firebase Console!\");\r\n                        alert(\"Bad hash warning - see console for more info.\");\r\n\t\t            }\r\n                }\r\n                else {\r\n                    order = doc.data();\r\n                }\r\n                //console.log(room)\r\n            });\r\n        });\r\n        //console.log(rooms)\r\n\r\n        // make sure the order of the rooms hasn't been changed; eliminates the need for hostHash\r\n        await checkRoomStatuses(rooms, order);\r\n\r\n        return {\r\n            rooms: rooms,\r\n            order: order\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst setRoomOrder = async (host_id, new_order) => {\r\n    try {\r\n        //console.log(new_order)\r\n        await firestore\r\n                .collection(host_id)\r\n                .doc('order')\r\n                .set(new_order);\r\n\r\n        return;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst deleteHostRoom = async (host_id, room_id) => {\r\n    try {\r\n        let { order, ...rooms } = await fetchHostRooms(host_id);\r\n        rooms = rooms.rooms;\r\n        const room = rooms[room_id];\r\n        //console.log(rooms)\r\n        const roomRef = firestore\r\n                            .collection(host_id)\r\n                            .doc(room_id);\r\n\r\n        const newOrder = order[room.status].filter((i) => i !== room_id);\r\n        order[room.status] = newOrder;\r\n        //console.log('deleting')\r\n\r\n        // must individually delete subcollections\r\n        let pollSnap = await roomRef.collection('polls').get();\r\n\r\n        for (let i = 0; i < pollSnap.docs.length; i++) {\r\n            await deletePoll(host_id, room_id, pollSnap.docs[i].id)\r\n        }\r\n\r\n        // delete room\r\n        await roomRef.delete();\r\n\r\n        await setRoomOrder(host_id, order);\r\n        delete rooms[room_id];\r\n\r\n        await firestore.collection('openRooms').doc(room_id).delete();\r\n\r\n        return {\r\n            rooms: rooms,\r\n            order: order\r\n        };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst addHostRoom = async (host_id) => {\r\n    if (!(await userIsHost(host_id))) {\r\n\tconsole.log(\"You are not the host! Call to addHostRoom cancelled.\");\r\n    } else {\r\n        try {\r\n            let exists = true;\r\n            let roomCode = generateRoomCode();\r\n            let roomSnap = await firestore\r\n                            .collection(host_id)\r\n                            .get();\r\n\r\n            if(roomSnap.docs.length < 1) {\r\n                await firestore\r\n                        .collection(host_id)\r\n                        .doc('order')\r\n                        .set({\r\n                            pending: [],\r\n                            open: [],\r\n                            closed: []\r\n                        });\r\n                roomSnap = await firestore\r\n                                    .collection(host_id)\r\n                                    .get();\r\n            }\r\n            let roomDocs = roomSnap.docs;\r\n\r\n            while(exists) {\r\n                for(let i = 0; i < roomDocs.length; i++) {\r\n                    if(roomDocs[i].id === roomCode) {\r\n                        roomCode = generateRoomCode();\r\n                        exists = true;\r\n                        break;\r\n                    }\r\n                    else {\r\n                        exists = false;\r\n                    }\r\n                }           \r\n            }\r\n\r\n            // update the order of the rooms\r\n            let { order, ...hostDash } = await fetchHostRooms(host_id);\r\n            order['pending'].push(roomCode);\r\n\r\n            let room = roomBase(roomCode);\r\n            room.hosts.push(host_id);\r\n\r\n            // can probably change room base to not have to do this\r\n            delete room.polls;\r\n\r\n            await firestore\r\n                .collection(host_id)\r\n                .doc(roomCode)\r\n                .collection('polls')\r\n                .doc('order')\r\n                .set({\r\n                    pending: [],\r\n                    open: [],\r\n                    closed: []\r\n                });\r\n\r\n            await firestore\r\n                .collection(host_id)\r\n                .doc(roomCode)\r\n                .set(room);\r\n\r\n            await addPoll(host_id, roomCode);\r\n\r\n            let orderRef = firestore.collection(host_id).doc(roomCode).collection('polls').doc('order');\r\n            let orderSnap = await orderRef.get();\r\n            let pollOrder = orderSnap.data();\r\n\r\n            // Compute the room hash and update it in firebase\r\n            let roomHashData = { id: roomCode, title: room.title, status: room.status, pollOrder: pollOrder, hosts: room.hosts };\r\n            let roomHash = await generateRoomHash(roomHashData);\r\n\r\n            await firestore\r\n                .collection(host_id)\r\n                .doc(roomCode)\r\n                .update({\r\n                    roomHash: roomHash\r\n                });\r\n\r\n            await setRoomOrder(host_id, order);\r\n\r\n            hostDash['rooms'][roomCode] = room;\r\n\r\n            return {\r\n                rooms: hostDash['rooms'],\r\n                order: order\r\n            };\r\n        } catch (error) {\r\n                console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst updateRoom = async (host_id, room_id, room_state) => {\r\n    if (!(await userIsHost(host_id))) {\r\n        console.log(\"You are not the host! Call to updateRoom cancelled.\");\r\n    } else {\r\n        try {\r\n            console.log(\"HERE\")\r\n            let { order, ...hostDash } = await fetchHostRooms(host_id);\r\n            let room = hostDash['rooms'][room_id];\r\n            //console.log(room)\r\n            let oldPolls = await fetchAgenda(host_id, room_id);\r\n            //console.log('AGENDA')\r\n            let newPolls = {...oldPolls.polls,\r\n                            ...room_state.polls,\r\n                            order: room_state.order };\r\n\r\n            room.title = room_state.title;\r\n            room.status = room_state.status;\r\n            //room.polls = newPolls;\r\n\r\n            // TODO: make sure this still works\r\n            // Compute the room's hash and update it\r\n            // If something doens't work, check what room is (room.title)\r\n            let roomHashInfo = {\r\n                id: room_id,\r\n                status: room.status,\r\n                title: room.title,\r\n                pollOrder: newPolls.order,\r\n                hosts: room.hosts\r\n            }\r\n            room['roomHash'] = await generateRoomHash(roomHashInfo);\r\n            // console.log(host_id)\r\n            // console.log(room_id)\r\n            await firestore\r\n                .collection(host_id)\r\n                .doc(room_id)\r\n                .update({\r\n                    id: room_id,\r\n                    roomHash: room.roomHash,\r\n                    status: room.status,\r\n                    title: room.title\r\n                });\r\n\r\n            let old_order = await getPollOrder(host_id, room_id);\r\n            let a = newPolls.order['pending'].concat(newPolls.order['closed'], newPolls.order['open']);\r\n            let b = old_order['pending'].concat(old_order['closed'], old_order['open']);\r\n            let deleted = b.filter(x => !a.includes(x));\r\n           \r\n            for(let i = 0; i < deleted.length; i++) {\r\n                await deletePoll(host_id, room_id, deleted[i]);\r\n            }\r\n\r\n            await setPollOrder(host_id, room_id, newPolls.order);\r\n\r\n            return {\r\n                ...room_state\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst setPollOrder = async (host_id, room_id, new_order) => {\r\n    // TODO: move this to roomFunctions.js\r\n    // changes the order of the polls in the room\r\n\r\n    if (!(await userIsHost(host_id))) {\r\n\tconsole.log(\"You are not the host! Call to addHostRoom cancelled.\");\r\n    } else {\r\n\ttry {\r\n            // Get the room info so we can compute new hash\r\n            const roomDocument = firestore\r\n                  .collection(host_id)\r\n                  .doc(room_id);\r\n            let roomDocSnap = await roomDocument.get();\r\n            let roomDocData = roomDocSnap.data();\r\n\r\n            // Construct the new room map\r\n            let newRoom = {\r\n                id: roomDocData['id'],\r\n                title: roomDocData['title'],\r\n                status: roomDocData['status'],\r\n                pollOrder: new_order,\r\n                hosts: roomDocData['hosts']\r\n            };\r\n\r\n            // Generate the new hash\r\n            let newHash = await generateRoomHash(newRoom);\r\n\r\n            // update room orders in firebase\r\n            await firestore\r\n                .collection(host_id)\r\n                .doc(room_id)\r\n                .collection('polls')\r\n                .doc('order')\r\n                .set(new_order);\r\n\r\n            // update roomHash in firebase\r\n            // if this breaks, roomHash might not exist currently (go into firebase and add it manually\r\n            await firestore\r\n                .collection(host_id)\r\n                .doc(room_id)\r\n                .update({roomHash: newHash});\r\n\r\n            return;\r\n\t} catch (error) {\r\n            console.log(error);\r\n\t}\r\n    }\r\n}\r\n\r\nconst getHost = async (room_id) => {\r\n    try {\r\n        let docRef = firestore\r\n                        .collection('openRooms')\r\n                        .doc(room_id);\r\n        let docSnap = await docRef.get();\r\n        let docData = docSnap.data();\r\n\r\n        return docData.host_id;\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nconst updateRoomStatus = async (host_id, room_id, new_status) => {\r\n    if (!(await userIsHost(host_id))) {\r\n\tconsole.log(\"You are not the host! Call to updateRoom cancelled.\");\r\n    } else {\r\n        try {\r\n            const rooms = await fetchHostRooms(host_id)\r\n            const room = rooms.rooms[room_id];\r\n            const currentStatus = room.status;\r\n            const order = rooms.order;\r\n            order[currentStatus] = order[currentStatus].filter((i) => i !== room_id);\r\n            order[new_status].push(room_id);\r\n\r\n            await firestore\r\n                .collection(host_id)\r\n                .doc(room_id)\r\n                .update({ status: new_status });\r\n\r\n            await setRoomOrder(host_id, order);\r\n\r\n            if (new_status === 'open') {\r\n                await firestore\r\n                // change below to Rooms\r\n                    .collection('openRooms')\r\n                    .doc(room_id)\r\n                    .set({ host_id: host_id })\r\n            }\r\n            else if(new_status === 'closed') {\r\n                // set polls to be closed\r\n                let newPollsOrder = room.pollOrder;\r\n                let allPolls = newPollsOrder['closed'].concat(newPollsOrder['open'], newPollsOrder['pending']);\r\n                // check to see if already closed //////////////////\r\n                for (let i = 0; i < allPolls.length; i++) {\r\n                    let poll_id = allPolls[i];\r\n                    await updatePollStatus(host_id, room_id, poll_id, 'closed');\r\n                }\r\n            }\r\n            // console.log(room.hosts)\r\n            // console.log(room['hosts'])\r\n            let roomData = {\r\n                id: room_id,\r\n                title: room.title,\r\n                status: new_status,\r\n                hosts: room['hosts'],\r\n                pollOrder: await getPollOrder(host_id, room_id)\r\n            }\r\n\r\n            await firestore\r\n                .collection(host_id)\r\n                .doc(room_id)\r\n                .update({ roomHash: await generateRoomHash(roomData) });\r\n\r\n            //let agenda = await fetchAgenda(host_id, room_id);\r\n            //console.log(agenda.polls)\r\n\r\n            const collect = firestore\r\n                                .collection(host_id)\r\n                                .doc(room_id)\r\n                                .collection('polls');\r\n\r\n            const collectSnap = await collect.get();\r\n            const collectData = collectSnap.docs;\r\n            const polls = {};\r\n            let new_order = {};\r\n\r\n            for (let i = 0; i < collectData.length; i++) {\r\n                const poll_id = collectData[i].id;\r\n\r\n                if(poll_id != 'order') {\r\n                    polls[poll_id] = await fetchPollData(host_id, room_id, poll_id);\r\n                }\r\n                else {\r\n                    new_order = collectData[i].data();\r\n                }\r\n            }\r\n\r\n            return {\r\n                status: new_status,\r\n                polls: {...polls},\r\n                order: new_order\r\n            }\r\n        } catch(error) {\r\n                console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst getRoomResults = async (host_id, room_id) => {\r\n\r\n    try {\r\n        let hostDash = await fetchHostRooms(host_id);\r\n        let room = hostDash.rooms[room_id];\r\n        let pollOrder = await getPollOrder(host_id, room_id);\r\n        let closedPolls = pollOrder.closed;\r\n\r\n        const pollsResults = {};\r\n\r\n        for (let i = 0; i < closedPolls.length; i++) {\r\n            const poll_id = closedPolls[i];\r\n            const poll_result = await getPollResults(host_id, room_id, poll_id, host_id);\r\n            //console.log(poll_result);\r\n            pollsResults[poll_id] = poll_result;\r\n        }\r\n\r\n        return {\r\n            title: room.title,\r\n            order: closedPolls,\r\n            allResults: pollsResults,\r\n        }\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst fetchRoomData = async (host_id, room_id) => {\r\n    try {\r\n        let roomRef = firestore\r\n                        .collection(host_id)\r\n                        .doc(room_id);\r\n        let roomSnap = await roomRef.get();\r\n        let roomData = roomSnap.data();\r\n\r\n        return {\r\n            id: roomData.id,\r\n            title: roomData.title,\r\n            status: roomData.status,\r\n            pollOrder: await getPollOrder(host_id, room_id),\r\n            hosts: roomData.hosts\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport { fetchRoomData, fetchHostRooms, deleteHostRoom, addHostRoom, updateRoom, setRoomOrder, checkRoomcode, setPollOrder, updateRoomStatus, getRoomResults, getHost }\r\n","import { call, put }     from \"redux-saga/effects\";\r\nimport ActionTypes       from '../actionTypes';\r\nimport { checkRoomcode }   from '../../databaseCommunication/roomFunctions';\r\n\r\n// async function fetchAsync (func) {\r\n// \tconst response = await func();\r\n// \tif (response) {\r\n// \t\treturn response;\r\n// \t}\r\n//\r\n// \tthrow new Error ('bad');\r\n// }\r\n\r\nexport function* validateRoomcode (action) {\r\n\r\n\ttry {\r\n\t\t//console.log('here')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t // host_id\r\n\t\tconst response = yield call(() => checkRoomcode(action.room_id))\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.roomcode.CHECK_ROOMCODE_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n    \tconsole.log('here')\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.roomcode.CHECK_ROOMCODE_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\t}\r\n};\r\n","import { call, put }     from \"redux-saga/effects\";\r\nimport ActionTypes       from '../actionTypes';\r\nimport { fetchHostRooms,\r\n\t\t deleteHostRoom,\r\n\t\t addHostRoom }\t from '../../databaseCommunication/roomFunctions';\r\nimport { getUserId } \t\t\tfrom '../../LoginUtils';\r\n\r\n// async function fetchAsync (func) {\r\n// \tconst response = await func();\r\n// \tif (response) {\r\n// \t\treturn response;\r\n// \t}\r\n//\r\n// \tthrow new Error ('bad');\r\n// }\r\n\r\nexport function* fetchRooms (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield getUserId();\r\n\t\t\t\t\t\t\t                     // host_id\r\n\t\tconst response = yield call(fetchHostRooms, user_id);\r\n\t\t//console.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostdash.FETCH_ROOMS_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostdash.FETCH_ROOMS_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\nexport function* deleteRoom (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield getUserId();\r\n\t\t                \t\t\t\t\t\t\t  // host_id\r\n\t\tconst response = yield call(() => deleteHostRoom(user_id, action.room_id))\r\n\t\t//console.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostdash.DELETE_ROOM_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostdash.DELETE_ROOM_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\nexport function* addRoom (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield getUserId();\r\n\t\t                                      // host_id\r\n\t\tconst response = yield call(addHostRoom, user_id);\r\n\t\t//console.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostdash.ADD_ROOM_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostdash.ADD_ROOM_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n","import { call, put }     from \"redux-saga/effects\";\r\nimport ActionTypes       from '../actionTypes';\r\nimport { fetchAgenda }   from '../../databaseCommunication/pollFunctions';\r\n\r\n// async function fetchAsync (func) {\r\n// \tconst response = await func();\r\n// \tif (response) {\r\n// \t\treturn response;\r\n// \t}\r\n//\r\n// \tthrow new Error ('bad');\r\n// }\r\n\r\nexport function* fetchUserAgenda (action) {\r\n\r\n\ttry {\r\n\t\t//console.log('here');\r\n\t\t                                          // host_id\r\n\t\tconst response = yield call(() => fetchAgenda(null, action.room_id))\r\n\t\tconsole.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.useragenda.FETCH_AGENDA_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.useragenda.FETCH_AGENDA_ERROR,\r\n      error\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\n// export function* deleteRoom (action) {\r\n//\r\n// \ttry {\r\n// \t\tconst response = yield call(() => deleteHostRoom(action.room_id))\r\n// \t\tconsole.log(response);\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.DELETE_ROOM_SUCCESS,\r\n// \t\t\tresponse\r\n// \t\t});\r\n//\r\n// \t} catch(error) {\r\n//\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.DELETE_ROOM_ERROR,\r\n//       error\r\n// \t\t});\r\n//\r\n// \t}\r\n// };\r\n//\r\n// export function* addRoom (action) {\r\n//\r\n// \ttry {\r\n// \t\tconst response = yield call(addHostRoom);\r\n// \t\tconsole.log(response);\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.ADD_ROOM_SUCCESS,\r\n// \t\t\tresponse\r\n// \t\t});\r\n//\r\n// \t} catch(error) {\r\n//\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.ADD_ROOM_ERROR,\r\n//       error\r\n// \t\t});\r\n//\r\n// \t}\r\n// };\r\n","import { select, call, put }     from \"redux-saga/effects\";\r\nimport ActionTypes       from '../actionTypes';\r\nimport { fetchAgenda, addPoll, updatePollStatus } \t\t  from '../../databaseCommunication/pollFunctions';\r\nimport { updateRoom, updateRoomStatus } \t\t  from '../../databaseCommunication/roomFunctions';\r\nimport { getUserId } \t\t\tfrom '../../LoginUtils';\r\n\r\n// async function fetchAsync (func) {\r\n// \tconst response = await func();\r\n// \tif (response) {\r\n// \t\treturn response;\r\n// \t}\r\n//\r\n// \tthrow new Error ('bad');\r\n// }\r\n\r\nexport function* fetchHostAgenda (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield getUserId();                     \r\n\t\tconst response = yield call(() => fetchAgenda(user_id, action.room_id))\r\n\t\t// const response = yield call(() => fetchAgenda(action.room_id))\r\n\r\n\t\t// console.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.FETCH_AGENDA_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.FETCH_AGENDA_ERROR,\r\n      error\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\nexport const roomSelector = ( state ) => {\r\n\treturn {\r\n\t\tstatus: state.hostagenda.status,\r\n\t\ttitle: state.hostagenda.title,\r\n\t\tpolls: state.hostagenda.polls,\r\n\t\torder: state.hostagenda.order\r\n\t}\r\n}\r\n\r\nexport function* updateHostAgenda (action) {\r\n\r\n\ttry {\r\n\t\tconst roomState = yield select(roomSelector);\r\n\t\tconst user_id = yield getUserId();\r\n\t\t                                          // host_id\r\n\t\tconst response = yield call(() => updateRoom(user_id, action.room_id, {...roomState}))\r\n\t\t// console.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.UPDATE_AGENDA_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.UPDATE_AGENDA_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n}\r\n\r\n// export function* deleteRoomPoll (action) {\r\n//\r\n// \ttry {\r\n// \t\tconst response = yield call(() => deleteHostRoom(action.room_id))\r\n// \t\tconsole.log(response);\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.DELETE_ROOM_SUCCESS,\r\n// \t\t\tresponse\r\n// \t\t});\r\n//\r\n// \t} catch(error) {\r\n//\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.DELETE_ROOM_ERROR,\r\n//       error\r\n// \t\t});\r\n//\r\n// \t}\r\n// };\r\n\r\nexport function* addRoomPoll (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield getUserId();\r\n\t\t                                       // host_id\r\n\t\tconst response = yield call(() => addPoll(user_id, action.room_id));\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.ADD_POLL_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.ADD_POLL_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\nexport function* changePollStatus (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield getUserId();\r\n\t\t                                                // host_id\r\n\t\tconst response = yield call(() => updatePollStatus(user_id, action.room_id,\r\n                                                       action.poll_id,\r\n                                                       action.newStatus ));\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.UPDATE_POLL_STATUS_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.UPDATE_POLL_STATUS_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\nexport function* changeRoomStatus (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield getUserId();\r\n    \t//console.log('jere')\r\n\t\tconst response = yield call(() => updateRoomStatus(user_id, action.room_id, action.newStatus ));\r\n    \t//console.log(response)\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.UPDATE_ROOM_STATUS_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.UPDATE_ROOM_STATUS_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n","import { call, put, select }     from \"redux-saga/effects\";\r\nimport ActionTypes       from '../actionTypes';\r\nimport { fetchPollData, submitVote }   from '../../databaseCommunication/pollFunctions';\r\nimport { getUserId }\t\t\t\tfrom '../../LoginUtils';\r\n\r\n// async function fetchAsync (func) {\r\n// \tconst response = await func();\r\n// \tif (response) {\r\n// \t\treturn response;\r\n// \t}\r\n//\r\n// \tthrow new Error ('bad');\r\n// }\r\n\r\nexport function* fetchUserPoll (action) {\r\n\r\n\ttry {\r\n\t\t//console.log('here');\r\n\t\t                                             // host_id\r\n\t\tconst response = yield call(() => fetchPollData(null, action.room_id, action.poll_id))\r\n\t\tconsole.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.userpoll.FETCH_POLL_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.userpoll.FETCH_POLL_ERROR,\r\n      error\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\nexport const pollSelector = ( state ) => {\r\n\treturn {\r\n\t\tselection: state.userpoll.pollStatus.selection,\r\n\t\tsubmission: state.userpoll.pollStatus.submission,\r\n\t\tuserInput: state.userpoll.userInput\r\n\t}\r\n}\r\n\r\nexport function* sendVote (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield getUserId();\r\n\t\tconst currentPoll = yield select(pollSelector);\r\n\t\tconst response = yield call(() => submitVote(user_id, action.room_id, action.poll_id,\r\n\t\t\t                                           currentPoll.selection, currentPoll.submission, currentPoll.userInput))\r\n\t\t//console.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.userpoll.SUBMIT_VOTE_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.userpoll.SUBMIT_VOTE_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n//\r\n// export function* addRoom (action) {\r\n//\r\n// \ttry {\r\n// \t\tconst response = yield call(addHostRoom);\r\n// \t\tconsole.log(response);\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.ADD_ROOM_SUCCESS,\r\n// \t\t\tresponse\r\n// \t\t});\r\n//\r\n// \t} catch(error) {\r\n//\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.ADD_ROOM_ERROR,\r\n//       error\r\n// \t\t});\r\n//\r\n// \t}\r\n// };\r\n","import { call, put, select }     from \"redux-saga/effects\";\r\nimport ActionTypes       from '../actionTypes';\r\nimport { fetchPollData, updatePoll, updatePollStatus }   from '../../databaseCommunication/pollFunctions';\r\nimport { getUserId } \t\t\tfrom '../../LoginUtils';\r\n\r\n// async function fetchAsync (func) {\r\n// \tconst response = await func();\r\n// \tif (response) {\r\n// \t\treturn response;\r\n// \t}\r\n//\r\n// \tthrow new Error ('bad');\r\n// }\r\n\r\nexport function* fetchHostPoll (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield getUserId();\r\n\t\t//console.log('here');                       // host_id\r\n\t\tconst response = yield call(() => fetchPollData(user_id, action.room_id, action.poll_id))\r\n\t\t//console.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostpoll.FETCH_POLL_SUCCESS,\r\n\t\t\tresponse,\r\n      \t\tlocation_state: action.location_state\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostpoll.FETCH_POLL_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\nconst roomSelector = ( state ) => {\r\n\treturn {...state.hostpoll.poll}\r\n}\r\n\r\nexport function* updateHostPoll (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield getUserId();\r\n\r\n\t\t//console.log('update')\r\n\t\tconst pollState = yield select(roomSelector);\r\n\t\tconst response = yield call(() => updatePoll(user_id, action.room_id, action.poll_id, pollState))\r\n\t\t//console.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostpoll.UPDATE_POLL_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostpoll.UPDATE_POLL_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\nexport function* changePollStatusPoll (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield getUserId();\r\n\t\tconsole.log('here');\r\n\t\tconst response = yield call(() => updatePollStatus(user_id, action.room_id, action.poll_id, action.status))\r\n\t  \tconst poll = response.polls[action.poll_id];\r\n    \t//console.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostpoll.UPDATE_POLL_STATUS_SUCCESS,\r\n\t\t\tpoll\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostpoll.UPDATE_POLL_STATUS_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\n// export function* deleteRoom (action) {\r\n//\r\n// \ttry {\r\n// \t\tconst response = yield call(() => deleteHostRoom(action.room_id))\r\n// \t\tconsole.log(response);\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.DELETE_ROOM_SUCCESS,\r\n// \t\t\tresponse\r\n// \t\t});\r\n//\r\n// \t} catch(error) {\r\n//\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.DELETE_ROOM_ERROR,\r\n//       error\r\n// \t\t});\r\n//\r\n// \t}\r\n// };\r\n//\r\n// export function* addRoom (action) {\r\n//\r\n// \ttry {\r\n// \t\tconst response = yield call(addHostRoom);\r\n// \t\tconsole.log(response);\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.ADD_ROOM_SUCCESS,\r\n// \t\t\tresponse\r\n// \t\t});\r\n//\r\n// \t} catch(error) {\r\n//\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.ADD_ROOM_ERROR,\r\n//       error\r\n// \t\t});\r\n//\r\n// \t}\r\n// };\r\n","import { call, put }     from \"redux-saga/effects\";\r\nimport ActionTypes       from '../actionTypes';\r\n//import { getPollResults }   from '../MockDataFunctions';\r\nimport { getPollResults }   from '../../databaseCommunication/pollFunctions';\r\nimport { getUserId }\t\t\t\tfrom '../../LoginUtils';\r\n\r\n// async function fetchAsync (func) {\r\n// \tconst response = await func();\r\n// \tif (response) {\r\n// \t\treturn response;\r\n// \t}\r\n//\r\n// \tthrow new Error ('bad');\r\n// }\r\n\r\nexport function* fetchPollResults (action) {\r\n\r\n\ttry {\r\n\t\t//console.log('here');\r\n\t\tconst user_id = yield getUserId();\r\n\t\tconst response = yield call(() => getPollResults(user_id, action.room_id, action.poll_id))\r\n\t\tconsole.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.pollresults.FETCH_RESULTS_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.pollresults.FETCH_RESULTS_ERROR,\r\n      error\r\n\t\t});\r\n\r\n\t}\r\n};\r\n","import { call, put }     from \"redux-saga/effects\";\r\nimport ActionTypes       from '../actionTypes';\r\nimport { getRoomResults }   from '../../databaseCommunication/roomFunctions';\r\nimport { getUserId }\t\t\t\tfrom '../../LoginUtils';\r\n\r\n// async function fetchAsync (func) {\r\n// \tconst response = await func();\r\n// \tif (response) {\r\n// \t\treturn response;\r\n// \t}\r\n//\r\n// \tthrow new Error ('bad');\r\n// }\r\n\r\nexport function* fetchRoomResults (action) {\r\n\r\n\ttry {\r\n\t\t//console.log('here');\r\n\t\tconst user_id = yield getUserId();\r\n\t\tconsole.log(user_id);\r\n\t\tconst response = yield call(() => getRoomResults(user_id, action.room_id))\r\n\t\tconsole.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.roomresults.FETCH_RESULTS_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.roomresults.FETCH_RESULTS_ERROR,\r\n      error\r\n\t\t});\r\n\r\n\t}\r\n};\r\n","import { takeLatest, all }             from \"redux-saga/effects\";\r\nimport ActionTypes                from '../actionTypes';\r\n\r\nimport { validateRoomcode }   from './roomcode.saga'\r\nimport { fetchRooms,\r\n         deleteRoom,\r\n         addRoom }             from './hostdash.saga.js';\r\nimport { fetchUserAgenda }     from './useragenda.saga.js';\r\nimport { fetchHostAgenda, updateHostAgenda,\r\n         addRoomPoll,\r\n         changePollStatus,\r\n         changeRoomStatus }     from './hostagenda.saga.js';\r\nimport { fetchUserPoll,\r\n         sendVote }  from './userpoll.saga';\r\nimport { fetchHostPoll,\r\n         updateHostPoll,\r\n         changePollStatusPoll }  from './hostpoll.saga';\r\nimport { fetchPollResults } from './pollresults.saga';\r\nimport { fetchRoomResults } from './roomresults.saga';\r\n\r\n\r\n\r\n// watcher saga: watches for actions dispatched to the store, starts worker saga\r\n\r\nexport function* watcherSaga() {\r\n    yield takeLatest(ActionTypes.roomcode.CHECK_ROOMCODE_START, validateRoomcode);\r\n    yield takeLatest(ActionTypes.hostdash.FETCH_ROOMS_START, fetchRooms);\r\n    yield takeLatest(ActionTypes.hostdash.DELETE_ROOM_START, deleteRoom);\r\n    yield takeLatest(ActionTypes.hostdash.ADD_ROOM_START, addRoom);\r\n    yield takeLatest(ActionTypes.useragenda.FETCH_AGENDA_START, fetchUserAgenda);\r\n    yield takeLatest(ActionTypes.hostagenda.FETCH_AGENDA_START, fetchHostAgenda);\r\n    yield takeLatest(ActionTypes.hostagenda.ADD_POLL_START, addRoomPoll );\r\n    yield takeLatest(ActionTypes.hostagenda.UPDATE_AGENDA_START, updateHostAgenda );\r\n    yield takeLatest(ActionTypes.hostagenda.UPDATE_POLL_STATUS_START, changePollStatus );\r\n    yield takeLatest(ActionTypes.hostagenda.UPDATE_ROOM_STATUS_START, changeRoomStatus );\r\n    yield takeLatest(ActionTypes.userpoll.FETCH_POLL_START, fetchUserPoll );\r\n    yield takeLatest(ActionTypes.hostpoll.FETCH_POLL_START, fetchHostPoll );\r\n    yield takeLatest(ActionTypes.hostpoll.UPDATE_POLL_START, updateHostPoll );\r\n    yield takeLatest(ActionTypes.hostpoll.UPDATE_POLL_STATUS_START, changePollStatusPoll );\r\n    yield takeLatest(ActionTypes.userpoll.SUBMIT_VOTE_START, sendVote );\r\n    yield takeLatest(ActionTypes.pollresults.FETCH_RESULTS_START, fetchPollResults );\r\n    yield takeLatest(ActionTypes.roomresults.FETCH_RESULTS_START, fetchRoomResults );\r\n\r\n}\r\n","export default {\r\n  smallMobile: 320,\r\n  mobile: 480,\r\n  tablet: 768,\r\n  smallDesktop: 1024,\r\n  desktop: 1280,\r\n  largeDesktop: 1440,\r\n  hdDesktop: 1600,\r\n  uhdDesktop: 1920\r\n};\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Breakpoints      from '../../components/theme/Breakpoints';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nconst getViewport = (windowWidth) => {\r\n\r\n  if (windowWidth <= Breakpoints.smallMobile) { return 'smallMobile'}\r\n  else if (windowWidth <= Breakpoints.mobile) { return 'mobile' }\r\n  else if (windowWidth <= Breakpoints.tablet) { return 'tablet'}\r\n  else if (windowWidth <= Breakpoints.smallDesktop) { return 'smallDesktop' }\r\n  else if (windowWidth <= Breakpoints.desktop) { return 'desktop' }\r\n  else if (windowWidth <= Breakpoints.largeDesktop) { return 'largeDesktop' }\r\n  else if (windowWidth <= Breakpoints.hdDesktop) { return 'hdDesktop' }\r\n  else { return 'uhdDesktop' }\r\n\r\n}\r\n\r\nclass ViewportHandler extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const initView = getViewport(window.innerWidth);\r\n    this.state = { viewport: initView };\r\n\r\n    this.handleResize = this.handleResize.bind(this);\r\n  }\r\n\r\n  async handleResize(e) {\r\n\r\n    const viewport = getViewport(window.innerWidth);\r\n\r\n    if (this.state.viewport === viewport) { return; }\r\n\r\n    await this.setState({\r\n      ...this.state,\r\n      viewport: viewport\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleResize)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"resize\", this.handleResize)\r\n  }\r\n\r\n  render () {\r\n\r\n    console.log(this.state)\r\n    return (\r\n      <>\r\n        {React.cloneElement(this.props.children, { viewport: this.state.viewport })}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nViewportHandler.propTypes = propTypes;\r\nViewportHandler.defaultProps = defaultProps;\r\n\r\nexport default ViewportHandler;\r\n","export const Colors = {\r\n  'Green' : '#74C74F',\r\n  '#74C74F' : '#74C74F',\r\n\r\n  'Yellow' : '#F5B700',\r\n  '#F5B700': '#F5B700',\r\n\r\n  'Red' : '#F24236',\r\n  '#F24236' : '#F24236',\r\n\r\n  'Blue' : '#013087',\r\n  '#1C77C3' : '#013087',\r\n\r\n  'LightBlue': '#39A9DB',\r\n  '#39A9DB' : '#39A9DB',\r\n\r\n  'DarkGreen' : '#19535F',\r\n  '#19535F' : '#19535F',\r\n\r\n  'Pine' : '#0B7A75',\r\n  '#0B7A75' : '#0B7A75',\r\n\r\n  'Charcol' : '#495159',\r\n  '#495159' : '#495159',\r\n\r\n  'Black'   : '#282828',\r\n  '#282828' : '#282828',\r\n\r\n  'White' : '#FFFFFF',\r\n  '#FFFFFF' : '#FFFFFF',\r\n\r\n  'LightGrey': '#d3d3d3',\r\n  '#d3d3d3': '#d3d3d3',\r\n\r\n  'Buff': '#CFB387',\r\n  '#CFB387': '#CFB387',\r\n};\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes\t\tfrom 'react-extra-prop-types';\r\n\r\n\r\nconst propTypes = {\r\n  primitive: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n\r\n  color: ExtraPropTypes.color,\r\n  fontSize: PropTypes.int,\r\n  lineHeight: PropTypes.int,\r\n};\r\n\r\nconst defaultProps = {\r\n  primitive: 'span',\r\n};\r\n\r\nconst TextWrapper = styled.span`\r\n  color: ${({color}) => color}px;\r\n  font-size: ${({fontSize}) => fontSize}px;\r\n  line-height: ${({lineHeight}) => lineHeight}px;\r\n  margin: 0;\r\n`;\r\n\r\nconst Text = ( props ) => {\r\n\r\n  const { primitive, children, ...rest } = props;\r\n\r\n  return (\r\n    <TextWrapper as={primitive} {...rest}>\r\n      {children}\r\n    </TextWrapper>\r\n  );\r\n};\r\n\r\nText.propTypes = propTypes;\r\nText.defaultProps = defaultProps;\r\n\r\nexport default Text;\r\n","import WebFont from 'webfontloader';\r\n\r\nconst WebFontConfig = {\r\n  google:{\r\n  \tfamilies: ['Open Sans', 'Montserrat:300,900', 'Work Sans']\r\n  }\r\n};\r\n\r\nWebFont.load(WebFontConfig);\r\n\r\nexport const Fonts = {\r\n\tMontserrat: 'Montserrat',\r\n  WorkSans: 'Work Sans',\r\n  OpenSans: 'Open Sans'\r\n};\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Text             from './Text'\r\nimport { Fonts }        from './Fonts';\r\nimport { Colors }       from './Colors';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  primative: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h6', 'span', 'p']),\r\n\r\n  color: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  primitive: 'p',\r\n\r\n  color: Colors.Black,\r\n};\r\n\r\nconst fontConfig = {\r\n  fontFamily: Fonts.WorkSans,\r\n  fontWeight: 'bold',\r\n\r\n  twoExtraSmall: { fontSize: 12, lineHeight: 18  },\r\n  extraSmall: { fontSize: 14, lineHeight: 20  },\r\n  small: { fontSize: 16, lineHeight: 22 },\r\n  medium: { fontSize: 20, lineHeight: 28  },\r\n  large: { fontSize: 26, lineHeight: 36 },\r\n  extraLarge: { fontSize: 32, lineHeight: 42 }\r\n};\r\n\r\nconst BodyWrapper = styled(Text)`\r\n  font-weight: ${fontConfig.fontWeight};\r\n  font-family: ${fontConfig.fontFamily};\r\n  color: ${({color}) => color};\r\n  white-space: pre-line;\r\n`;\r\n\r\nconst Body = ( props ) => {\r\n\r\n  const { primitive, extraLarge, large, medium, small, extraSmall, twoExtraSmall,\r\n          children, color, ...rest } = props;\r\n\r\n  let sizeConfig = {};\r\n  if (extraLarge) { sizeConfig = fontConfig.extraLarge }\r\n  else if (large) { sizeConfig = fontConfig.large }\r\n  else if (small) { sizeConfig = fontConfig.small }\r\n  else if (extraSmall) { sizeConfig = fontConfig.extraSmall }\r\n  else if (twoExtraSmall) { sizeConfig = fontConfig.twoExtraSmall }\r\n  else { sizeConfig = fontConfig.medium }\r\n\r\n  return(\r\n    <BodyWrapper color={color}\r\n                 primitive={primitive}\r\n                 fontSize={sizeConfig.fontSize}\r\n                 lineHeight={sizeConfig.lineHeight}\r\n                 {...rest}>\r\n      {children}\r\n    </BodyWrapper>\r\n  );\r\n};\r\n\r\nBody.propTypes = propTypes;\r\nBody.defaultProps = defaultProps;\r\n\r\nexport default Body;\r\n","import React\t\t\t\t\t\tfrom 'react';\r\nimport styled\t \t\t\t\t\tfrom 'styled-components';\r\nimport PropTypes \t\t\t\tfrom 'prop-types';\r\nimport ExtraPropTypes\t\tfrom 'react-extra-prop-types';\r\n\r\nimport { Colors }       from './Colors';\r\nimport { Fonts } \t\t\t\tfrom './Fonts';\r\n\r\nimport Text \t\t\t\t\t\tfrom './Text';\r\n\r\nconst propTypes = {\r\n\tchildren: PropTypes.node,\r\n\tprimitive: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'span', 'p']),\r\n\r\n\tcolor: ExtraPropTypes.color,\r\n\r\n\tfiveExtraSmall: PropTypes.bool,\r\n\tfourExtraSmall: PropTypes.bool,\r\n\tthreeExtraSmall: PropTypes.bool,\r\n\ttwoExtraSmall: PropTypes.bool,\r\n\textraSmall: PropTypes.bool,\r\n\tsmall: PropTypes.bool,\r\n\tmedium: PropTypes.bool,\r\n\tlarge: PropTypes.bool,\r\n\textraLarge: PropTypes.bool,\r\n\ttwoExtraLarge: PropTypes.bool,\r\n\tthreeExtraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n\tcolor: Colors.Black,\r\n\tprimitive: 'h1'\r\n};\r\n\r\nconst fontConfig = {\r\n  fontFamily: Fonts.Montserrat,\r\n\tfontWeight: '900',\r\n\r\n\tthreeExtraLarge: { fontSize: 160, lineHeight: 160},\r\n\ttwoExtraLarge: { fontSize: 140, lineHeight: 140},\r\n\textraLarge: { fontSize: 120, lineHeight: 120},\r\n\tlarge: { fontSize: 104, lineHeight: 104},\r\n\tmedium: { fontSize: 86, lineHeight: 86},\r\n\tsmall: { fontSize: 74, lineHeight: 74},\r\n\textraSmall: { fontSize: 56, lineHeight: 56},\r\n\ttwoExtraSmall: { fontSize: 48, lineHeight: 48},\r\n\tthreeExtraSmall: { fontSize: 32, lineHeight: 32},\r\n\tfourExtraSmall: { fontSize: 24, lineHeight: 24},\r\n\tfiveExtraSmall: { fontSize: 20, lineHeight: 20 }\r\n};\r\n\r\nconst JumboComponent = styled(Text)`\r\n\tfont-weight: ${fontConfig.fontWeight};\r\n\tfont-family: ${fontConfig.fontFamily};\r\n\tcolor: ${({color})=>color};\r\n\tletter-spacing: 0.02em;\r\n`;\r\n\r\n\r\nconst Jumbo = ( props ) => {\r\n\r\n\tconst { color,\r\n\t\t      primitive,\r\n\t\t      children,\r\n\t\t\t\t\tthreeExtraLarge,\r\n\t\t\t\t\ttwoExtraLarge,\r\n\t\t\t\t\textraLarge,\r\n\t\t\t\t\tlarge,\r\n\t\t\t\t\tmedium,\r\n\t\t\t\t\tsmall,\r\n\t\t\t\t\textraSmall,\r\n\t\t\t\t\ttwoExtraSmall,\r\n\t\t\t\t\tthreeExtraSmall,\r\n\t\t\t\t\tfourExtraSmall,\r\n\t\t\t\t\tfiveExtraSmall,\r\n\t\t\t\t\t...rest } = props\r\n\r\n\tlet sizeConfig = {};\r\n\r\n\tif(threeExtraLarge) {\r\n\t\tsizeConfig = fontConfig.threeExtraLarge;\r\n\t} else if(twoExtraLarge) {\r\n\t\tsizeConfig = fontConfig.twoExtraLarge;\r\n\t} else if (large) {\r\n\t\tsizeConfig = fontConfig.large;\r\n\t} else if (medium) {\r\n\t\tsizeConfig = fontConfig.medium;\r\n\t} else if (small) {\r\n\t\tsizeConfig = fontConfig.small;\r\n\t} else if (extraSmall) {\r\n\t\tsizeConfig = fontConfig.extraSmall;\r\n\t} else if (twoExtraSmall) {\r\n\t\tsizeConfig = fontConfig.twoExtraSmall;\r\n\t} else if (threeExtraSmall) {\r\n\t\tsizeConfig = fontConfig.threeExtraSmall;\r\n\t} else if (fourExtraSmall) {\r\n\t\tsizeConfig = fontConfig.fourExtraSmall;\r\n\t} else if (fiveExtraSmall) {\r\n\t\tsizeConfig = fontConfig.fiveExtraSmall;\r\n\t} else {\r\n\t\tsizeConfig = fontConfig.extraLarge;\r\n  }\r\n\r\n\treturn (\r\n\t\t<JumboComponent color={color}\r\n\t\t\t\t\t\t\t\t\t\tprimitive={primitive}\r\n\t\t\t\t\t\t\t\t\t\tfontSize={sizeConfig.fontSize}\r\n\t\t\t\t\t\t\t\t\t\tlineHeight={sizeConfig.lineHeight}\r\n\t\t\t\t\t\t\t\t\t\t{...rest}>\r\n\t      {children}\r\n\t\t</JumboComponent>);\r\n};\r\n\r\nJumbo.propTypes = propTypes;\r\nJumbo.defaultProps = defaultProps;\r\n\r\nexport default Jumbo;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from './Colors';\r\nimport Body             from './Body';\r\nimport Jumbo            from './Jumbo';\r\nimport logo     from './logo.png';\r\n\r\nconst Wrapper = styled.div`\r\n  background: ${Colors.White};\r\n  border-bottom: 5px solid ${Colors.Buff};\r\n  width: 100%;\r\n  padding: 5px;\r\n  height: 7vh;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst PageHeader = () => {\r\n\r\n  return (\r\n    <Wrapper>\r\n      <img src={logo} alt={'Logo'} height={'50vh'}/>\r\n    </Wrapper>\r\n  )\r\n};\r\n\r\n\r\nexport default PageHeader;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Body             from '../theme/Body'\r\n\r\nconst Wrapper = styled.div`\r\n  background: ${Colors.Blue};\r\n  border-top: 2px solid ${Colors.Buff};\r\n  width: 100%;\r\n  padding: 2px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 3vh;\r\n`;\r\n\r\nconst PageFooter = () => {\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Body twoExtraSmall color={Colors.Buff}> CS410: Faculty Voting - Fall 2020 </Body>\r\n    </Wrapper>\r\n  )\r\n};\r\n\r\n\r\nexport default PageFooter;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport PageHeader       from '../../components/theme/PageHeader'\r\nimport PageFooter       from '../../components/theme/PageFooter'\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  color: ExtraPropTypes.color,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nconst PageWrapper = styled.div`\r\n  background-color: ${({color}) => color};\r\n  right: 0;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  position: fixed;\r\n\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between\r\n`;\r\n\r\nconst CenterWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  padding-top: 5vh;\r\n  flex-grow: 2;\r\n`;\r\n\r\nconst BasePageWrapper = (props) => {\r\n  return (\r\n    <PageWrapper color={props.color}>\r\n      <PageHeader />\r\n      <CenterWrapper>\r\n        {props.children}\r\n      </CenterWrapper>\r\n      <PageFooter />\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nBasePageWrapper.propTypes = propTypes;\r\nBasePageWrapper.defaultProps = defaultProps;\r\n\r\nexport default BasePageWrapper;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\n\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../../components/theme/Colors';\r\nimport BasePage         from './BasePage';\r\n\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  color: ExtraPropTypes.color,\r\n};\r\n\r\nconst defaultProps = {\r\n  color: Colors.Blue\r\n};\r\n\r\nconst ComponentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  height: 80%;\r\n`;\r\n\r\n\r\nconst MainPage = ( props ) => {\r\n\r\n  console.log(props);\r\n\r\n  return (\r\n    <BasePage color={props.color}>\r\n      <ComponentWrapper>\r\n        {React.cloneElement(props.children, { viewport: props.viewport })}\r\n      </ComponentWrapper>\r\n    </BasePage>\r\n  )\r\n}\r\n\r\nMainPage.propTypes = propTypes;\r\nMainPage.defaultProps = defaultProps;\r\n\r\nexport default MainPage;\r\n","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Body             from '../theme/Body';\r\nimport Jumbo             from '../theme/Jumbo';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  onClick: PropTypes.func,\r\n\r\n  backgroundColor: ExtraPropTypes.color,\r\n  textColor: ExtraPropTypes.color,\r\n\r\n  extraLarge: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  extraSmall: PropTypes.bool\r\n};\r\n\r\nconst defaultProps = {\r\n  onClick: undefined,\r\n  backgroundColor: Colors.Blue,\r\n  textColor: Colors.White,\r\n};\r\n\r\nconst BodyText = styled(Body)`\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst JumboText = styled(Jumbo)`\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ButtonComponent = styled.button`\r\n  background: ${({backgroundColor}) => backgroundColor};\r\n  position: relative;\r\n  display: inline-block;\r\n  cursor: ${({disabled}) => disabled ? `default` : `pointer`};\r\n  outline: none;\r\n  border: 0px;\r\n  vertical-align: middle;\r\n  horizontal-align: middle;\r\n  text-decoration: none;\r\n  border-radius: 42px;\r\n\r\n  width: 100%;\r\n  padding-right: ${({padding}) => padding};\r\n  padding-left: ${({padding}) => padding};\r\n`;\r\n\r\nconst buttonConfig = {\r\n  extraLarge: { buttonHeight: `44px`,\r\n                padding: `28px` },\r\n  large: { buttonHeight: `40px`,\r\n           padding: `22px`},\r\n  medium: { buttonHeight: `34px`,\r\n            padding: `16px` },\r\n  small: { buttonHeight: `28px`,\r\n           padding: `14px`},\r\n  extraSmall: { buttonHeight: `24px`,\r\n           padding: `12px`},\r\n};\r\n\r\nconst Button = ( props ) => {\r\n\r\n  const { children, backgroundColor, textColor, onClick, jumbo, ...rest} = props;\r\n\r\n  const bodyText = <BodyText color={textColor} children={children} {...rest}/>;\r\n  const jumboText = <JumboText color={textColor} children={children} {...rest}/>;\r\n\r\n  let config;\r\n\r\n  if (props.extraLarge) { config = buttonConfig.extraLarge }\r\n  else if (props.large) { config = buttonConfig.large }\r\n  else if (props.small) { config = buttonConfig.small }\r\n  else if (props.extraSmall) { config = buttonConfig.extraSmall }\r\n  else { config = buttonConfig.medium }\r\n\r\n  return(\r\n    <ButtonComponent padding={config.padding}\r\n                     buttonHeight={config.buttonHeight}\r\n                     {...props}>\r\n      { jumbo ? jumboText : bodyText }\r\n    </ButtonComponent>\r\n  );\r\n};\r\n\r\nButton.propTypes = propTypes;\r\nButton.defaultProps = defaultProps;\r\n\r\nexport default Button;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\n\r\nconst propTypes = {\r\n  color: ExtraPropTypes.color,\r\n\r\n  height: PropTypes.string,\r\n  width: PropTypes.string,\r\n  padding: PropTypes.int,\r\n  borderRadius: PropTypes.int,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n}\r\n\r\nconst defaultProps = {\r\n  color: Colors.White,\r\n  borderColor: Colors.White\r\n}\r\n\r\nconst CardComponent = styled.div`\r\n  box-sizing: border-box;\r\n  background-color: ${({color}) => color};\r\n  border-radius: ${({borderRadius}) => borderRadius}px;\r\n  ${({height}) => height ?`height: ${height}` : `height: auto`};\r\n  width: ${({width}) => width ? `${width}` : `auto`};\r\n  padding: ${({padding}) => padding}px;\r\n  ${({borderColor, borderWidth}) => borderColor ? `border: ${borderWidth}px solid ${borderColor}` : ``};\r\n`;\r\n\r\nconst paddingConfig = {\r\n  extraSmall: {\r\n    small: 8,\r\n    medium: 10,\r\n    large: 20,\r\n  },\r\n  small: {\r\n    small: 10,\r\n    medium: 12,\r\n    large: 25,\r\n  },\r\n  medium: {\r\n    small: 15,\r\n    medium: 25,\r\n    large: 35,\r\n  },\r\n  large: {\r\n    small: 20,\r\n    medium: 42,\r\n    large: 50,\r\n  }\r\n}\r\n\r\nconst getPadding = (size, borderSmall, borderMedium, borderLarge) => {\r\n\r\n  if (borderSmall) { return paddingConfig[size].small}\r\n  else if (borderLarge) { return paddingConfig[size].large}\r\n  else { return paddingConfig[size].medium}\r\n}\r\n\r\nconst Card = ( props ) => {\r\n\r\n  const { children, borderSmall, borderMedium, borderLarge,\r\n          extraSmall, small, medium, large, ...rest } = props;\r\n\r\n  let borderRadius;\r\n  if ( borderSmall ) { borderRadius = 5 }\r\n  else if ( borderLarge ) { borderRadius = 20 }\r\n  else { borderRadius = 15 }\r\n\r\n  let padding;\r\n  let borderWidth;\r\n  if ( extraSmall ) { padding = getPadding('extraSmall', borderSmall, borderMedium, borderLarge); borderWidth = 3 }\r\n  else if ( small ) { padding = getPadding('small', borderSmall, borderMedium, borderLarge); borderWidth = 3 }\r\n  else if ( large ) { padding = getPadding('large', borderSmall, borderMedium, borderLarge); borderWidth = 5 }\r\n  else { padding = getPadding('medium', borderSmall, borderMedium, borderLarge); borderWidth = 5 }\r\n\r\n  return (\r\n    <CardComponent borderRadius={borderRadius}\r\n                   borderWidth={borderWidth}\r\n                   padding={padding}\r\n                   {...rest}>\r\n      {children}\r\n    </CardComponent>\r\n  )\r\n};\r\n\r\nCard.propTypes = propTypes;\r\nCard.defaultProps = defaultProps;\r\n\r\nexport default Card;\r\n","import React                from 'react';\r\nimport styled               from 'styled-components';\r\n\r\nimport { Colors }           from '../theme/Colors';\r\nimport Button                from '../buttons/Button';\r\n\r\nimport Card                 from './Card';\r\n\r\nconst CenterRowWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  ${({padding}) => padding ? `padding-bottom: ${padding}px;` : ``}\r\n`;\r\n\r\nconst LoginWrapper = styled.div`\r\n  width: 75%;\r\n  min-width: 250px;\r\n`;\r\n\r\nconst HostWrapper = styled.div`\r\n  display: inline-block\r\n`;\r\n\r\nconst LoginCard = ( props ) => {\r\n\r\n  const { onHostLogin, onUserLogin,\r\n          extraSmall, small, medium, large } = props;\r\n\r\n  console.log(props)\r\n\r\n  let padding;\r\n\r\n  if ( extraSmall ) { padding = 20 }\r\n  else if ( small ) { padding = 25 }\r\n  else if ( large ) { padding = 35 }\r\n  else { padding = 30 }\r\n\r\n  const _renderLogin = (\r\n    <CenterRowWrapper padding={padding}>\r\n      <LoginWrapper>\r\n        <Button jumbo\r\n                extraSmall={extraSmall} small={small}\r\n                medium={medium} large={large}\r\n                backgroundColor={Colors.Buff}\r\n                onClick={onUserLogin}>\r\n          LOGIN\r\n        </Button>\r\n      </LoginWrapper>\r\n    </CenterRowWrapper>\r\n  );\r\n\r\n  const _renderHostLogin = (\r\n    <CenterRowWrapper>\r\n      <HostWrapper>\r\n        <Button small={extraSmall} medium={small}\r\n                large={medium} extraLarge={large}\r\n                onClick={onHostLogin}>\r\n          LOGIN AS HOST\r\n        </Button>\r\n      </HostWrapper>\r\n    </CenterRowWrapper>\r\n  );\r\n\r\n  return (\r\n    <Card borderLarge {...{extraSmall, small, medium, large}} color={Colors.Blue} borderColor={Colors.Blue}>\r\n      {_renderLogin}\r\n      {_renderHostLogin}\r\n    </Card>\r\n  )\r\n};\r\n\r\nexport default LoginCard;\r\n","import React                from 'react';\r\nimport styled               from 'styled-components';\r\nimport ParticlesBg          from 'particles-bg';\r\n\r\nimport ViewportHandler      from './format-pages/ViewportHandler';\r\nimport MainPage             from './format-pages/MainPage';\r\nimport { Colors }           from '../components/theme/Colors';\r\n\r\nimport history              from '../history';\r\n\r\nimport LoginCard            from '../components/cards/LoginCard';\r\n\r\nimport {userIsLoggedIn, userLogin, signOutCurrentUser, getCurrentUserEmail, userIsHamiltonian } from '../LoginUtils.js';\r\n\r\nconst LoginWrapper = styled.div`\r\n  width: ${({width}) => width};\r\n`;\r\n\r\nconst userLoginHandler = async () => {\r\n    await userLogin().then(() => {\r\n\tif (!userIsHamiltonian()) {\r\n\t    console.log(\"User \" + getCurrentUserEmail() + \" is not within Hamilton domain. Logging out.\");\r\n\t    alert(\"Please log in with a Hamilton account. (And enable pop-ups so the new login window appears)\");\r\n\t    signOutCurrentUser();\r\n\t} else {\r\n\t    pushLandingPage(\"user\");\r\n\t}\r\n    });\r\n}\r\n\r\nconst hostLoginHandler = async () => {\r\n\r\n    let response = await fetch('https://facultyvoting.hamilton.edu:4000/BOOM');\r\n    let responseText = await response.text()\r\n    console.log(responseText);\r\n  // fetch('https://facultyvoting.hamilton.edu:4000/BOOM')\r\n  //   .then(response => console.log(response));\r\n\r\n  await userLogin().then(() => {\r\n    if (!userIsHamiltonian()) {\r\n        console.log(\"User \" + getCurrentUserEmail() + \" is not within Hamilton domain. Logging out.\");\r\n        alert(\"Please log in with a Hamilton account. (And enable pop-ups if you don't see the login window appear)\");\r\n        signOutCurrentUser();\r\n    } else {\r\n        pushLandingPage(\"host\");\r\n    }\r\n  });\r\n}\r\n\r\nconst pushLandingPage = async (userOrHost) => {\r\n    if (userIsLoggedIn() && userIsHamiltonian()) {\r\n\tif (userOrHost == \"user\") {\r\n\t    history.push('/RoomCode');\r\n\t} else {\r\n\t    history.push('/HostDash');\r\n\t}\r\n    } else {\r\n\tconsole.log(\"Nobody is logged in, but new page was attempted to be loaded. User probably closed pop-up\");\r\n    }\r\n}\r\n\r\nconst LoginComponent = ( props ) => {\r\n\r\n  let width;\r\n  let size = {};\r\n  switch (props.viewport) {\r\n    case 'smallDesktop':\r\n      width = `75%`;\r\n      size.small = true;\r\n      break;\r\n    case 'tablet':\r\n      width = `100%`;\r\n      size.small = true;\r\n      break;\r\n    case 'mobile':\r\n    case 'smallMobile':\r\n      width = `100%`\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'hdDesktop':\r\n    case 'uhdDesktop':\r\n      width = `50%`\r\n      size.medium = true;\r\n      break;\r\n    default:\r\n      width = `50%`\r\n      size.small = true;\r\n  }\r\n\r\n  return (\r\n    <LoginWrapper width={width}>\r\n      <LoginCard onUserLogin={userLoginHandler}\r\n                 onHostLogin={hostLoginHandler}\r\n                 viewport={props.viewport}\r\n                 {...size}/>\r\n    </LoginWrapper>\r\n  )\r\n}\r\n\r\nconst LoginPage = ( props ) => {\r\n\r\n  console.log(props)\r\n\r\n  return (\r\n    <ViewportHandler>\r\n      <MainPage color={Colors.Blue}>\r\n          <LoginComponent/>\r\n      </MainPage>\r\n    </ViewportHandler>\r\n  )\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, {Component} from 'react';\r\nimport styled             from 'styled-components'\r\n\r\nimport Login from './pages/Login';\r\n\r\nclass App extends Component {\r\n\r\n\r\n  render(){\r\n\r\n    return (\r\n      <Login />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool\r\n};\r\n\r\nconst defaultProps = {\r\n};\r\n\r\nconst GroupWrapper = styled.div`\r\n  width: auto;\r\n`;\r\n\r\nconst ItemWrapper = styled.div`\r\n  ${({lastChild, padding}) => !lastChild ? `padding-bottom: ${padding}px;` : ``}\r\n  width: auto;\r\n`;\r\n\r\nconst _renderOptions = ( props ) => {\r\n\r\n  const { children, onClick, ...rest } = props;\r\n\r\n  const { extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  let padding;\r\n\r\n  if ( extraSmall ) { padding = 10}\r\n  else if ( small ) { padding = 10 }\r\n  else if ( large ) { padding = 18 }\r\n  else if ( extraLarge ) { padding = 22 }\r\n  else { padding = 14 }\r\n\r\n  console.log(children);\r\n\r\n  return React.Children.map( children, ((item, index) => {\r\n    const lastChild = index === children.length - 1;\r\n\r\n    return (\r\n      <ItemWrapper id={item.props.id} lastChild={lastChild} padding={padding}>\r\n        {React.cloneElement(item, {...rest, ...item.props})}\r\n      </ItemWrapper>\r\n    )\r\n  }))\r\n};\r\n\r\nconst Group = (props) => {\r\n\r\n  return (\r\n    <GroupWrapper>\r\n      {_renderOptions(props)}\r\n    </GroupWrapper>\r\n  )\r\n};\r\n\r\nGroup.propTypes = propTypes;\r\nGroup.defaultProps = defaultProps;\r\n\r\nexport default Group;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Body             from '../theme/Body';\r\nimport Card             from '../cards/Card';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node, // components for right side\r\n  text: PropTypes.string,\r\n\r\n  fontColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  text: 'Item'\r\n}\r\n\r\nconst ComponentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst TextWrapper = styled.div `\r\n  width: 100%;\r\n`;\r\n\r\nconst ChildWrapper = styled.div`\r\n  ${({padding}) => `padding-left: ${padding}px;`}\r\n`;\r\n\r\nconst ItemBase = ( props ) => {\r\n\r\n  const { children, text, ...rest } = props;\r\n\r\n  let padding;\r\n  if ( props.extraSmall ) { padding = 10 }\r\n  else if ( props.small ) { padding = 12 }\r\n  else if ( props.large ) { padding = 20 }\r\n  else if ( props.extraLarge ) { padding = 24 }\r\n  else { padding = 16 }\r\n\r\n  const renderChildren = React.Children.map(children, (item) => {\r\n    return (\r\n      <ChildWrapper padding={padding}>\r\n        {React.cloneElement(item, {...rest})}\r\n      </ChildWrapper>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <Card borderSmall {...rest}>\r\n      <ComponentWrapper>\r\n        <TextWrapper>\r\n          <Body {...rest}>\r\n            {text}\r\n          </Body>\r\n        </TextWrapper>\r\n        {renderChildren}\r\n      </ComponentWrapper>\r\n    </Card>\r\n  )\r\n\r\n}\r\n\r\nItemBase.propTypes = propTypes;\r\nItemBase.defaultProps = defaultProps;\r\n\r\nexport default ItemBase;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\n\r\nimport Item             from './Item';\r\nimport Button           from '../buttons/Button';\r\nimport Body             from '../theme/Body';\r\n\r\nconst propTypes = {\r\n  roomTitle: PropTypes.string,\r\n\r\n  onViewClick: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  roomTitle: 'Room Title',\r\n};\r\n\r\n\r\nconst HostRoomItem = ( props ) => {\r\n\r\n  const { roomTitle, roomCode, onViewClick,\r\n          ...rest } = props;\r\n\r\n  const viewButton = (\r\n    <Button {...rest} onClick={onViewClick}>\r\n      VIEW\r\n    </Button>\r\n  )\r\n\r\n  const roomCodeText = (\r\n    <Body {...rest}>\r\n      {roomCode}\r\n    </Body>\r\n  )\r\n\r\n\r\n  return (\r\n    <Item text={roomTitle} {...rest}>\r\n      { roomCodeText }\r\n      { viewButton }\r\n    </Item >\r\n  )\r\n\r\n}\r\n\r\nHostRoomItem.propTypes = propTypes;\r\nHostRoomItem.defaultProps = defaultProps;\r\n\r\nexport default HostRoomItem;\r\n","import React                          from 'react';\r\nimport styled                         from 'styled-components';\r\nimport PropTypes                      from 'prop-types';\r\nimport ExtraPropTypes                 from 'react-extra-prop-types';\r\n\r\nimport { MdCheckBoxOutlineBlank,\r\n         MdCheckBox,\r\n         MdRadioButtonUnchecked,\r\n         MdRadioButtonChecked,\r\n         MdDone,\r\n         MdCheckCircle,\r\n         MdLens,\r\n         MdAddCircleOutline,\r\n         MdClear,\r\n         MdDragHandle,\r\n         MdRemoveCircleOutline,\r\n         MdEdit,\r\n         MdSave,\r\n         MdVisibility }                     from 'react-icons/md';\r\n\r\nimport { IoMdTrash }                  from 'react-icons/io'\r\n\r\n// https://react-icons.github.io/react-icons/\r\n\r\nconst propTypes = {\r\n  type: PropTypes.oneOf(['box', 'checkbox', 'circle', 'bubble', 'check',\r\n                         'checkCircle', 'fullCircle', 'addCircle', 'x',\r\n                         'dragHandle', 'xCircle', 'trash', 'edit', 'save',\r\n                         'view' ]).isRequired,\r\n  onClick: PropTypes.func,\r\n\r\n  color: ExtraPropTypes.color,\r\n  size: PropTypes.string,\r\n\r\n  twoExtraLarge: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  extraSmall: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  onClick: undefined,\r\n};\r\n\r\nconst sizeConfig = {\r\n  twoExtraLarge: '2.75em',\r\n  extraLarge: '2em',\r\n  large: '1.75em',\r\n  medium: '1.5em' ,\r\n  small: '1em',\r\n  extraSmall: '0.75em'\r\n};\r\n\r\nconst Icon = ( props ) => {\r\n\r\n  const { type, size, twoExtraLarge, extraLarge, large,\r\n          medium, small, extraSmall, ...rest } = props;\r\n\r\n  let baseSize;\r\n\r\n  if (twoExtraLarge) { baseSize = sizeConfig.twoExtraLarge }\r\n  else if (extraLarge) { baseSize = sizeConfig.extraLarge }\r\n  else if (large) { baseSize = sizeConfig.large }\r\n  else if (small) { baseSize = sizeConfig.small }\r\n  else if (extraSmall) { baseSize = sizeConfig.extraSmall }\r\n  else { baseSize = sizeConfig.medium }\r\n\r\n  switch (type) {\r\n    case 'checkbox':\r\n      return( <MdCheckBox size={size ? size : baseSize} {...rest}/> )\r\n    case 'circle':\r\n      return( <MdRadioButtonUnchecked size={size ? size : baseSize} {...rest}/> )\r\n    case 'bubble':\r\n      return(< MdRadioButtonChecked size={size ? size : baseSize} {...rest}/> )\r\n    case 'check':\r\n      return( <MdDone size={size ? size : baseSize} {...rest}/> )\r\n    case 'checkCircle':\r\n      return( <MdCheckCircle size={size ? size : baseSize} {...rest}/>)\r\n    case 'fullCircle':\r\n      return( <MdLens size={size ? size : baseSize} {...rest}/>)\r\n    case 'addCircle':\r\n      return( <MdAddCircleOutline size={size ? size : baseSize} {...rest}/>)\r\n    case 'x':\r\n      return( <MdClear size={size ? size : baseSize} {...rest}/>)\r\n    case 'dragHandle':\r\n      return( <MdDragHandle size={size ? size : baseSize} {...rest}/>)\r\n    case 'xCircle':\r\n      return( <MdRemoveCircleOutline size={size ? size : baseSize} {...rest}/>)\r\n    case 'trash':\r\n      return( <IoMdTrash size={size ? size : baseSize} {...rest}/>)\r\n    case 'edit':\r\n      return( <MdEdit size={size ? size : baseSize} {...rest}/>)\r\n    case 'save':\r\n      return( <MdSave size={size ? size : baseSize} {...rest}/>)\r\n    case 'view':\r\n      return( <MdVisibility size={size ? size : baseSize} {...rest}/>)\r\n    default:\r\n      return( <MdCheckBoxOutlineBlank size={size ? size : baseSize} {...rest}/> )\r\n  };\r\n};\r\n\r\nIcon.propTypes = propTypes;\r\nIcon.defaultProps = defaultProps;\r\n\r\nexport default Icon;\r\n","import React                  from \"react\";\r\nimport styled                 from 'styled-components';\r\nimport PropTypes              from 'prop-types';\r\nimport ExtraPropTypes         from 'react-extra-prop-types';\r\n\r\nimport Icon                   from '../theme/Icon';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  iconColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nconst ComponentWrapper = styled.div `\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ItemWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-left: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst EditItem = ( props ) => {\r\n\r\n  const { children, iconColor, onDelete, ...rest } = props;\r\n\r\n  let padding;\r\n  if ( props.extraSmall ) { padding = 10 }\r\n  else if ( props.small ) { padding = 12 }\r\n  else if ( props.large ) { padding = 20 }\r\n  else if ( props.extraLarge ) { padding = 24 }\r\n  else { padding = 16 }\r\n\r\n  return (\r\n    <ComponentWrapper>\r\n        <ItemWrapper>\r\n          {React.cloneElement(children, {...rest})}\r\n        </ItemWrapper>\r\n        <IconWrapper padding={padding}>\r\n          <Icon type={'trash'} color={iconColor} onClick={onDelete}\r\n                small={props.extraSmall} medium={props.small}\r\n                large={props.medium} extraLarge={props.large}\r\n                twoExtraLarge={props.extraLarge}/>\r\n        </IconWrapper>\r\n    </ComponentWrapper>\r\n  )\r\n};\r\n\r\nEditItem.propTypes = propTypes;\r\nEditItem.defaultProps = defaultProps;\r\n\r\nexport default EditItem;\r\n","import React                  from \"react\";\r\nimport styled                 from 'styled-components';\r\nimport PropTypes              from 'prop-types';\r\nimport ExtraPropTypes         from 'react-extra-prop-types';\r\n\r\nimport Body                   from '../theme/Body';\r\nimport Icon                   from '../theme/Icon';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  iconColor: ExtraPropTypes.color,\r\n  textColor: ExtraPropTypes.color,\r\n\r\n  onClick: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nconst ComponentWrapper = styled.div `\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ItemWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-right: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst AddItem = ( props ) => {\r\n\r\n  const { children, iconColor, textColor, onClick, ...rest } = props;\r\n\r\n  let padding;\r\n  if ( props.extraSmall ) { padding = 10 }\r\n  else if ( props.small ) { padding = 12 }\r\n  else if ( props.large ) { padding = 20 }\r\n  else if ( props.extraLarge ) { padding = 24 }\r\n  else { padding = 16 }\r\n\r\n  return (\r\n    <ComponentWrapper>\r\n        <IconWrapper padding={padding}>\r\n          <Icon type={'addCircle'} color={iconColor} onClick={onClick}\r\n                small={props.extraSmall} medium={props.small}\r\n                large={props.medium} extraLarge={props.large}\r\n                twoExtraLarge={props.extraLarge}/>\r\n        </IconWrapper>\r\n        <ItemWrapper>\r\n          <Body color={textColor} {...rest}>\r\n            {children}\r\n          </Body>\r\n        </ItemWrapper>\r\n    </ComponentWrapper>\r\n  )\r\n};\r\n\r\nAddItem.propTypes = propTypes;\r\nAddItem.defaultProps = defaultProps;\r\n\r\nexport default AddItem;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Body             from '../theme/Body';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Icon             from '../theme/Icon';\r\n\r\nconst propTypes = {\r\n  status: PropTypes.string,\r\n\r\n  jumbo: PropTypes.bool,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  status: 'open',\r\n}\r\n\r\nconst ComponentWrapper = styled.div`\r\n  display: inline-block;\r\n`;\r\n\r\nconst ItemWrapper = styled.div`\r\n  display: flex;\r\n  flex-directon: row;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-right: ${({padding}) => padding};\r\n`;\r\n\r\nconst statusConfig = {\r\n  pending: { color: Colors.Yellow,\r\n             text: 'PENDING' },\r\n  open: { color: Colors.Green,\r\n          text: 'OPEN' },\r\n  closed: { color: Colors.Red,\r\n             text: 'CLOSED' }\r\n};\r\n\r\nconst sizeConfig = {\r\n  extraSmall: {size: '0.75em',\r\n               padding: '5px'},\r\n  small: {size: '0.9em',\r\n               padding: '6px'},\r\n  medium: {size: '1em',\r\n               padding: '8px'},\r\n  large: {size: '1.25em',\r\n               padding: '10px'},\r\n  extraLarge: {size: '1.5em',\r\n               padding: '12px'},\r\n};\r\n\r\nconst getStatusConfig = ( status ) => {\r\n\r\n  switch (status) {\r\n    case 'open':\r\n      return statusConfig.open;\r\n    case 'closed':\r\n      return statusConfig.closed;\r\n    default:\r\n      return statusConfig.pending;\r\n\r\n  }\r\n};\r\n\r\nconst getSizeConfig = ( args ) => {\r\n  const { extraSmall, small, medium, large, extraLarge } = args;\r\n\r\n  if (extraSmall) { return sizeConfig.extraSmall }\r\n  else if (small) { return sizeConfig.small }\r\n  else if (large) { return sizeConfig.large }\r\n  else if (extraLarge) { return sizeConfig.extraLarge }\r\n  else { return sizeConfig.medium }\r\n}\r\n\r\nconst dotIcon = ( sizeConfig, color ) => (\r\n  <IconWrapper padding={sizeConfig.padding}>\r\n    <Icon type={'fullCircle'} size={sizeConfig.size} color={color}/>\r\n  </IconWrapper>\r\n)\r\n\r\nconst StatusText = ( props ) => {\r\n\r\n  const { status, jumbo, ...rest} = props;\r\n\r\n  const sizeConfig = getSizeConfig(rest);\r\n  const statusConfig = getStatusConfig(status);\r\n\r\n  const bodyText = (\r\n    <Body {...rest}>\r\n      {statusConfig.text}\r\n    </Body>\r\n  );\r\n\r\n  const jumboText = (\r\n    <Jumbo {...rest}>\r\n      {statusConfig.text}\r\n    </Jumbo>\r\n  )\r\n\r\n  return (\r\n    <ComponentWrapper>\r\n      <ItemWrapper>\r\n        {dotIcon(sizeConfig, statusConfig.color)}\r\n        <TextWrapper>\r\n          { jumbo ? jumboText : bodyText }\r\n        </TextWrapper>\r\n      </ItemWrapper>\r\n    </ComponentWrapper>\r\n  )\r\n};\r\n\r\nStatusText.propTypes = propTypes;\r\nStatusText.defaultProps = defaultProps;\r\n\r\nexport default StatusText;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Card             from '../cards/Card'\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport StatusText       from '../format-text/StatusText'\r\n\r\nconst propTypes = {\r\n  header: PropTypes.string,\r\n  headerButton: PropTypes.node,\r\n  children: PropTypes.node,\r\n  footer: PropTypes.node,\r\n\r\n  cardColor: ExtraPropTypes.color,\r\n  cardBorderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\n\r\nconst defaultProps ={\r\n  cardColor: Colors.Blue,\r\n  cardBorderColor: Colors.White,\r\n};\r\n\r\nconst ComponentWrapper = styled.div`\r\n  height: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst SectionWrapper = styled.div`\r\n  padding-bottom: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  height: 100%;\r\n  width: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  padding-bottom: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst HeaderTextWrapper = styled.div`\r\n  width: 100%\r\n`;\r\n\r\nconst HeaderButtonWrapper  = styled.div``;\r\n\r\nconst ScrollableWrapper = styled.div`\r\n  overflow: scroll;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst FooterWrapper = styled.div`\r\n  padding-top: ${({padding}) => padding}px;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst SecondaryCard = ( props ) => {\r\n\r\n  const { header, headerButton, children, footer,\r\n          cardColor, cardBorderColor, ...rest } = props;\r\n\r\n  let padding;\r\n  let subPadding;\r\n  if (props.extraSmall) { padding = 40;\r\n                          subPadding = 14}\r\n  else if (props.small) { padding = 45;\r\n                          subPadding = 16}\r\n  else if (props.large) { padding = 55;\r\n                          subPadding = 28}\r\n  else if (props.extraLarge) { padding = 60;\r\n                              subPadding = 32}\r\n  else { padding = 50;\r\n         subPadding = 22}\r\n\r\n const _renderHeader = (\r\n   <HeaderWrapper padding={padding}>\r\n     <HeaderTextWrapper>\r\n       {header}\r\n     </HeaderTextWrapper>\r\n     <HeaderButtonWrapper>\r\n       {headerButton ? React.cloneElement(headerButton, {...rest}) :\r\n                     <div/>}\r\n     </HeaderButtonWrapper>\r\n   </HeaderWrapper>\r\n );\r\n\r\n  const _renderSection = ( section ) => {\r\n\r\n    return (\r\n    <SectionWrapper padding={padding}>\r\n      {React.cloneElement(section, {...rest})}\r\n    </SectionWrapper>\r\n  );}\r\n\r\n\r\n  const _renderFooter =  footer ? (\r\n    <FooterWrapper padding={padding}>\r\n      {React.cloneElement(footer, {...rest})}\r\n    </FooterWrapper>\r\n  ) : <div/>;\r\n\r\n\r\n  return (\r\n    <Card color={cardColor} height={props.height || 'stretch'} width={props.width}\r\n          borderLarge borderColor={cardBorderColor}\r\n          {...rest}>\r\n      <InnerWrapper>\r\n        {_renderHeader}\r\n        <ScrollableWrapper>\r\n          {React.Children.map(props.children, (child) => _renderSection(child))}\r\n        </ScrollableWrapper>\r\n        {_renderFooter}\r\n      </InnerWrapper>\r\n    </Card>\r\n  )\r\n};\r\n\r\nSecondaryCard.propTypes = propTypes;\r\nSecondaryCard.defaultProps = defaultProps;\r\n\r\nexport default SecondaryCard;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\n\r\nimport PrimaryCard      from './PrimaryCard';\r\n\r\nconst propTypes = {\r\n  header: PropTypes.string,\r\n  headerButton: PropTypes.node,\r\n  headerComponent: PropTypes.node,\r\n  children: PropTypes.node,\r\n  footer: PropTypes.node,\r\n\r\n  headerColor: ExtraPropTypes.color,\r\n  cardColor: ExtraPropTypes.color,\r\n  cardBorderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps ={\r\n  header: 'Card',\r\n  headerColor: Colors.White,\r\n  sections: [],\r\n};\r\n\r\n\r\nconst SecondaryCard = ( props ) => {\r\n\r\n  const { header, headerComponent, headerColor, ...rest } = props;\r\n\r\n const renderHeader = (\r\n   <Jumbo threeExtraSmall={props.extraSmall} extraSmall={props.small}\r\n              small={props.medium} medium={props.large} large={props.extraLarge}\r\n              color={headerColor}>\r\n         {header}\r\n   </Jumbo>\r\n );\r\n\r\n  return (\r\n    <PrimaryCard header={headerComponent ? headerComponent : renderHeader} {...rest}/>\r\n  )\r\n};\r\n\r\nSecondaryCard.propTypes = propTypes;\r\nSecondaryCard.defaultProps = defaultProps;\r\n\r\nexport default SecondaryCard;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\n\r\nimport SecondaryCard    from './SecondaryCard';\r\n\r\nconst propTypes = {\r\n  header: PropTypes.string,\r\n  headerButton: PropTypes.node,\r\n  headerComponent: PropTypes.node,\r\n  sections: PropTypes.arrayOf(PropTypes.object),\r\n  footer: PropTypes.node,\r\n\r\n  cardColor: ExtraPropTypes.color,\r\n  cardBorderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps ={\r\n  header: 'Card',\r\n  sections: [],\r\n};\r\n\r\nconst SectionWrapper = styled.div`\r\n`;\r\n\r\n\r\nconst HeaderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  padding-bottom: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst TertiaryCard = ( props ) => {\r\n\r\n  const { sections, ...rest } = props;\r\n\r\n  let padding;\r\n  if (props.extraSmall) { padding = 14}\r\n  else if (props.small) { padding = 16}\r\n  else if (props.large) { padding = 28}\r\n  else if (props.extraLarge) { padding = 32}\r\n  else { padding = 22}\r\n\r\n\r\n  const _renderSection = ( section ) => {\r\n\r\n    return (\r\n      section.header ?\r\n        <SectionWrapper>\r\n          <HeaderWrapper padding={padding}>\r\n            {section.header}\r\n          </HeaderWrapper>\r\n          {React.cloneElement(section.content, {...rest})}\r\n        </SectionWrapper> :\r\n        <SectionWrapper>\r\n          {React.cloneElement(section.content, {...rest})}\r\n        </SectionWrapper>\r\n  );}\r\n\r\n\r\n  const renderedSections = sections.map((section) => _renderSection(section));\r\n\r\n  return (\r\n    <SecondaryCard {...rest}>\r\n      {renderedSections}\r\n    </SecondaryCard>\r\n  )\r\n};\r\n\r\nTertiaryCard.propTypes = propTypes;\r\nTertiaryCard.defaultProps = defaultProps;\r\n\r\nexport default TertiaryCard;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport TertiaryCard    from './TertiaryCard'\r\nimport { Colors }       from '../theme/Colors';\r\nimport StatusText       from '../format-text/StatusText'\r\n\r\nconst propTypes = {\r\n  header: PropTypes.string,\r\n  headerButton: PropTypes.node,\r\n  headerComponent: PropTypes.node,\r\n  sections: PropTypes.arrayOf(PropTypes.object),\r\n  footer: PropTypes.node,\r\n\r\n  cardColor: ExtraPropTypes.color,\r\n  cardBorderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps ={\r\n  header: 'Card',\r\n  sections: [],\r\n};\r\n\r\n\r\nconst StatusTertiaryCard = ( props ) => {\r\n\r\n  const { sections, ...rest } = props;\r\n\r\n\r\n  const renderSection = ( section ) => {\r\n\r\n    const header = (\r\n      <StatusText fiveExtraSmall={props.extraSmall} fourExtraSmall={props.small}\r\n                  threeExtraSmall={props.medium} twoExtraSmall={props.large} extraSmall={props.extraLarge}\r\n                  status={section.status} jumbo color={Colors.White} />\r\n    );\r\n\r\n    return {\r\n      ...section,\r\n      header: header\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TertiaryCard sections={sections.map((section) => renderSection(section))}\r\n                   {...rest}/>\r\n  )\r\n};\r\n\r\nStatusTertiaryCard.propTypes = propTypes;\r\nStatusTertiaryCard.defaultProps = defaultProps;\r\n\r\nexport default StatusTertiaryCard;\r\n","import React                from 'react';\r\nimport styled               from 'styled-components';\r\nimport PropTypes                      from 'prop-types';\r\nimport ExtraPropTypes                 from 'react-extra-prop-types';\r\n\r\nimport { Colors }           from '../theme/Colors';\r\nimport Jumbo                from '../theme/Jumbo';\r\nimport Body                 from '../theme/Body';\r\nimport Button                from '../buttons/Button';\r\n\r\nimport Group                  from '../groups/Group';\r\nimport HostRoomItem                   from '../items/HostRoomItem';\r\nimport EditItem                   from '../items/EditItem';\r\nimport AddItem                   from '../items/AddItem';\r\n\r\nimport StatusTertiaryCard       from '../format-cards/StatusTertiaryCard';\r\n\r\n\r\nconst propTypes = {\r\n  rooms: PropTypes.object,\r\n  order: PropTypes.object,\r\n\r\n  onDelete: PropTypes.func,\r\n  onAdd: PropTypes.func,\r\n  onViewClick: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n}\r\n\r\nconst defaultProps = {\r\n\r\n}\r\n\r\n\r\nconst SectionGroup = ( props ) => {\r\n  const { rooms, onViewClick,\r\n          onDelete, onAdd, ...rest } = props;\r\n\r\n  const items = rooms.map((room, index) => (\r\n    room.status === 'open' ?\r\n    <HostRoomItem roomTitle={room.title}\r\n                  roomCode={room.id}\r\n                  onViewClick={() => onViewClick(room.id, room.status)}/> :\r\n    <EditItem iconColor={Colors.White} onDelete={() => onDelete(room.id)}>\r\n      <HostRoomItem roomTitle={room.title}\r\n                roomCode={room.id}\r\n                onViewClick={() => onViewClick(room.id, room.status)}/>\r\n    </EditItem>\r\n  ));\r\n\r\n  const addItems = items.map(item => item);\r\n  addItems.push(<AddItem textColor={Colors.White}\r\n                         iconColor={Colors.White}\r\n                         onClick={onAdd}> Add a room </AddItem>);\r\n\r\n  console.log(addItems)\r\n  return (\r\n    onAdd ?\r\n      <Group {...rest}>\r\n        {addItems}\r\n      </Group> :\r\n      <Group {...rest}>\r\n        {items}\r\n      </Group>\r\n    )\r\n}\r\n\r\n\r\nconst HostDashCard = ( props ) => {\r\n\r\n  const { rooms, order,\r\n          onViewClick, onDelete, onAdd, ...rest} = props;\r\n\r\n  let statusList = ['open', 'pending', 'closed'];\r\n  statusList = statusList.filter((status) => order[status].length != 0 ||\r\n                                             status === 'pending');\r\n\r\n\r\n  const sections = statusList.map((status) => {\r\n\r\n    const sectionRooms = order[status].map((room) => rooms[room])\r\n\r\n    return {\r\n      status: status,\r\n      content: <SectionGroup rooms={sectionRooms}\r\n                             onViewClick={onViewClick}\r\n                             onDelete={onDelete}\r\n                             onAdd={status === 'pending' ? onAdd : undefined}\r\n                             {...rest}/>,\r\n    }\r\n  })\r\n\r\n  return (\r\n    <StatusTertiaryCard header={'My Rooms'}\r\n                        sections={sections}\r\n                        width={`100%`}\r\n                        {...rest}/>\r\n  )\r\n}\r\n\r\nHostDashCard.propTypes = propTypes;\r\nHostDashCard.defaultProps = defaultProps;\r\n\r\nexport default HostDashCard;\r\n","import React, { useEffect } from 'react';\r\nimport styled               from 'styled-components';\r\n\r\nimport { connect }          from 'react-redux';\r\nimport ActionTypes          from '../store/actionTypes';\r\n\r\nimport history              from '../history';\r\n\r\nimport ViewportHandler      from './format-pages/ViewportHandler';\r\nimport MainPage             from './format-pages/MainPage';\r\nimport { Colors }           from '../components/theme/Colors';\r\n\r\nimport HostDashCard        from '../components/cards/HostDashCard';\r\nimport firebase            from '../databaseCommunication/permissions';\r\n\r\nconst DashComponent = ( props ) => {\r\n\r\n  let size = {};\r\n  switch (props.viewport) {\r\n    case 'mobile':\r\n    case 'smallMobile':\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'hdDesktop':\r\n    case 'uhdDesktop':\r\n      size.medium = true;\r\n      break;\r\n    default:\r\n      size.small = true;\r\n  }\r\n\r\n  return (\r\n    <HostDashCard {...size}\r\n                  onViewClick={props.onViewClick}\r\n                  rooms={props.rooms}\r\n                  order={props.order}\r\n                  onDelete={props.onDelete}\r\n                  onAdd={props.onAdd}/>\r\n  )\r\n}\r\n\r\nconst HostDashPage = ( props ) => {\r\n  useEffect(() =>  {\r\n    props.onFetchRooms();\r\n  }, [])\r\n\r\n  console.log(props)\r\n\r\n  const onViewClick = (roomcode, roomStatus) => {\r\n    console.log(roomStatus)\r\n    if (roomStatus === 'closed') {\r\n      history.push(`/RoomResults/${roomcode}`)\r\n    }\r\n    else {\r\n      history.push(`/HostAgenda/${roomcode}`)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ViewportHandler>\r\n      <MainPage>\r\n          <DashComponent viewport={props.viewport}\r\n                         onViewClick={onViewClick}\r\n                         rooms={props.rooms}\r\n                         order={props.order}\r\n                         onDelete={props.onDeleteRoom}\r\n                         onAdd={props.onAddRoom}/>\r\n      </MainPage>\r\n    </ViewportHandler>\r\n  );\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    rooms: state.hostdash.rooms,\r\n    order: state.hostdash.order,\r\n    loading: state.hostdash.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchRooms: () => dispatch({ type: ActionTypes.hostdash.FETCH_ROOMS_START }),\r\n    onDeleteRoom: (room_id) => dispatch({ type: ActionTypes.hostdash.DELETE_ROOM_START,\r\n                                          room_id }),\r\n    onAddRoom: () => dispatch({ type: ActionTypes.hostdash.ADD_ROOM_START }),\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HostDashPage);\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\n\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../../components/theme/Colors';\r\nimport BasePage         from './BasePage';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  header: PropTypes.node,\r\n  sideContent: PropTypes.node,\r\n\r\n  color: ExtraPropTypes.color,\r\n};\r\n\r\nconst defaultProps = {\r\n  color: Colors.Blue\r\n};\r\n\r\nconst HeaderWrapper = styled.div`\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nconst ComponentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction:row;\r\n  justify-content: space-between;\r\n  width: 90%;\r\n  height: 80%;\r\n`;\r\n\r\nconst SideBarWrapper = styled.div`\r\n  width: 40%;\r\n  padding-left: 10px;\r\n`;\r\n\r\nconst HorizontalSideBarWrapper = styled.div`\r\n  padding-bottom: 10px;\r\n\r\n`;\r\n\r\nconst VerticalComponentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  width: 90%;\r\n  height: 80%;\r\n`;\r\n\r\nconst MainComponentWrapper = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\nconst VerticalPage = ( props ) => {\r\n\r\n  const mainComponent = props.sideContent ?\r\n    <>\r\n      <HorizontalSideBarWrapper>\r\n        {React.cloneElement(props.sideContent, { viewport: props.viewport })}\r\n      </HorizontalSideBarWrapper>\r\n      <MainComponentWrapper>\r\n        {React.cloneElement(props.children, { viewport: props.viewport })}\r\n      </MainComponentWrapper>\r\n    </> :\r\n    <MainComponentWrapper>\r\n      {React.cloneElement(props.children, { viewport: props.viewport })}\r\n    </MainComponentWrapper>\r\n\r\n  const headerComponent = props.header ?\r\n    <HeaderWrapper>\r\n      {React.cloneElement(props.header, { viewport: props.viewport })}\r\n    </HeaderWrapper> :\r\n    <></>\r\n\r\n  return (\r\n    <>\r\n      {headerComponent}\r\n      <VerticalComponentWrapper>\r\n        {mainComponent}\r\n      </VerticalComponentWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nconst HorizontalPage = ( props ) => {\r\n\r\n  const mainComponent = props.sideContent ?\r\n    <>\r\n      {React.cloneElement(props.children, { viewport: props.viewport })}\r\n      <SideBarWrapper>\r\n        {React.cloneElement(props.sideContent, { viewport: props.viewport })}\r\n      </SideBarWrapper>\r\n    </> : React.cloneElement(props.children, { viewport: props.viewport })\r\n\r\n  const headerComponent = props.header ?\r\n    <HeaderWrapper>\r\n      {React.cloneElement(props.header, { viewport: props.viewport })}\r\n    </HeaderWrapper> :\r\n    <></>\r\n\r\n  return (\r\n    <>\r\n      {headerComponent}\r\n      <ComponentWrapper>\r\n        {mainComponent}\r\n      </ComponentWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nconst SideBarPage = ( props ) => {\r\n\r\n  const small = props.viewport === 'mobile' || props.viewport === 'smallMobile';\r\n\r\n  console.log(small);\r\n  console.log(props.viewport);\r\n  return (\r\n    <BasePage color={props.color}>\r\n      {small ? <VerticalPage {...props}/> : <HorizontalPage {...props}/>}\r\n    </BasePage>\r\n  )\r\n}\r\n\r\nSideBarPage.propTypes = propTypes;\r\nSideBarPage.defaultProps = defaultProps;\r\n\r\nexport default SideBarPage;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Icon             from '../theme/Icon';\r\n\r\nimport Item         from './Item';\r\nimport StatusText       from '../format-text/StatusText';\r\n\r\nimport Button           from '../buttons/Button';\r\n\r\nconst propTypes = {\r\n  pollTitle: PropTypes.string,\r\n  status: PropTypes.oneOf(['closed', 'open', 'pending']),\r\n\r\n  onViewClick: PropTypes.func,\r\n  hostButton: PropTypes.node,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  pollTitle: 'Poll Title',\r\n  status: 'pending'\r\n};\r\n\r\nconst IconWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column:\r\n  justify-content: center;\r\n  padding: 3px 0px 3px 0px;\r\n`;\r\n\r\n\r\nconst AgendaItem = ( props ) => {\r\n\r\n  const { pollTitle, status, onViewClick, onStatusClick, hostButton,\r\n          ...rest } = props;\r\n\r\n  const statusText = <StatusText status={status} {...rest}/>\r\n\r\n  const viewButton = props.extraSmall ?\r\n    <Button {...rest} onClick={onViewClick}>\r\n      <IconWrapper>\r\n        <Icon type={'view'} color={Colors.White} small/>\r\n      </IconWrapper>\r\n    </Button> :\r\n    <Button {...rest} onClick={onViewClick}>\r\n      VIEW\r\n    </Button>\r\n\r\n\r\n  if ( hostButton ){\r\n    return (\r\n      <Item text={pollTitle} {...rest}>\r\n        { statusText }\r\n        { hostButton }\r\n        { viewButton }\r\n      </Item>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Item text={pollTitle} {...rest}>\r\n      { statusText }\r\n      { viewButton }\r\n    </Item>\r\n  )\r\n\r\n}\r\n\r\nAgendaItem.propTypes = propTypes;\r\nAgendaItem.defaultProps = defaultProps;\r\n\r\nexport default AgendaItem;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\n\r\nimport AgendaItem         from './AgendaItem';\r\nimport Button           from '../buttons/Button';\r\n\r\nconst propTypes = {\r\n  pollTitle: PropTypes.string,\r\n  status: PropTypes.oneOf(['closed', 'open', 'pending']),\r\n\r\n  onViewClick: PropTypes.func,\r\n  onStatusButtonClick: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  pollTitle: 'Poll Title',\r\n  status: 'pending'\r\n};\r\n\r\nconst statusButtonConfig = {\r\n  open: {\r\n    text: 'CLOSE',\r\n    color: Colors.Yellow,\r\n  },\r\n  closed:{\r\n    text: 'CLOSED',\r\n    color: Colors.Red,\r\n  },\r\n  pending:{\r\n    text: 'OPEN',\r\n    color: Colors.Green,\r\n  }\r\n}\r\n\r\nconst HostAgendaItem = ( props ) => {\r\n\r\n  const {  status, onStatusClick,\r\n          ...rest } = props;\r\n\r\n  let config;\r\n  let nextStatus;\r\n\r\n  switch ( status ) {\r\n    case 'open':\r\n      config = statusButtonConfig.open;\r\n      nextStatus = 'closed';\r\n      break;\r\n    case 'closed':\r\n      config = statusButtonConfig.closed;\r\n      nextStatus = 'closed';\r\n      break;\r\n    default:\r\n      config = statusButtonConfig.pending;\r\n      nextStatus = 'open';\r\n  };\r\n\r\n  const statusButton = status === 'closed' ?\r\n    undefined :\r\n    <Button {...rest} disabled={status === 'closed'} onClick={() => onStatusClick(nextStatus)}\r\n            backgroundColor={config.color} textColor={Colors.White}>\r\n      {config.text}\r\n    </Button>\r\n\r\n\r\n  return (\r\n    <AgendaItem status={status} hostButton={statusButton} {...rest}/>\r\n  )\r\n\r\n}\r\n\r\nHostAgendaItem.propTypes = propTypes;\r\nHostAgendaItem.defaultProps = defaultProps;\r\n\r\nexport default HostAgendaItem;\r\n","import React            from 'react';\r\nimport styled               from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Icon             from '../theme/Icon';\r\nimport Body             from '../theme/Body'\r\n\r\nconst propTypes = {\r\n  type: PropTypes.oneOf(['edit', 'save']),\r\n}\r\n\r\nconst defaultProps = {\r\n\r\n}\r\n\r\nconst ButtonWrapper = styled.div`\r\n  width: max-content;\r\n  display: flex;\r\n  flex-direction: column\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  width: auto;\r\n`\r\n\r\nconst EditButton = ( props ) => {\r\n\r\n  const { children, type, color, onClick, ...rest } = props;\r\n\r\n  return (\r\n    <ButtonWrapper onClick={onClick}>\r\n      <IconWrapper>\r\n        <Icon type={type} color={color}\r\n              small={props.extraSmall} medium={props.small} large={props.medium}\r\n              extraLarge={props.large} twoExtraLarge={props.extraLarge}/>\r\n      </IconWrapper>\r\n      <Body color={color} {...rest}>\r\n        { type === 'edit' ? 'EDIT' : 'SAVE'}\r\n      </Body>\r\n    </ButtonWrapper>\r\n  )\r\n}\r\n\r\nEditButton.propTypes = propTypes;\r\nEditButton.defaultProps = defaultProps;\r\n\r\nexport default EditButton;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport SecondaryCard      from '../format-cards/SecondaryCard'\r\nimport HostAgendaItem                from '../items/HostAgendaItem';\r\nimport Group                 from '../groups/Group'\r\n\r\nimport { Colors }                from '../theme/Colors';\r\nimport EditButton                      from '../buttons/EditButton';\r\n\r\nconst propTypes = {\r\n  roomcode: PropTypes.string,\r\n  title: PropTypes.string,\r\n  status: PropTypes.string,\r\n\r\n  polls: PropTypes.object,\r\n  order: PropTypes.object,\r\n\r\n  onEditClick: PropTypes.func,\r\n  onViewClick: PropTypes.func,\r\n  onStatusButtonClick: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  roomTitle: 'Agenda',\r\n  openPolls: [],\r\n  pendingPolls: [],\r\n  closedPolls: [],\r\n};\r\n\r\n\r\nconst HostAgendaCard = ( props ) => {\r\n\r\n  const { roomcode, title, status, polls, order,\r\n          onEditClick, onStatusClick,\r\n          onViewClick, onStatusButtonClick,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  console.log(props)\r\n\r\n\r\n  let allPolls = [];\r\n  let statusList = ['open', 'pending', 'closed'];\r\n  statusList = statusList.filter((status) => order[status] && order[status].length != 0);\r\n\r\n  for (let i = 0; i < statusList.length; i++) {\r\n    allPolls = allPolls.concat(order[statusList[i]]) }\r\n\r\n  const headerButton = (\r\n    <EditButton type={'edit'} color={Colors.White} onClick={onEditClick}/>\r\n  )\r\n\r\n  return (\r\n    <SecondaryCard  width={'100%'}\r\n                    height={extraSmall ? `100%` : `stretch`}\r\n                    header={title}\r\n                    extraSmall={extraSmall} small={small}\r\n                    medium={medium} large={large} extraLarge={extraLarge}\r\n                    headerButton={status === 'closed' ? undefined : headerButton}>\r\n      <Group>\r\n        {allPolls.map((id) => {\r\n          const poll = polls[id];\r\n          return (\r\n            <HostAgendaItem pollTitle={poll.title}\r\n                            status={poll.status}\r\n                            onStatusClick={(newStatus) => onStatusClick(id, newStatus)}\r\n                            onViewClick={onViewClick ? () => onViewClick(id) : undefined}/>\r\n          )\r\n        })}\r\n      </Group>\r\n    </SecondaryCard>\r\n\r\n  )\r\n};\r\n\r\nHostAgendaCard.propTypes = propTypes;\r\nHostAgendaCard.defaultProps = defaultProps;\r\n\r\nexport default HostAgendaCard;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport { Fonts }        from '../theme/Fonts';\r\n\r\nconst propTypes = {\r\n  placeholder: PropTypes.string,\r\n\r\n  fontColor: ExtraPropTypes.color,\r\n  backgroundColor: ExtraPropTypes.color,\r\n  placeholderColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  placeholder: 'Write something...',\r\n  fontColor: Colors.Black,\r\n  borderColor: Colors.Blue,\r\n}\r\n\r\nconst fontConfig = {\r\n  fontFamily: Fonts.WorkSans,\r\n  fontWeight: 'bold',\r\n  extraSmall: { fontSize: 14, lineHeight: 20  },\r\n  small: { fontSize: 16, lineHeight: 22 },\r\n  medium: { fontSize: 20, lineHeight: 28  },\r\n  large: { fontSize: 26, lineHeight: 36 },\r\n  extraLarge: { fontSize: 32, lineHeight: 42 }\r\n};\r\n\r\nconst TextAreaComponent = styled.textarea`\r\n  font-family: ${fontConfig.fontFamily};\r\n  font-weight: ${fontConfig.fontWeight};\r\n  font-size: ${({fontSize}) => fontSize}px;\r\n  color: ${({fontColor}) => fontColor};\r\n  line-height: ${({lineHeight}) => lineHeight}px;\r\n  width: 100%;\r\n  height: ${({height}) => height}px;\r\n  padding: 12px 20px;\r\n  box-sizing: border-box;\r\n  border: solid 3px ${({borderColor}) => borderColor};\r\n  border-radius: 4px;\r\n  background-color: ${({backgroundColor}) => backgroundColor ? backgroundColor : `none`};\r\n  overflow: visable;\r\n  resize: none;\r\n  ::placeholder {\r\n    color: ${(placeholderColor) => placeholderColor ? placeholderColor : Colors.Blue};\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border: solid 3px ${Colors.Green};\r\n  }\r\n`;\r\n\r\nconst TextArea = ( props ) => {\r\n\r\n  const { placeholder, backgroundColor, borderColor,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  let sizeConfig;\r\n\r\n  if (extraSmall) { sizeConfig = fontConfig.extraSmall }\r\n  else if (small) { sizeConfig = fontConfig.small }\r\n  else if (large) { sizeConfig = fontConfig.large }\r\n  else if (extraLarge) { sizeConfig = fontConfig.extraLarge }\r\n  else { sizeConfig = fontConfig.medium }\r\n\r\n  const height = (sizeConfig.lineHeight * 3) + 24;\r\n\r\n  return (\r\n    <TextAreaComponent fontSize={sizeConfig.fontSize}\r\n                       lineHeight={sizeConfig.lineHeight}\r\n                       height={height}\r\n                       {...props}/>\r\n  );\r\n};\r\n\r\nTextArea.propTypes = propTypes;\r\nTextArea.defaultProps = defaultProps;\r\n\r\nexport default TextArea;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport { Fonts }        from '../theme/Fonts';\r\n\r\nconst propTypes = {\r\n  value: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n\r\n  labelColor: ExtraPropTypes.color,\r\n  placeholderColor: ExtraPropTypes.color,\r\n  fontColor: ExtraPropTypes.color,\r\n  backgroundColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  placeholder: 'Write something...',\r\n  fontColor: Colors.Black,\r\n  borderColor: Colors.Blue,\r\n}\r\n\r\nconst fontConfig = {\r\n  fontFamily: Fonts.WorkSans,\r\n  fontWeight: 'bold',\r\n  extraSmall: { fontSize: 14, lineHeight: 20  },\r\n  small: { fontSize: 16, lineHeight: 22 },\r\n  medium: { fontSize: 20, lineHeight: 28  },\r\n  large: { fontSize: 26, lineHeight: 36 },\r\n  extraLarge: { fontSize: 32, lineHeight: 42 }\r\n};\r\n\r\n// const InputFieldComponent = styled.input`\r\n//   font-family: ${fontConfig.fontFamily};\r\n//   font-weight: ${fontConfig.fontWeight};\r\n//   font-size: ${({fontSize}) => fontSize}px;\r\n//   color: ${({fontColor}) => fontColor};\r\n//   line-height: ${({lineHeight}) => lineHeight}px;\r\n//   width: 100%;\r\n//   height: ${({height}) => height}px;\r\n//   padding: 8px 10px;\r\n//   box-sizing: border-box;\r\n//   border: none;\r\n//   border-bottom: solid 3px ${({borderColor}) => borderColor};\r\n//   background-color: ${({backgroundColor}) => backgroundColor ? backgroundColor : `none`};\r\n//   overflow: visable;\r\n//   resize: none;\r\n//   ::placeholder {\r\n//     color: ${Colors.LightBlue};\r\n//   }\r\n//   &:focus {\r\n//     outline: none;\r\n//     border: none;\r\n//     border-bottom: solid 3px ${Colors.Green};\r\n//   }\r\n// `;\r\n\r\n// class InputField extends React.Component {\r\n//\r\n//   constructor(props){\r\n//     super(props);\r\n//\r\n//     const { placeholder, backgroundColor, borderColor,\r\n//             extraSmall, small, medium, large, extraLarge } = props;\r\n//\r\n//\r\n//     if (extraSmall) { this.sizeConfig = fontConfig.extraSmall }\r\n//     else if (small) { this.sizeConfig = fontConfig.small }\r\n//     else if (large) { this.sizeConfig = fontConfig.large }\r\n//     else if (extraLarge) { this.sizeConfig = fontConfig.extraLarge }\r\n//     else { this.sizeConfig = fontConfig.medium }\r\n//\r\n//     this.height = this.sizeConfig.lineHeight + 16;\r\n//\r\n//     this.state = {\r\n//       value: props.value\r\n//     }\r\n//     console.log(props.value)\r\n//\r\n//     this.onChange = this.onChange.bind(this);\r\n//   }\r\n//\r\n//   onChange = (event) => {\r\n//\r\n//     console.log('onChage')\r\n//     this.setState({\r\n//       value: event.target.value\r\n//     })\r\n//\r\n//     this.props.onChange && this.props.onChange(event);\r\n//   }\r\n//\r\n//   render() {\r\n//\r\n//     const valueProps = (this.state.value && this.state.value !== '') ?\r\n//                        { value: this.state.value} : {};\r\n//\r\n//     return (\r\n//       <InputFieldComponent  fontSize={this.sizeConfig.fontSize}\r\n//                             lineHeight={this.sizeConfig.lineHeight}\r\n//                             height={this.height}\r\n//                             onChange={this.onChange}\r\n//                             borderColor={this.props.borderColor}\r\n//                             backgroundColor={this.props.backgroundColor}\r\n//                             fontColor={this.props.fontColor}\r\n//                             {...valueProps}/>\r\n//     );\r\n//\r\n//   }\r\n// }\r\n//\r\n// InputField.propTypes = propTypes;\r\n// InputField.defaultProps = defaultProps;\r\n\r\nconst InputFieldComponent = styled.textarea`\r\n  font-family: ${fontConfig.fontFamily};\r\n  font-weight: ${fontConfig.fontWeight};\r\n  font-size: ${({fontSize}) => fontSize}px;\r\n  color: ${({fontColor}) => fontColor};\r\n  line-height: ${({lineHeight}) => lineHeight}px;\r\n  width: 100%;\r\n  height: ${({height}) => height}px;\r\n  padding: 12px 20px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-bottom: solid 3px ${({borderColor}) => borderColor};\r\n  background-color: ${({backgroundColor}) => backgroundColor ? backgroundColor : `none`};\r\n  overflow: hidden;\r\n  white-space: pre;\r\n  resize: none;\r\n  ::placeholder {\r\n    color: ${({placeholderColor}) => placeholderColor};\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border: none\r\n    border-bottom: solid 3px ${Colors.Green};\r\n    border-color: ${Colors.Green};\r\n  }\r\n`;\r\n\r\nconst InputField = ( props ) => {\r\n\r\n  const { placeholder, backgroundColor, borderColor,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  let sizeConfig;\r\n\r\n  if (extraSmall) { sizeConfig = fontConfig.extraSmall }\r\n  else if (small) { sizeConfig = fontConfig.small }\r\n  else if (large) { sizeConfig = fontConfig.large }\r\n  else if (extraLarge) { sizeConfig = fontConfig.extraLarge }\r\n  else { sizeConfig = fontConfig.medium }\r\n\r\n  const height = sizeConfig.lineHeight + 24;\r\n\r\n  return (\r\n    <InputFieldComponent fontSize={sizeConfig.fontSize}\r\n                       lineHeight={sizeConfig.lineHeight}\r\n                       height={height}\r\n                       {...props}/>\r\n  );\r\n};\r\n\r\nInputField.propTypes = propTypes;\r\nInputField.defaultProps = defaultProps;\r\n\r\nexport default InputField;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\n\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Body             from '../theme/Body';\r\nimport TextArea         from './TextArea';\r\nimport InputField       from './InputField';\r\n\r\nconst propTypes = {\r\n  type: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n\r\n  labelColor: ExtraPropTypes.color,\r\n  placeholderColor: ExtraPropTypes.color,\r\n  fontColor: ExtraPropTypes.color,\r\n  backgroundColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  type: 'inputfield',\r\n  labelColor: Colors.Blue,\r\n};\r\n\r\nconst LabelWrapper = styled.div`\r\n  padding-top: 4px;\r\n`;\r\nconst ComponentWrapper = styled.div``;\r\n\r\n\r\nclass Input extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: props.value\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange = (event) => {\r\n\r\n    this.setState({\r\n      value: event.target.value\r\n    })\r\n\r\n    this.props.onChange && this.props.onChange(event);\r\n  }\r\n\r\n  render() {\r\n\r\n    const inputProps = { ...this.props,\r\n                         value: this.state.value,\r\n                         onChange: this.onChange\r\n                       }\r\n\r\n    const component = this.props.type === 'textarea' ? <TextArea {...inputProps}/> : <InputField {...inputProps}/>;\r\n\r\n    return (\r\n      this.props.label ?\r\n        <ComponentWrapper>\r\n          <LabelWrapper>\r\n            <Body color={this.props.labelColor} {...this.props}>\r\n              {this.props.label}\r\n            </Body>\r\n          </LabelWrapper>\r\n          {component}\r\n        </ComponentWrapper> :\r\n        <ComponentWrapper>\r\n          {component}\r\n        </ComponentWrapper>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nInput.propTypes = propTypes;\r\nInput.defaultProps = defaultProps;\r\n\r\nexport default Input;\r\n","import React                  from \"react\";\r\nimport styled                 from 'styled-components';\r\nimport PropTypes              from 'prop-types';\r\nimport ExtraPropTypes         from 'react-extra-prop-types';\r\n\r\nimport { Draggable }          from 'react-beautiful-dnd';\r\n\r\nimport Icon                   from '../theme/Icon';\r\n\r\nconst propTypes = {\r\n  item: PropTypes.object,\r\n  index: PropTypes.int,\r\n\r\n  handleColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool\r\n}\r\n\r\nconst defaultProps = {\r\n\r\n};\r\n\r\nconst DraggableItem = styled.div `\r\n  width: 100%;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n\r\n  padding-bottom: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst ItemWrapper = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst DragHandle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-right: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst DragItem = ( props ) => {\r\n\r\n  const { item, index, handleColor, ...rest } = props;\r\n\r\n  let padding;\r\n  if ( props.extraSmall ) { padding = 10}\r\n  else if ( props.small ) { padding = 10 }\r\n  else if ( props.large ) { padding = 18 }\r\n  else if ( props.extraLarge ) { padding = 22 }\r\n  else { padding = 14 }\r\n\r\n  return (\r\n    <Draggable draggableId={item.id} index={index}>\r\n      { ( provided ) => (\r\n        <DraggableItem padding={padding}\r\n                       {...provided.draggableProps}\r\n                       ref={provided.innerRef}>\r\n          <DragHandle {...provided.dragHandleProps}\r\n                      padding={padding}>\r\n            <Icon type={'dragHandle'} color={handleColor}\r\n                  small={props.extraSmall} medium={props.small}\r\n                  large={props.medium} extraLarge={props.large}\r\n                  twoExtraLarge={props.extraLarge}/>\r\n          </DragHandle>\r\n          <ItemWrapper>\r\n            {React.cloneElement(item.content, {...rest})}\r\n          </ItemWrapper>\r\n        </DraggableItem>\r\n      )}\r\n    </Draggable>\r\n  )\r\n};\r\n\r\nDragItem.propTypes = propTypes;\r\nDragItem.defaultProps = defaultProps;\r\n\r\nexport default DragItem;\r\n","import React                  from \"react\";\r\nimport styled                 from 'styled-components';\r\nimport PropTypes              from 'prop-types';\r\nimport ExtraPropTypes         from 'react-extra-prop-types';\r\nimport { DragDropContext,\r\n         Droppable }          from \"react-beautiful-dnd\";\r\n\r\nimport Icon                   from '../theme/Icon';\r\nimport DragItem               from './DragItem';\r\n\r\nconst propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.node),\r\n  onDragEnd: PropTypes.func,\r\n\r\n  handleColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool\r\n}\r\n\r\nconst defaultProps = {\r\n  items: []\r\n}\r\n\r\nconst DropContainer = styled.div`\r\n  width: auto;\r\n`;\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nclass InnerList extends React.Component {\r\n\r\n  shouldComponentUpdate (nextProps) {\r\n    if (nextProps.items === this.props.items) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render () {\r\n\r\n    // console.log(this.props.items);\r\n\r\n    return (\r\n      this.props.items.map((item, index) =>\r\n        <DragItem key={item.id}\r\n                  item={item}\r\n                  index={index}\r\n                  handleColor={this.props.handleColor}\r\n                  {...this.props.size}/>)\r\n    )\r\n  }\r\n}\r\n\r\nclass DragGroup extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n\r\n  }\r\n\r\n  onDragEnd = (result) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const items = reorder(\r\n      this.props.items,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    this.props.onDragEnd && this.props.onDragEnd(items);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { extraSmall, small, medium, large, extraLarge } = this.props;\r\n\r\n    const size = {\r\n      extraSmall: extraSmall,\r\n      small: small,\r\n      medium: medium,\r\n      large: large,\r\n      extraLarge: extraLarge\r\n    }\r\n\r\n    // console.log(this.props.items);\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          { provided => (\r\n            <DropContainer ref={provided.innerRef}\r\n                           {...provided.droppableProps}>\r\n              <InnerList items={this.props.items}\r\n                         handleColor={this.props.handleColor}\r\n                         size={size}/>\r\n              {provided.placeholder}\r\n            </DropContainer>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    )\r\n  };\r\n};\r\n\r\nDragGroup.propTypes = propTypes;\r\nDragGroup.defaultProps = defaultProps;\r\n\r\nexport default DragGroup;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\n\r\nimport DragGroup        from './DragGroup';\r\nimport AgendaItem       from '../items/AgendaItem';\r\nimport EditItem         from '../items/EditItem';\r\n\r\nimport Group            from './Group';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  order: PropTypes.arrayOf(PropTypes.int),\r\n\r\n  onDragEnd: PropTypes.func,\r\n  handleColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool\r\n};\r\n\r\nconst defaultProps = {\r\n  handleColor: Colors.White\r\n};\r\n\r\nclass EditingGroup extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      order: props.order,\r\n    }\r\n\r\n    this.awaitSetState = this.awaitSetState.bind(this);\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n  }\r\n\r\n  async awaitSetState(stateProps) {\r\n    await this.setState({\r\n      ...this.state,\r\n      ...stateProps\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n\r\n    if (prevProps.children != this.props.children) {\r\n\r\n      this.awaitSetState({\r\n        order: this.props.order\r\n      });\r\n    }\r\n  }\r\n\r\n  async onDragEnd(items) {\r\n    const newOrder = items.map((item) => item.id);\r\n\r\n    await this.setState({\r\n      ...this.state,\r\n      order: newOrder\r\n    });\r\n\r\n    this.props.onDragEnd && this.props.onDragEnd(newOrder);\r\n  }\r\n\r\n  render() {\r\n\r\n    const size = {\r\n      extraSmall: this.props.extraSmall,\r\n      small: this.props.small,\r\n      medium: this.props.medium,\r\n      large: this.props.large,\r\n      extraLarge: this.props.extraLarge\r\n    }\r\n\r\n    const items = React.Children.map(this.props.children, (child, index) => {\r\n      return {\r\n        id: `${child.props.id}`,\r\n        content: child\r\n      }\r\n    })\r\n\r\n    if (this.state.order.length !== this.props.order.length) {\r\n      return (\r\n      <Group {...size}/>)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n      <Group {...size}>\r\n        <DragGroup {...size} handleColor={this.props.handleColor}\r\n                   items={this.state.order.map(i => items.find(item => item.id === i))}\r\n                   onDragEnd={this.onDragEnd}/>\r\n        {React.cloneElement(this.props.addItem, {...size})}\r\n      </Group>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nEditingGroup.propTypes = propTypes;\r\nEditingGroup.defaultProps = defaultProps;\r\n\r\nexport default EditingGroup;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\n\r\nimport Item         from './Item';\r\nimport Button           from '../buttons/Button';\r\n\r\nconst propTypes = {\r\n  pollTitle: PropTypes.string,\r\n\r\n  buttonText: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  pollTitle: 'Poll Title',\r\n  buttonText: 'VIEW'\r\n};\r\n\r\n\r\nconst HostEditAgendaItem = ( props ) => {\r\n\r\n  const { text, buttonText, onClick, ...rest } = props;\r\n\r\n  return (\r\n    <Item text={text} {...rest}>\r\n      <Button onClick={onClick}>\r\n        { buttonText }\r\n      </Button>\r\n    </Item>\r\n  )\r\n}\r\n\r\nHostEditAgendaItem.propTypes = propTypes;\r\nHostEditAgendaItem.defaultProps = defaultProps;\r\n\r\nexport default HostEditAgendaItem;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport PollData          from '../../data-containers/PollData';\r\n\r\nimport { Colors }        from '../theme/Colors';\r\nimport Input             from '../inputs/Input';\r\nimport EditButton             from '../buttons/EditButton';\r\nimport StatusTertiaryCard from '../format-cards/StatusTertiaryCard';\r\n\r\nimport Group              from '../groups/Group';\r\nimport EditingGroup                 from '../groups/EditingGroup';\r\nimport EditItem                  from '../items/EditItem';\r\nimport AddItem                  from '../items/AddItem';\r\nimport HostEditAgendaItem                  from '../items/HostEditAgendaItem';\r\n\r\n\r\nconst propTypes = {\r\n  roomcode: PropTypes.string,\r\n  title: PropTypes.string,\r\n  status: PropTypes.string,\r\n\r\n  polls: PropTypes.object,\r\n  order: PropTypes.object,\r\n\r\n  onDragEnd: PropTypes.func,\r\n  onAddClick: PropTypes.func,\r\n  onDeleteClick: PropTypes.func,\r\n  onEditClick: PropTypes.func,\r\n  onViewClick: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n};\r\n\r\nconst Header = ( props ) => (\r\n  <Input label={'Title'} type={'inputfield'}\r\n         value={props.title} fontColor={Colors.White}\r\n         onChange={props.onChange}\r\n         backgroundColor={Colors.Blue}\r\n         labelColor={Colors.White}\r\n         {...props.size}/>\r\n)\r\n\r\nconst HeaderButton = (props) => (\r\n  <EditButton type={'save'} color={Colors.White} onClick={props.onEditClick} {...props.size}/>\r\n)\r\n\r\nconst AddComponent = ( props ) => {\r\n\r\n  const { onAddClick, ...rest } = props;\r\n\r\n  return (\r\n    <AddItem onClick={onAddClick} textColor={Colors.White} iconColor={Colors.White} {...rest}>\r\n      Add new poll\r\n    </AddItem>\r\n  )\r\n}\r\n\r\nconst PendingSectionGroup = ( props ) => {\r\n\r\n  const { roomcode, polls, order,\r\n          onDragEnd, onAddClick, onDeleteClick, onEditClick,\r\n          size} = props;\r\n\r\n  return (\r\n    <EditingGroup addItem={<AddComponent onAddClick={onAddClick}/>}\r\n                  order={order}\r\n                  onDragEnd={onDragEnd}\r\n                  {...size}>\r\n      {order.map((id) => {\r\n        const poll = polls[id];\r\n\r\n        return (\r\n        <EditItem id={id} onDelete={() => onDeleteClick(id)} iconColor={Colors.White}>\r\n          <HostEditAgendaItem text={poll.title} buttonText={'EDIT'} onClick={() => onEditClick(id)}/>\r\n        </EditItem>\r\n      )})}\r\n    </EditingGroup>\r\n  )\r\n}\r\n\r\nconst SectionGroup = ( props ) => {\r\n  const { roomcode, polls, order, onViewClick, size} = props;\r\n\r\n  return (\r\n    <Group {...size}>\r\n      { order.map((id) => {\r\n        const poll = polls[id];\r\n        return (\r\n        <HostEditAgendaItem text={poll.title} buttonText={'VIEW'} onClick={onViewClick}/>\r\n      )}) }\r\n    </Group>\r\n  )\r\n}\r\n\r\nconst HostEditAgendaCard = ( props ) => {\r\n\r\n  const { roomcode, title, status, polls, order,\r\n          onDeleteClick, onViewClick, onEditClick,\r\n          onPollEditClick,\r\n          onDragEnd, onAddClick,\r\n          ...rest } = props;\r\n\r\n  const size = {\r\n    extraSmall: props.extraSmall,\r\n    small: props.small,\r\n    medium: props.medium,\r\n    large: props.large,\r\n    extraLarge: props.extraLarge\r\n  }\r\n\r\n\r\n  let statusList = ['open', 'closed'];\r\n  statusList = statusList.filter((status) => order[status] && order[status].length != 0);\r\n\r\n  let sections = [\r\n    { status: 'pending',\r\n      content: (\r\n        <PendingSectionGroup roomcode={roomcode}\r\n                             polls={polls}\r\n                             order={order['pending']}\r\n                             onDragEnd={onDragEnd}\r\n                             onEditClick={onPollEditClick}\r\n                             onAddClick={onAddClick}\r\n                             onDeleteClick={onDeleteClick}\r\n                             size={size}/>\r\n      )\r\n    }\r\n  ]\r\n\r\n  for (let i = 0; i < statusList.length; i++) {\r\n    let status = statusList[i];\r\n    sections.push({\r\n      status: status,\r\n      content: (\r\n        <SectionGroup roomcode={roomcode}\r\n                      polls={polls}\r\n                      order={order[status]}\r\n                      size={size}/>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <StatusTertiaryCard header={<Header title={props.title} onChange={props.onTitleChange} size={size}/>}\r\n                        headerButton={<HeaderButton onEditClick={onEditClick} size={size}/>}\r\n                        sections={sections}\r\n                        width={'100%'}\r\n                        height={props.extraSmall ? `100%` : `stretch`}\r\n                        {...size}/>\r\n  )\r\n\r\n}\r\n\r\nHostEditAgendaCard.propTypes = propTypes;\r\nHostEditAgendaCard.defaultProps = defaultProps;\r\n\r\nexport default HostEditAgendaCard;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body             from '../theme/Body';\r\n\r\nimport StatusText       from '../format-text/StatusText';\r\nimport Button           from '../buttons/Button';\r\n\r\nimport Card             from './Card';\r\n\r\n\r\nconst propTypes = {\r\n  pollStatus: PropTypes.string,\r\n\r\n  updateStatus: PropTypes.func,\r\n\r\n  headerColor: ExtraPropTypes.color,\r\n  textColor: ExtraPropTypes.color,\r\n  cardColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  headerColor: Colors.White\r\n};\r\n\r\nconst HeadingWrapper = styled.div`\r\n`;\r\n\r\nconst SectionWrapper = styled.div`\r\n  padding-top: 15px;\r\n`;\r\n\r\nconst SectionHeadingWrapper = styled.div`\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst HorizontalSectionWrapper = styled.div`\r\n  padding-top: 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  width: auto;\r\n`;\r\n\r\nconst PanelHeader = ( props ) => {\r\n\r\n  return (\r\n    <HeadingWrapper>\r\n      <Jumbo fiveExtraSmall={props.extraSmall} fourExtraSmall={props.small}\r\n             threeExtraSmall={props.medium} twoExtraSmall={props.large}\r\n             extraSmall={props.extraLarge} color={props.color}>\r\n        STATUS\r\n      </Jumbo>\r\n    </HeadingWrapper>\r\n  )\r\n}\r\n\r\nconst StatusButton = ( props ) => {\r\n\r\n  const { status, onClick, size, ...rest } = props;\r\n\r\n  let disabled = false;\r\n  let text;\r\n  let color;\r\n  let newStatus;\r\n\r\n  if ( status === 'closed') {\r\n    disabled = true;\r\n    text = 'CLOSED';\r\n    color = Colors.LightGrey;\r\n  }\r\n  else if ( status === 'open' ) {\r\n    text = 'CLOSE';\r\n    color = Colors.Red;\r\n    newStatus = 'closed';\r\n  }\r\n  else {\r\n    text = 'OPEN';\r\n    color = Colors.Green;\r\n    newStatus = 'open';\r\n  }\r\n\r\n  return (\r\n    <Button backgroundColor={color} onClick={() => onClick(newStatus)}\r\n            disabled={disabled} {...size}>\r\n      {text}\r\n    </Button>\r\n  )\r\n\r\n}\r\n\r\nconst PanelSection = ( props ) => {\r\n\r\n  const { status, children, onStatusClick, color, size, ...rest } = props;\r\n\r\n  if (size.extraSmall) {\r\n    return (\r\n      <HorizontalSectionWrapper>\r\n        <StatusText status={status} color={color} {...size}/>\r\n        {children}\r\n        <ButtonWrapper>\r\n          <StatusButton status={status} onClick={onStatusClick} size={size}/>\r\n        </ButtonWrapper>\r\n      </HorizontalSectionWrapper>\r\n    )\r\n  }\r\n  return (\r\n    <SectionWrapper>\r\n      <SectionHeadingWrapper>\r\n        <StatusText status={status} color={color} {...size}/>\r\n      </SectionHeadingWrapper>\r\n      {children}\r\n      <StatusButton status={status} onClick={onStatusClick} size={size}/>\r\n    </SectionWrapper>\r\n  )\r\n}\r\n\r\nconst HostStatusCard = ( props ) => {\r\n\r\n  const size = {\r\n    extraSmall: props.extraSmall,\r\n    small: props.small,\r\n    medium: props.medium,\r\n    large: props.large,\r\n    extraLarge: props.extraLarge\r\n  }\r\n\r\n  return (\r\n    <Card color={props.cardColor} borderColor={props.borderColor} borderMedium {...size}>\r\n      <PanelHeader color={props.headerColor} {...size}/>\r\n      <PanelSection status={props.pollStatus} onStatusClick={props.onStatusClick}\r\n                    color={props.textColor} size={size}/>\r\n    </Card>\r\n  )\r\n}\r\n\r\nHostStatusCard.propTypes = propTypes;\r\nHostStatusCard.defaultProps = defaultProps;\r\n\r\nexport default HostStatusCard;\r\n","import React, { useEffect } from 'react';\r\nimport styled               from 'styled-components';\r\n\r\nimport { connect }          from 'react-redux';\r\nimport ActionTypes          from '../store/actionTypes';\r\n\r\nimport history              from '../history';\r\n\r\nimport { Colors }           from '../components/theme/Colors';\r\nimport ViewportHandler      from './format-pages/ViewportHandler';\r\nimport SideBarPage          from './format-pages/SideBarPage';\r\n\r\nimport HostAgendaCard       from '../components/cards/HostAgendaCard';\r\nimport HostEditAgendaCard   from '../components/cards/HostEditAgendaCard';\r\nimport HostStatusCard       from '../components/cards/HostStatusCard'\r\n\r\n\r\nconst getSize = (viewport) => {\r\n\r\n  let size = {};\r\n  switch (viewport) {\r\n    case 'mobile':\r\n    case 'smallMobile':\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'hdDesktop':\r\n    case 'uhdDesktop':\r\n      size.medium = true;\r\n      break;\r\n    default:\r\n      size.small = true;\r\n  }\r\n\r\n  return size;\r\n}\r\n\r\nconst SideBarComponent = ( props ) => {\r\n\r\n  const size = getSize(props.viewport)\r\n\r\n  return (\r\n    <HostStatusCard pollStatus={props.pollStatus}\r\n                    onStatusClick={props.onStatusClick}\r\n                    headerColor={Colors.White}\r\n                    textColor={Colors.White}\r\n                    cardColor={`none`} borderColor={Colors.White}\r\n                    {...size}/>\r\n  )\r\n}\r\n\r\nconst AgendaComponent = ( props ) => {\r\n\r\n  const size = getSize(props.viewport)\r\n  console.log('here')\r\n  console.log(props.viewport)\r\n\r\n  return props.editing ?\r\n      <HostEditAgendaCard {...size} onAddClick={props.onAddClick}\r\n                                 onDeleteClick={props.onDeleteClick}\r\n                                 onDragEnd={props.onDragEnd}\r\n                                 onTitleChange={props.onTitleChange}\r\n                                 onPollEditClick={props.onPollEditClick}\r\n                                 {...props.cardProps}/> :\r\n      <HostAgendaCard {...size} {...props.cardProps}\r\n                      onStatusClick={props.onStatusClick}\r\n                      onViewClick={props.onViewClick}/>\r\n\r\n}\r\n\r\nconst HostRoomPage = ( props ) => {\r\n\r\n  const roomcode = props.match.params.roomcode || '0000';\r\n\r\n  useEffect(() =>  {\r\n    // console.log(props);\r\n    props.onFetchAgenda(roomcode);\r\n  }, [])\r\n\r\n  const cardProps = {\r\n    roomcode: roomcode,\r\n    title: props.title,\r\n    status: props.status,\r\n    polls: props.polls,\r\n    order: props.order,\r\n    onEditClick: () => props.onEditClick(roomcode),\r\n  }\r\n\r\n\r\n  const onViewClick = (poll_id) => {\r\n    props.polls[poll_id].status === 'closed' ?\r\n      history.push(`/PollResults/${roomcode}/${poll_id}`) :\r\n      history.push(`/HostPoll/${roomcode}/${poll_id}`)\r\n  };\r\n\r\n  const onPollEditClick = (poll_id) => {\r\n    props.onEditClick(roomcode);\r\n    // props.togglePollEdit();\r\n    history.push(`/HostPoll/${roomcode}/${poll_id}`, {editing: true})\r\n  }\r\n\r\n  // const sideContent =\r\n  //   <HostStatusCard pollStatus={props.status}\r\n  //                   onStatusClick={(newStatus) => props.onUpdateStatus(roomcode, newStatus)}\r\n  //                   headerColor={Colors.White}\r\n  //                   textColor={Colors.White}\r\n  //                   cardColor={`none`} borderColor={Colors.White}\r\n  //                   medium/>\r\n  //\r\n  // return (\r\n  //   <SideBarPage sideContent={sideContent} color={Colors.LightBlue}>\r\n  //     { props.editing ?\r\n  //       <HostEditAgendaCard medium onAddClick={() => props.onAddClick(roomcode)}\r\n  //                                  onDeleteClick={props.onDeleteClick}\r\n  //                                  onDragEnd={props.onDragEnd}\r\n  //                                  onTitleChange={props.onTitleChange}\r\n  //                                  onPollEditClick={onPollEditClick}\r\n  //                                  {...cardProps}/> :\r\n  //       <HostAgendaCard medium {...cardProps}\r\n  //                       onStatusClick={(poll_id, newStatus) => props.onUpdatePollStatus(roomcode, poll_id, newStatus)}\r\n  //                       onViewClick={onViewClick}/> }\r\n  //   </SideBarPage>\r\n  // )\r\n\r\n  const sideContent = <SideBarComponent pollStatus={props.status}\r\n                                        onStatusClick={(newStatus) => props.onUpdateStatus(roomcode, newStatus)}/>\r\n\r\n  return (\r\n    <ViewportHandler>\r\n      <SideBarPage sideContent={sideContent} color={Colors.Blue}>\r\n        <AgendaComponent editing={props.editing}\r\n                         onAddClick={() => props.onAddClick(roomcode)}\r\n                         onDeleteClick={props.onDeleteClick}\r\n                         onDragEnd={props.onDragEnd}\r\n                         onTitleChange={props.onTitleChange}\r\n                         onPollEditClick={onPollEditClick}\r\n                         onStatusClick={(poll_id, newStatus) => props.onUpdatePollStatus(roomcode, poll_id, newStatus)}\r\n                         onViewClick={onViewClick}\r\n                         cardProps={cardProps}/>\r\n      </SideBarPage>\r\n    </ViewportHandler>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    title: state.hostagenda.title,\r\n    status: state.hostagenda.status,\r\n    polls: state.hostagenda.polls,\r\n    order: state.hostagenda.order,\r\n    editing: state.hostagenda.editing,\r\n    loading: state.hostagenda.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchAgenda: (room_id) => dispatch({ type: ActionTypes.hostagenda.FETCH_AGENDA_START,\r\n                                            room_id }),\r\n    onEditClick: (room_id) => { dispatch({ type: ActionTypes.hostagenda.TOGGLE_EDIT })\r\n                                dispatch({ type: ActionTypes.hostagenda.UPDATE_AGENDA_START,\r\n                                          room_id })},\r\n    onTitleChange: (event) => { dispatch({ type: ActionTypes.hostagenda.UPDATE_TITLE,\r\n                                             event })},\r\n    onAddClick: (room_id) => dispatch({ type: ActionTypes.hostagenda.ADD_POLL_START,\r\n                                 room_id }),\r\n    onDeleteClick: (poll_id) => dispatch({ type: ActionTypes.hostagenda.DELETE_POLL,\r\n                                           poll_id }),\r\n    onDragEnd: (newPendingOrder) => dispatch({ type: ActionTypes.hostagenda.UPDATE_ORDER,\r\n                                        newPendingOrder }),\r\n    onUpdatePollStatus: (room_id, poll_id, newStatus) => dispatch({ type: ActionTypes.hostagenda.UPDATE_POLL_STATUS_START,\r\n                                                              room_id, poll_id, newStatus }),\r\n    onUpdateStatus: (room_id, newStatus) => dispatch({ type:ActionTypes.hostagenda.UPDATE_ROOM_STATUS_START,\r\n                                                    room_id, newStatus }),\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HostRoomPage);\r\n","import React            from 'react';\r\nimport styled, { css }  from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Body             from '../theme/Body';\r\nimport Input            from '../inputs/Input';\r\nimport Card             from './Card';\r\nimport Button           from '../buttons/Button';\r\nimport Jumbo             from '../theme/Jumbo';\r\n\r\n\r\nconst propTypes = {\r\n  value: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  handleSubmit: PropTypes.func,\r\n};\r\n\r\nconst defaultProps = {\r\n  handleChange: undefined,\r\n  handleSubmit: undefined\r\n};\r\n\r\nconst ComponentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  width: 50%;\r\n`;\r\n\r\nconst TextInputWrapper = styled.div`\r\n  padding-bottom: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  padding-bottom: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst Title = (props) => {\r\n\r\n  const { title, extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  let titlePadding;\r\n  if ( extraSmall ) { titlePadding = 5; }\r\n  else if ( small ) { titlePadding = 10; }\r\n  else if ( large ) { titlePadding = 20; }\r\n  else { titlePadding = 15; }\r\n\r\n  return (\r\n    <TitleWrapper padding={titlePadding}>\r\n      <Jumbo twoExtraSmall={extraSmall}\r\n             extraSmall={small}\r\n             small={medium}\r\n             medium={large}\r\n             large={extraLarge}\r\n             color={Colors.White}>\r\n        {title}\r\n      </Jumbo>\r\n    </TitleWrapper>\r\n  )\r\n};\r\n\r\nconst CodeInput = (props) => {\r\n\r\n  const { label, value, handleChange, handleSubmit,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  let inputPadding;\r\n  if ( extraSmall ) { inputPadding = 10 }\r\n  else if ( small ) { inputPadding = 15 }\r\n  else if ( large ) { inputPadding =  25 }\r\n  else { inputPadding = 20  }\r\n\r\n  return (\r\n    <TextInputWrapper padding={inputPadding}>\r\n      <Input type={\"inputfield\"} value={value} fontColor={Colors.White}\r\n             onChange={handleChange} placeholder={\"Enter Room Code\"}\r\n             backgroundColor={Colors.Blue} borderColor={Colors.White}\r\n             placeholderColor={Colors.White}\r\n             {...{extraSmall, small, medium, large, extraLarge}}/>\r\n    </TextInputWrapper>\r\n  )\r\n};\r\n\r\nconst EnterButton = (props) => {\r\n\r\n  const { extraSmall, small, medium, large, extraLarge, handleSubmit } = props;\r\n\r\n  return(\r\n    <ButtonWrapper>\r\n      <Button onClick={handleSubmit} color={Colors.White} backgroundColor={Colors.Buff}\r\n              {...{extraSmall, small, medium, large, extraLarge}}>\r\n         ENTER\r\n      </Button>\r\n    </ButtonWrapper>\r\n\r\n  )\r\n};\r\n\r\nconst RoomCodeForm = (props) => {\r\n\r\n    return (\r\n      <Card borderLarge color={Colors.Blue} borderColor={Colors.Blue}>\r\n        <ComponentWrapper>\r\n          <Title {...props}/>\r\n          <CodeInput {...props}/>\r\n          <EnterButton {...props}/>\r\n          </ComponentWrapper>\r\n      </Card>\r\n\r\n\r\n    );\r\n\r\n};\r\n\r\nRoomCodeForm.propTypes = propTypes;\r\nRoomCodeForm.defaultProps = defaultProps;\r\n\r\nexport default RoomCodeForm;\r\n","import React                from 'react';\r\nimport styled               from 'styled-components';\r\nimport ParticlesBg          from 'particles-bg';\r\n\r\nimport { connect }          from 'react-redux';\r\nimport ActionTypes           from '../store/actionTypes';\r\nimport history              from '../history';\r\n\r\nimport ViewportHandler      from './format-pages/ViewportHandler';\r\nimport { Colors }           from '../components/theme/Colors';\r\nimport MainPage             from './format-pages/MainPage';\r\n\r\nimport RoomcodeCard         from '../components/cards/RoomcodeCard';\r\n\r\nconst RoomcodeWrapper = styled.div`\r\n  width: ${({width}) => width};\r\n`;\r\n\r\nconst RoomcodeComponent = ( props ) => {\r\n\r\n  let width;\r\n  let size = {};\r\n  switch (props.viewport) {\r\n    case 'smallDesktop':\r\n      width = `75%`;\r\n      size.small = true;\r\n      break;\r\n    case 'tablet':\r\n      width = `100%`;\r\n      size.small = true;\r\n      break;\r\n    case 'mobile':\r\n    case 'smallMobile':\r\n      width = `100%`\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'hdDesktop':\r\n    case 'uhdDesktop':\r\n      width = `50%`\r\n      size.medium = true;\r\n      break;\r\n    default:\r\n      width = `50%`\r\n      size.small = true;\r\n  }\r\n\r\n  return (\r\n    <RoomcodeWrapper width={width}>\r\n       <RoomcodeCard title=\"Faculty Voting\"\r\n                     viewport={props.viewport} {...size}\r\n                     value={props.roomcode}\r\n                     handleChange={props.handleChange}\r\n                     handleSubmit={props.handleSubmit}/>\r\n    </RoomcodeWrapper>\r\n  )\r\n}\r\n\r\nconst RoomCodeScreen = ( props ) => {\r\n\r\n  if (props.submitted) {\r\n    if (props.error) {\r\n      alert(`Invalid code, please enter a valid code.`);\r\n    }\r\n    else {\r\n      props.resetCode();\r\n      alert('You are entering room: ' + props.roomcode);\r\n\r\n      history.push(`/UserAgenda/${props.roomcode}`);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ViewportHandler>\r\n       <MainPage color={Colors.Blue}>\r\n           <RoomcodeComponent viewport={props.viewport}\r\n                              value={props.roomcode}\r\n                              handleChange={(event) => props.updateCode(event.target.value)}\r\n                              handleSubmit={() => props.validateCode(props.roomcode)}/>\r\n       </MainPage>\r\n    </ViewportHandler>\r\n   );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    roomcode: state.roomcode.roomcode,\r\n    submitted: state.roomcode.submitted,\r\n    loading: state.roomcode.loading,\r\n    error: state.roomcode.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateCode: (value) => dispatch({ type: ActionTypes.roomcode.UPDATE_ROOMCODE,\r\n                                      value }),\r\n    validateCode: (room_id) => dispatch({ type: ActionTypes.roomcode.CHECK_ROOMCODE_START,\r\n                                          room_id }),\r\n    resetCode: () => dispatch({ type: ActionTypes.roomcode.RESET_ROOMCODE,}),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomCodeScreen);\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport SecondaryCard            from '../format-cards/SecondaryCard';\r\nimport AgendaItem                from '../items/AgendaItem';\r\nimport Group                 from '../groups/Group';\r\n\r\nconst propTypes = {\r\n  roomcode: PropTypes.string,\r\n  title: PropTypes.string,\r\n  status: PropTypes.string,\r\n\r\n  polls: PropTypes.object,\r\n  order: PropTypes.object,\r\n\r\n  onViewClick: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n\r\n};\r\n\r\n\r\nconst UserAgendaCard = ( props ) => {\r\n\r\n  const { roomcode, title, status, polls, order, onViewClick,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  let allPolls = [];\r\n  let statusList = ['open', 'pending', 'closed'];\r\n  statusList = statusList.filter((status) => order[status] && order[status].length != 0);\r\n\r\n  for (let i = 0; i < statusList.length; i++) {\r\n    allPolls = allPolls.concat(order[statusList[i]]) }\r\n\r\n  return (\r\n    <SecondaryCard header={title} width={`100%`}\r\n                   extraSmall={extraSmall} small={small}\r\n                   medium={medium} large={large} extraLarge={extraLarge}>\r\n      <Group>\r\n        {allPolls.map((id) => {\r\n          const poll = polls[id];\r\n          return (\r\n            <AgendaItem pollTitle={poll.title}\r\n                        status={poll.status}\r\n                        onViewClick={onViewClick ? () => onViewClick(id) : undefined}/>\r\n          )\r\n        })}\r\n      </Group>\r\n    </SecondaryCard>\r\n  )\r\n};\r\n\r\nUserAgendaCard.propTypes = propTypes;\r\nUserAgendaCard.defaultProps = defaultProps;\r\n\r\nexport default UserAgendaCard;\r\n","import React, { useEffect }                from 'react';\r\nimport styled               from 'styled-components';\r\n\r\nimport { connect }          from 'react-redux';\r\nimport ActionTypes          from '../store/actionTypes';\r\nimport history              from '../history';\r\n\r\nimport { Colors }           from '../components/theme/Colors';\r\nimport ViewportHandler      from './format-pages/ViewportHandler';\r\nimport MainPage             from './format-pages/MainPage';\r\n\r\nimport UserAgendaCard       from '../components/cards/UserAgendaCard';\r\n\r\n\r\nconst PageWrapper = styled.div`\r\n  background-color: ${Colors.LightBlue};\r\n  right: 0;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n\r\n  position: fixed;\r\n  overflow: auto;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst ComponentWrapper = styled.div`\r\n  height: 80%;\r\n  width: 80%;\r\n`;\r\n\r\nconst AgendaComponent = ( props ) => {\r\n\r\n  let size = {};\r\n  switch (props.viewport) {\r\n    case 'mobile':\r\n    case 'smallMobile':\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'hdDesktop':\r\n    case 'uhdDesktop':\r\n      size.medium = true;\r\n      break;\r\n    default:\r\n      size.small = true;\r\n  }\r\n\r\n  return (\r\n    <UserAgendaCard {...size}\r\n                    roomcode={props.roomcode}\r\n                    title={props.title}\r\n                    status={props.status}\r\n                    polls={props.polls}\r\n                    order={props.order}\r\n                    onViewClick={props.onViewClick}/>\r\n  )\r\n}\r\n\r\nconst UserAgendaPage = ( props ) => {\r\n\r\n  const roomcode = props.match.params.roomcode || '0000'\r\n\r\n  useEffect(() =>  {\r\n    props.onFetchAgenda(roomcode);\r\n  }, [])\r\n\r\n  const onViewClick = (poll_id) => {\r\n    props.polls[poll_id].status === 'closed' ?\r\n      history.push(`/PollResults/${roomcode}/${poll_id}`) :\r\n      history.push(`/UserPoll/${roomcode}/${poll_id}`)\r\n  };\r\n\r\n\r\n  return (\r\n    <ViewportHandler>\r\n      <MainPage>\r\n          <AgendaComponent viewport={props.viewport}\r\n                           roomcode={roomcode}\r\n                           title={props.title}\r\n                           status={props.status}\r\n                           polls={props.polls}\r\n                           order={props.order}\r\n                           onViewClick={onViewClick}/>\r\n      </MainPage>\r\n    </ViewportHandler>\r\n  );\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    title: state.useragenda.title,\r\n    status: state.useragenda.status,\r\n    polls: state.useragenda.polls,\r\n    order: state.useragenda.order,\r\n    loading: state.useragenda.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchAgenda: (room_id) => dispatch({ type: ActionTypes.useragenda.FETCH_AGENDA_START,\r\n                                            room_id }),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAgendaPage);\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Group            from '../groups/Group';\r\nimport { Colors }       from '../theme/Colors';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  selectedOptions: PropTypes.object,\r\n  onSelect: PropTypes.func, // for exterior use\r\n  disabled: PropTypes.bool,\r\n\r\n  type: PropTypes.oneOf(['single', 'multiple']),\r\n\r\n  // Option Props\r\n  iconColor: ExtraPropTypes.color,\r\n  fontColor: ExtraPropTypes.color,\r\n  backgroundColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  type: 'single',\r\n  iconColor: Colors.Blue,\r\n\r\n  fontColor: Colors.Black,\r\n  borderColor: Colors.Blue,\r\n};\r\n\r\nclass OptionGroup extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // const selectedOptions = props.selectedOptions ? props.selectedOptions.map((item) => item) :\r\n    //                                   Array(props.children.length).fill(false);\r\n\r\n    this.state = { selectedOptions: props.selectedOptions ? {...props.selectedOptions} : {} }\r\n\r\n    this._handleClickMulti = this._handleClickMulti.bind(this);\r\n    this._handleClickSngl = this._handleClickSngl.bind(this);\r\n\r\n    this._handleClick = this._handleClick.bind(this);\r\n    this._renderOptions = this._renderOptions.bind(this);\r\n  };\r\n\r\n  async _handleClickMulti ( event, id ) {\r\n\r\n    let newSelected = {...this.state.selectedOptions};\r\n\r\n    if (this.state.selectedOptions[id]) { newSelected[id] = false; }\r\n    else { newSelected[id] = true; }\r\n\r\n    await this.setState({...this.state, selectedOptions: newSelected});\r\n\r\n    if (this.props.onSelect) { this.props.onSelect(this.state.selectedOptions)}\r\n\r\n  }\r\n\r\n  async _handleClickSngl ( event, id ) {\r\n\r\n    let newSelected;\r\n\r\n    if (this.state.selectedOptions[id]) {\r\n      newSelected = {};\r\n    }\r\n    else {\r\n      newSelected = {};\r\n      newSelected[id] = true;\r\n    }\r\n\r\n    await this.setState({...this.state, selectedOptions: newSelected});\r\n\r\n    if (this.props.onSelect) { this.props.onSelect(this.state.selectedOptions)}\r\n  }\r\n\r\n\r\n  _handleClick = ( event, id ) => {\r\n\r\n    if (this.props.disabled) { return; }\r\n\r\n    this.props.type === 'multiple' ? this._handleClickMulti(event, id) :\r\n                                     this._handleClickSngl(event, id);\r\n  };\r\n\r\n   _renderOptions = ( props ) => {\r\n    const { children, iconColor, ...rest } = props;\r\n\r\n    // console.log(this.state.selectedOptions);\r\n\r\n    return React.Children.map(children, (item, index) => {\r\n\r\n      const id = item.props.id;\r\n\r\n      const onClick = (event) => this._handleClick(event, id);\r\n      const clicked = this.state.selectedOptions[id];\r\n      const iconType = (this.props.type === 'multiple') ? 'checkbox' : 'bubble';\r\n\r\n      const itemProps = { onClick: onClick,\r\n                          clicked: clicked,\r\n                          iconColor: iconColor,\r\n                          iconType: iconType};\r\n      return (\r\n        React.cloneElement(item, {...itemProps})\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Group {...this.props}>\r\n        {this._renderOptions(this.props)}\r\n      </Group>\r\n    )\r\n  }\r\n};\r\n\r\nOptionGroup.propTypes = propTypes;\r\nOptionGroup.defaultProps = defaultProps;\r\n\r\nexport default OptionGroup;\r\n","import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Icon             from '../theme/Icon';\r\n\r\nconst propTypes = {\r\n  onClick: PropTypes.func,\r\n  clicked: PropTypes.bool,\r\n\r\n  color: ExtraPropTypes.color,\r\n\r\n  extraLarge: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  extraSmall: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  onClick: undefined,\r\n  clicked: false,\r\n  color: Colors.Black,\r\n};\r\n\r\nconst renderClicked = ( props ) => {\r\n  return (\r\n  <Icon type={'bubble'}\r\n        {...props}/>\r\n);}\r\n\r\nconst renderUnClicked = ( props ) => (\r\n  <Icon type={'circle'}\r\n        {...props} />\r\n);\r\n\r\nconst Bubble = ( props ) => {\r\n\r\n  const { clicked, ...rest } = props;\r\n\r\n  return (\r\n    clicked ? renderClicked(rest) :\r\n              renderUnClicked(rest)\r\n  );\r\n};\r\n\r\nBubble.propTypes = propTypes;\r\nBubble.defaultProps = defaultProps;\r\n\r\nexport default Bubble;\r\n","import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Icon       from '../theme/Icon';\r\n\r\nconst propTypes = {\r\n  onClick: PropTypes.func,\r\n  clicked: PropTypes.bool,\r\n\r\n  color: ExtraPropTypes.color,\r\n\r\n  extraLarge: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  extraSmall: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  onClick: undefined,\r\n  clicked: false,\r\n  color: Colors.Black,\r\n};\r\n\r\nconst renderClicked = ( props ) => (\r\n  <Icon type={'checkbox'}\r\n        {...props} />\r\n);\r\n\r\nconst renderUnClicked = ( props ) => (\r\n  <Icon type={'box'}\r\n        {...props} />\r\n);\r\n\r\nconst CheckBox = ( props ) => {\r\n\r\n  const { clicked, ...rest } = props;\r\n\r\n  return(clicked ? renderClicked(rest) : renderUnClicked(rest));\r\n\r\n}\r\n\r\nCheckBox.propTypes = propTypes;\r\nCheckBox.defaultProps = defaultProps;\r\n\r\nexport default CheckBox;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Icon             from '../theme/Icon';\r\nimport { Colors }       from '../theme/Colors';\r\nimport Bubble           from '../buttons/Bubble';\r\nimport CheckBox         from '../buttons/CheckBox';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  iconButton: PropTypes.node,\r\n  extraIcons: PropTypes.arrayOf(PropTypes.node),\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  buttonColor: Colors.Black,\r\n  onClick: undefined,\r\n  clicked: false,\r\n  buttonType: 'bubble',\r\n};\r\n\r\nconst ChildrenWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-right: ${({padding}) => padding};\r\n`;\r\n\r\nconst ExtraIconWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-left: ${({padding}) => padding};\r\n`;\r\n\r\nconst OptionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  width: auto;\r\n  /* border: 1px solid black; */\r\n`;\r\n\r\n\r\nconst DummyIcon = styled.div`\r\n  height: ${({size}) => size};\r\n  width: ${({size}) => size};\r\n`;\r\n\r\nconst optionConfig = {\r\n  extraSmall: { padding: `10px`,\r\n               iconSize: '0.75em' },\r\n  small: { padding: `12px`,\r\n           iconSize: '1em' },\r\n  medium: { padding: `16px`,\r\n           iconSize: '1.5em'},\r\n  large: { padding: `20px`,\r\n           iconSize: '1.75em'},\r\n  extraLarge: { padding: `28px`,\r\n           iconSize: '2em'},\r\n};\r\n\r\nconst renderExtraIcons = ( props, padding ) => {\r\n\r\n  const { extraIcons, extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  const itemProps = { extraSmall: extraSmall, small: small, medium: medium,\r\n                      large: large, extraLarge: extraLarge };\r\n\r\n  return extraIcons.map((item) => (\r\n    <ExtraIconWrapper padding={padding}>\r\n      {React.cloneElement(item, {...itemProps})}\r\n    </ExtraIconWrapper>\r\n  ))\r\n}\r\n\r\n\r\nconst OptionBase = (props) => {\r\n\r\n  const { children, iconButton, extraIcons,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  let padding;\r\n\r\n  if (extraLarge) { padding = `28px` }\r\n  else if (large) { padding =  `20px` }\r\n  else if (small) { padding = `12px` }\r\n  else if (extraSmall) { padding = `10px`}\r\n  else { padding = `16px` }\r\n\r\n  const itemProps = { extraSmall: extraSmall, small: small, medium: medium,\r\n                      large: large, extraLarge: extraLarge };\r\n\r\n  return (\r\n    <OptionWrapper>\r\n      <IconButtonWrapper padding={padding}>\r\n        {React.cloneElement(iconButton, {...itemProps})}\r\n      </IconButtonWrapper>\r\n      <ChildrenWrapper>\r\n        {children}\r\n      </ChildrenWrapper>\r\n      { extraIcons ? renderExtraIcons(props, padding) : <div/>}\r\n    </OptionWrapper>\r\n  )\r\n\r\n};\r\n\r\nOptionBase.propTypes = propTypes;\r\nOptionBase.defaultProps = defaultProps;\r\n\r\nexport default OptionBase;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Icon             from '../theme/Icon';\r\nimport { Colors }       from '../theme/Colors';\r\nimport Bubble           from '../buttons/Bubble';\r\nimport CheckBox         from '../buttons/CheckBox';\r\n\r\nimport OptionBase       from './OptionBase';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  extraIcons: PropTypes.arrayOf(PropTypes.node),\r\n  type: PropTypes.oneOf(['bubble', 'checkbox', 'add']),\r\n\r\n  iconColor: ExtraPropTypes.color,\r\n  onClick: PropTypes.func,\r\n  clicked: PropTypes.bool,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  type: 'checkbox',\r\n  iconColor: Colors.Black,\r\n  onClick: undefined,\r\n  clicked: false\r\n};\r\n\r\nconst bubble = ( props ) => {\r\n\r\n  const { iconColor, onClick, clicked,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  return (\r\n    <Bubble color={iconColor} onClick={onClick} clicked={clicked}/>\r\n  )\r\n};\r\n\r\nconst checkbox = ( props ) => {\r\n\r\n  const { iconColor, onClick, clicked,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  return (\r\n    <CheckBox color={iconColor} onClick={onClick} clicked={clicked}/>\r\n  )\r\n\r\n};\r\n\r\nconst add = ( props ) => {\r\n\r\n  const { iconColor, onClick,\r\n           extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  return (\r\n    <Icon type={'addCircle'} color={iconColor} onClick={onClick}/>\r\n  )\r\n\r\n};\r\n\r\nconst Option = ( props ) => {\r\n\r\n  const { type, children, extraIcons,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  let iconButton;\r\n  switch (type) {\r\n    case 'bubble':\r\n      iconButton = bubble(props);\r\n      break;\r\n    case 'add':\r\n      iconButton = add(props);\r\n      break;\r\n    default:\r\n      iconButton = checkbox(props);\r\n  }\r\n\r\n  return (\r\n    <OptionBase iconButton={iconButton} extraIcons={extraIcons}\r\n                extraSmall={extraSmall} small={small} medium={medium} large={large} extraLarge={extraLarge}>\r\n      {children}\r\n    </OptionBase>\r\n  );\r\n}\r\n\r\nOption.propTypes = propTypes;\r\nOption.defaultProps = defaultProps;\r\n\r\nexport default Option;\r\n","import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Option           from './Option';\r\nimport Body             from '../theme/Body';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n\r\n  //Option Props\r\n  extraIcons: PropTypes.arrayOf(PropTypes.node),\r\n  iconType: PropTypes.oneOf(['bubble', 'checkbox', 'add']),\r\n  iconColor: ExtraPropTypes.color,\r\n  onClick: PropTypes.func,\r\n  clicked: PropTypes.bool,\r\n\r\n  // Body props\r\n  fontColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n};\r\n\r\nconst TextOption = ( props ) => {\r\n\r\n  const { children, extraIcons,\r\n          iconType, iconColor, onClick, clicked,\r\n          fontColor,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  return (\r\n    <Option extraIcons={extraIcons} type={iconType} iconColor={iconColor}\r\n            onClick={onClick} clicked={clicked}\r\n            extraSmall={extraSmall} small={small} medium={medium} large={large} extraLarge={extraLarge}>\r\n      <Body color={fontColor}\r\n            extraSmall={extraSmall} small={small} medium={medium} large={large} extraLarge={extraLarge}>\r\n          {children}\r\n      </Body>\r\n    </Option>\r\n  )\r\n\r\n};\r\n\r\nTextOption.propTypes = propTypes;\r\nTextOption.defaultProps = defaultProps;\r\n\r\nexport default TextOption;\r\n","import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Option           from './Option';\r\nimport Input            from '../inputs/Input';\r\n\r\nconst propTypes = {\r\n  inputType: PropTypes.oneOf(['inputfield', 'textarea', 'select']),\r\n  value: PropTypes.string,\r\n\r\n  //Option Props\r\n  extraIcons: PropTypes.arrayOf(PropTypes.node),\r\n  iconType: PropTypes.oneOf(['bubble', 'checkbox', 'add']),\r\n  iconColor: ExtraPropTypes.color,\r\n  onClick: PropTypes.func,\r\n  clicked: PropTypes.bool,\r\n\r\n  // Input props\r\n  placeholder: PropTypes.string,\r\n  fontColor: ExtraPropTypes.color,\r\n  backgroundColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n  onChange: ExtraPropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  inputType: 'inputfield',\r\n  placeholder: 'Other...'\r\n};\r\n\r\nconst InputOption = ( props ) => {\r\n\r\n  const { inputType, value, extraIcons,\r\n          iconType, iconColor, onClick, clicked,\r\n          placeholder, fontColor, backgroundColor, borderColor, onChange,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  return (\r\n    <Option extraIcons={extraIcons} type={iconType} iconColor={iconColor}\r\n            onClick={onClick} clicked={clicked}\r\n            extraSmall={extraSmall} small={small} medium={medium} large={large} extraLarge={extraLarge}>\r\n      <Input type={inputType} value={value} onChange={onChange} placeholder={placeholder}\r\n             fontColor={fontColor} backgroundColor={backgroundColor}\r\n             borderColor={borderColor}\r\n             extraSmall={extraSmall} small={small} medium={medium} large={large} extraLarge={extraLarge}/>\r\n    </Option>\r\n  )\r\n\r\n};\r\n\r\nInputOption.propTypes = propTypes;\r\nInputOption.defaultProps = defaultProps;\r\n\r\nexport default InputOption;\r\n","import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport styled           from 'styled-components';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Icon             from '../theme/Icon';\r\nimport { Colors }       from '../theme/Colors';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  submitted: PropTypes.bool,\r\n\r\n  iconColor: ExtraPropTypes.color,\r\n  fontColor: ExtraPropTypes.color,\r\n  backgroundColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nconst ComponentWrapper = styled.div``;\r\n\r\nconst submitIcon = (\r\n  <Icon type={'checkCircle'} color={Colors.Green}/>\r\n)\r\n\r\nconst VotingOption = ( props ) => {\r\n\r\n  const { children, submitted,\r\n          extraSmall, small, medium, large, extraLarge,\r\n          ...rest } = props;\r\n\r\n  const extraIcons = submitted ? [ submitIcon ] : undefined;\r\n\r\n  const childProps = { ...rest,\r\n                       extraSmall: extraSmall, small: small, medium: medium,\r\n                       large: large, extraLarge: extraLarge,\r\n                       extraIcons: extraIcons, };\r\n\r\n  return (\r\n    <ComponentWrapper>\r\n      {React.Children.map (children, (child) => React.cloneElement(child, {...childProps}))}\r\n    </ComponentWrapper>\r\n  )\r\n};\r\n\r\nVotingOption.propTypes = propTypes;\r\nVotingOption.defaultProps = defaultProps;\r\n\r\nexport default VotingOption;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Body             from '../theme/Body';\r\nimport Button           from  './Button';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  onClick: PropTypes.bool,\r\n\r\n  unselected: PropTypes.bool,\r\n  submit: PropTypes.bool,\r\n  submitted: PropTypes.bool,\r\n  resubmit: PropTypes.bool,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  onClick: undefined,\r\n};\r\n\r\nconst SubmitWrapper = styled.div`\r\n`\r\nconst ComponentWrapper = styled.div`\r\n  ${({extraSmall}) => extraSmall && `padding-bottom: 16px`}\r\n  ${({small}) => small && `padding-bottom: 20px`}\r\n  ${({medium}) => medium && `padding-bottom: 26px`}\r\n  ${({large}) => large && `padding-bottom: 32px`}\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n    width: ${({width}) => width}px;\r\n`;\r\n\r\nconst CenterWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\n\r\nconst config = {\r\n  unfilledInput: { subText: 'Please fill write in to record your response.',\r\n                   text: 'SUBMIT',\r\n                   color: Colors.Red,\r\n                   disabled: true,\r\n                 },\r\n  submit: { subText: 'Please press submit to record your response.',\r\n            text: 'SUBMIT',\r\n            color: Colors.Yellow,\r\n            disabled: false,\r\n          },\r\n  submitted: { subText: 'Your response has been recorded.',\r\n               text: 'SUBMITTED',\r\n               color: Colors.Green,\r\n               disabled: true\r\n             },\r\n  unselected: { subText: 'Please make a selection.',\r\n                text: 'SUBMIT',\r\n                color: Colors.Red,\r\n                disabled: true\r\n               },\r\n  resubmit: { subText: 'Please press submit to record your response.',\r\n              text: 'RESUBMIT',\r\n              color: Colors.Yellow,\r\n              disabled: false\r\n            },\r\n  pollpending: { subText: 'Please wait to record your response.',\r\n                 text: 'SUBMIT',\r\n                 color: Colors.LightGrey,\r\n                 disabled: true\r\n               },\r\n  submitloading: { subText: 'Your response is being recorded.',\r\n                   text: 'SUBMIT',\r\n                   color: Colors.LightGrey,\r\n                   disabled: true\r\n                },\r\n}\r\n\r\nconst renderText = (props) => {\r\n\r\n  const { buttonConfig, extraSmall, small, medium, large } = props;\r\n\r\n  console.log(extraSmall)\r\n\r\n  return(\r\n    <CenterWrapper>\r\n      <Body twoExtraSmall={extraSmall} extraSmall={small} small={medium} medium={large} color={Colors.Black}>\r\n        {buttonConfig.subText}\r\n      </Body>\r\n    </CenterWrapper>\r\n  )\r\n}\r\n\r\nconst renderButton = (props) => {\r\n\r\n  const { onClick, buttonConfig, ...rest} = props;\r\n\r\n  let width;\r\n  if (props.large) { width = 225}\r\n  else if ( props.small ) { width = 125 }\r\n  else if ( props.extraSmall ) { width = 100 }\r\n  else { width = 150 }\r\n\r\n  return (\r\n    <ComponentWrapper {...rest}>\r\n      <CenterWrapper>\r\n        <ButtonWrapper width={width}>\r\n          <Button onClick={buttonConfig.disabled ? undefined : onClick} disabled={buttonConfig.disabled}\r\n                  backgroundColor={buttonConfig.color}\r\n                  {...rest}>\r\n            {buttonConfig.text}\r\n          </Button>\r\n        </ButtonWrapper>\r\n      </CenterWrapper>\r\n    </ComponentWrapper>\r\n  );\r\n};\r\n\r\nconst SubmitButton = (props) => {\r\n  const { submissionStatus } = props;\r\n\r\n  let buttonConfig;\r\n\r\n  switch (submissionStatus) {\r\n    case 'unfilledInput':\r\n      buttonConfig = config.unfilledInput;\r\n      break;\r\n    case 'submit':\r\n      buttonConfig = config.submit;\r\n      break;\r\n    case 'submitted':\r\n      buttonConfig = config.submitted;\r\n      break;\r\n    case 'resubmit':\r\n      buttonConfig = config.resubmit;\r\n      break;\r\n    case 'pollpending':\r\n      buttonConfig = config.pollpending;\r\n      break;\r\n    case 'submitloading':\r\n      buttonConfig = config.pollpending;\r\n      break;\r\n    default:\r\n      buttonConfig = config.unselected;\r\n  }\r\n\r\n  return (\r\n    <SubmitWrapper>\r\n      {renderButton({...props, buttonConfig})}\r\n      {renderText({...props, buttonConfig})}\r\n    </SubmitWrapper>\r\n  )\r\n};\r\n\r\nSubmitButton.propTypes = propTypes;\r\nSubmitButton.defaultProps = defaultProps;\r\n\r\nexport default SubmitButton;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body            from '../theme/Body';\r\n\r\nimport TertiaryCard      from '../format-cards/TertiaryCard';\r\nimport OptionGroup      from '../option-groups/OptionGroup';\r\nimport TextOption       from '../options/TextOption';\r\nimport InputOption       from '../options/InputOption';\r\nimport VotingOption       from '../options/VotingOption';\r\nimport EditButton       from '../buttons/EditButton';\r\nimport SubmitButton     from '../buttons/SubmitButton';\r\n\r\nconst PollWrappper = styled.div``;\r\n\r\nconst DescriptionWrapper = styled.div`\r\n  ${({padding}) => padding && `padding-bottom: ${padding}px;`}\r\n`;\r\n\r\nconst PollComponent = ( props ) => {\r\n  const { pollData, onEditClick, ...rest } = props;\r\n\r\n  let padding;\r\n  if (props.extraSmall) { padding = 14}\r\n  else if (props.small) { padding = 16}\r\n  else if (props.large) { padding = 28}\r\n  else if (props.extraLarge) { padding = 32}\r\n  else { padding = 22}\r\n\r\n  const _description = (\r\n    <Body color={Colors.Charcol}>\r\n      {pollData.description}\r\n    </Body>\r\n  )\r\n\r\n  const _renderOptionGroup = () => {\r\n    const optionComponents = pollData.optionsOrder.map(id => {\r\n\r\n      return (\r\n        <TextOption>\r\n          {pollData.options[id].value}\r\n        </TextOption>\r\n     )\r\n    });\r\n\r\n    if ( pollData.userInputOption ) {\r\n      optionComponents.push(\r\n        <InputOption/>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <OptionGroup type={pollData.type} disabled fontColor={Colors.Black}\r\n                  {...rest}>\r\n        {optionComponents}\r\n      </OptionGroup>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PollComponent>\r\n      <DescriptionWrapper padding={padding}>\r\n        {_description}\r\n      </DescriptionWrapper>\r\n      {_renderOptionGroup()}\r\n    </PollComponent>\r\n  )\r\n}\r\n\r\nconst HostPollCard = ( props ) => {\r\n\r\n  const { pollData, onEditClick,\r\n          ...rest } = props;\r\n\r\n  const _editButton = <EditButton type={'edit'} color={Colors.Blue} onClick={onEditClick}/>\r\n\r\n  const _submitButton = (\r\n    <SubmitButton submissionStatus={'unselected'}\r\n                  {...rest}/>\r\n  )\r\n\r\n  const _description = (\r\n    <Body color={Colors.Charcol}>\r\n      {pollData.description}\r\n    </Body>\r\n  )\r\n\r\n  const _renderOptionGroup = () => {\r\n    const optionComponents = pollData.optionsOrder.map(id => {\r\n\r\n      return (\r\n        <TextOption>\r\n          {pollData.options[id].value}\r\n        </TextOption>\r\n     )\r\n    });\r\n\r\n    if ( pollData.userInputOption ) {\r\n      optionComponents.push(\r\n        <InputOption/>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <OptionGroup type={pollData.type} disabled fontColor={Colors.Black}\r\n                  {...rest}>\r\n        {optionComponents}\r\n      </OptionGroup>\r\n    );\r\n  }\r\n\r\n  const sections = [{content: _description},\r\n                    {content: _renderOptionGroup()}]\r\n\r\n  return (\r\n    <TertiaryCard {...rest}\r\n                   width={'100%'}\r\n                   height={props.extraSmall ? `100%` : `stretch`}\r\n                   cardColor={Colors.White}\r\n                   header={pollData.title}\r\n                   headerColor={Colors.Blue}\r\n                   headerButton={_editButton}\r\n                   sections={sections}\r\n                   footer={_submitButton}/>\r\n  )\r\n};\r\n\r\nexport default HostPollCard;\r\n","import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport InputOption            from './InputOption';\r\n\r\nconst propTypes = {\r\n\r\n  //Option Props\r\n  iconColor: ExtraPropTypes.color,\r\n  onClick: PropTypes.func,\r\n\r\n  // Input props\r\n  placeholder: PropTypes.string,\r\n  fontColor: ExtraPropTypes.color,\r\n  backgroundColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n};\r\n\r\nconst AdderOption = ( props ) => {\r\n\r\n  const { iconColor, onClick,\r\n          placeholder, fontColor, backgroundColor, borderColor,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  return (\r\n    <InputOption inputType={'select'} iconType={'add'}\r\n                 iconColor={iconColor} onClick={onClick}\r\n                 placeholder={placeholder} fontColor={fontColor}\r\n                 backgroundColor={backgroundColor} borderColor={borderColor}\r\n                 extraSmall={extraSmall} small={small} medium={medium} large={large} extraLarge={extraLarge}/>\r\n  )\r\n\r\n};\r\n\r\nAdderOption.propTypes = propTypes;\r\nAdderOption.defaultProps = defaultProps;\r\n\r\nexport default AdderOption;\r\n","import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport styled           from 'styled-components';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Icon           from '../theme/Icon';\r\nimport { Colors }     from '../theme/Colors';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  onDelete: PropTypes.func,\r\n\r\n  iconColor: ExtraPropTypes.color,\r\n  fontColor: ExtraPropTypes.color,\r\n  backgroundColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nconst ComponentWrapper = styled.div``;\r\n\r\nconst deleteIcon = (onDelete) => (\r\n  <Icon type={'x'} color={Colors.Blue} onClick={onDelete}/>\r\n)\r\n\r\nconst EditingOption = ( props ) => {\r\n\r\n  const { children, onDelete,\r\n          iconColor, fontColor, backgroundColor, borderColor,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  const extraIcons = [ deleteIcon(onDelete) ]\r\n\r\n  const childProps = { iconColor: iconColor, fontColor: fontColor,\r\n                       backgroundColor: backgroundColor, borderColor: borderColor,\r\n                       extraSmall: extraSmall, small: small, medium: medium,\r\n                       large: large, extraLarge: extraLarge,\r\n                       extraIcons: extraIcons, };\r\n\r\n  return (\r\n    <ComponentWrapper>\r\n      {React.Children.map (children, (child) => React.cloneElement(child, {...childProps}))}\r\n    </ComponentWrapper>\r\n  )\r\n};\r\n\r\nEditingOption.propTypes = propTypes;\r\nEditingOption.defaultProps = defaultProps;\r\n\r\nexport default EditingOption;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\n\r\nimport EditItem         from './EditItem';\r\nimport Button           from '../buttons/Button';\r\n\r\nimport Input            from '../inputs/Input';\r\n\r\nconst propTypes = {\r\n  id: PropTypes.string,\r\n  type: PropTypes.oneOf(['inputfield', 'textarea']),\r\n  value: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n\r\n  iconColor: ExtraPropTypes.color,\r\n  fontColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  type: 'inputfield',\r\n  iconColor: Colors.Blue,\r\n  fontColor: Colors.Black,\r\n};\r\n\r\n\r\nconst HostEditPollOptionItem = ( props ) => {\r\n\r\n  const { id, type, value, onChange, onDelete, ...rest } = props;\r\n\r\n  return (\r\n    <EditItem id={id} iconColor={Colors.Blue} onDelete={onDelete} {...rest}>\r\n      <Input type={type} value={value} onChange={onChange}/>\r\n    </EditItem>\r\n  )\r\n}\r\n\r\nHostEditPollOptionItem.propTypes = propTypes;\r\nHostEditPollOptionItem.defaultProps = defaultProps;\r\n\r\nexport default HostEditPollOptionItem;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body             from '../theme/Body';\r\n\r\nimport TextOption       from '../options/TextOption';\r\nimport InputOption      from '../options/InputOption';\r\nimport AdderOption      from '../options/AdderOption';\r\nimport Option           from '../options/Option';\r\nimport Button           from '../buttons/Button';\r\nimport Input            from '../inputs/Input';\r\nimport InputField       from '../inputs/InputField';\r\nimport TextArea         from '../inputs/TextArea';\r\nimport EditingOption    from '../options/EditingOption';\r\nimport TertiaryCard      from '../format-cards/TertiaryCard';\r\nimport EditButton       from '../buttons/EditButton';\r\nimport EditingGroup     from '../groups/EditingGroup';\r\nimport AddItem          from '../items/AddItem';\r\nimport EditItem          from '../items/EditItem';\r\nimport HostEditPollOptionItem from '../items/HostEditPollOptionItem'\r\n\r\nconst propTypes = {\r\n  pollData: PropTypes.object,\r\n\r\n  onTitleChange: PropTypes.func,\r\n  onDescriptionChange: PropTypes.func,\r\n  onOptionChange: PropTypes.func,\r\n\r\n  onEditClick: PropTypes.func,\r\n  onAddClick: PropTypes.func,\r\n  onDragEnd : PropTypes.func,\r\n\r\n  iconColor: ExtraPropTypes.color,\r\n  fontColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n};\r\n\r\n\r\nconst Header = ( props ) => (\r\n  <Input label={'Title'} type={'inputfield'}\r\n         value={props.title} fontColor={Colors.Charcol}\r\n         onChange={props.onChange}\r\n         {...props.size}/>\r\n)\r\n\r\nconst HeaderButton = (props) => (\r\n  <EditButton type={'save'} color={Colors.Blue} onClick={props.onClick} {...props.size}/>\r\n)\r\n\r\nconst Description = ( props ) => (\r\n  <Input label={'Description'} type={'textarea'}\r\n         value={props.description} fontColor={Colors.Charcol}\r\n         onChange={props.onChange}\r\n         {...props.size}/>\r\n)\r\n\r\nconst AddComponent = ( props ) => {\r\n  return (\r\n    <AddItem onClick={props.onAddClick} textColor={Colors.Blue} iconColor={Colors.Blue} {...props.size}>\r\n      Add new option\r\n    </AddItem>\r\n  )\r\n}\r\n\r\nconst EditPollCard = ( props ) => {\r\n\r\n  const { pollData, onEditClick, onAddClick, onDeleteClick, onDragEnd,\r\n          onTitleChange, onDescriptionChange, onOptionChange, ...rest } = props;\r\n\r\n  const { title, description } = pollData;\r\n\r\n  const size = {\r\n    extraSmall: props.extraSmall,\r\n    small: props.small,\r\n    medium: props.medium,\r\n    large: props.large,\r\n    extraLarge: props.extraLarge\r\n  }\r\n\r\n\r\n  const renderOptionGroup = () => {\r\n    let optionsOrder = pollData.optionsOrder || [];\r\n\r\n    const optionComponents = optionsOrder.map(id => {\r\n\r\n      return(\r\n          <HostEditPollOptionItem id={id} type={'inputfield'}\r\n                                  value={pollData.options[id].value}\r\n                                  onChange={(event) => onOptionChange(id, event)}\r\n                                  onDelete={() => onDeleteClick(id)}\r\n                                  fontColor={Colors.Charcol}\r\n                                  iconColor={Colors.Blue}\r\n                                  {...size}/>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <EditingGroup order={pollData.optionsOrder}\r\n                    addItem={<AddComponent onAddClick={onAddClick} size={size}/>}\r\n                    onDragEnd={onDragEnd}\r\n                    handleColor={Colors.Blue} {...rest}>\r\n        {optionComponents}\r\n      </EditingGroup>\r\n    );\r\n  }\r\n\r\n  const sections = [{content: <Description description={description} onChange={onDescriptionChange} size={size}/>},\r\n                    {content: renderOptionGroup()}]\r\n\r\n  return (\r\n    <TertiaryCard {...rest}\r\n                   width={'100%'}\r\n                   height={size.extraSmall ? `100%` : `stretch`}\r\n                   cardColor={Colors.White}\r\n                   headerComponent={<Header onChange={onTitleChange} title={title} size={size}/>}\r\n                   headerButton={<HeaderButton onClick={onEditClick}  size={size}/>}\r\n                   sections={sections} />\r\n  )\r\n};\r\n\r\nexport default EditPollCard;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body             from '../theme/Body';\r\n\r\nimport Card             from './Card';\r\nimport TextOption       from '../options/TextOption';\r\nimport Group            from '../groups/Group';\r\nimport OptionGroup      from '../option-groups/OptionGroup';\r\n\r\nconst propTypes = {\r\n  pollType: PropTypes.string,\r\n  showResults: PropTypes.bool,\r\n  userInputOption: PropTypes.bool,\r\n\r\n  updateSettings: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n\r\n};\r\n\r\nconst HeadingWrapper = styled.div`\r\n`;\r\n\r\nconst SectionWrapper = styled.div`\r\n  padding-top: 15px;\r\n`;\r\n\r\nconst HorizontalContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between\r\n`;\r\n\r\nconst SectionHeadingWrapper = styled.div`\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst PanelHeader = ( props ) => {\r\n\r\n  return (\r\n    <HeadingWrapper>\r\n      <Jumbo fiveExtraSmall={props.extraSmall} fourExtraSmall={props.small}\r\n             threeExtraSmall={props.medium} twoExtraSmall={props.large}\r\n             extraSmall={props.extraLarge} color={Colors.Blue}>\r\n        SETTINGS\r\n      </Jumbo>\r\n    </HeadingWrapper>\r\n  )\r\n}\r\n\r\nconst PanelSection = ( props ) => {\r\n\r\n  const { title, children, size, ...rest } = props;\r\n\r\n  return (\r\n    <SectionWrapper>\r\n      <SectionHeadingWrapper>\r\n        <Body {...size} color={Colors.Blue}>\r\n          {title}\r\n        </Body>\r\n      </SectionHeadingWrapper>\r\n      {children}\r\n    </SectionWrapper>\r\n  )\r\n}\r\n\r\nconst PanelContent = ( props ) => {\r\n\r\n  return props.extraSmall ?\r\n    <HorizontalContentWrapper>\r\n      {props.children}\r\n    </HorizontalContentWrapper> : props.children;\r\n}\r\n\r\nclass HostEditPanelCard extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state = {\r\n      typeSelection: {\r\n        '0': props.pollType === 'single',\r\n        '1': props.pollType === 'multiple'\r\n      },\r\n      otherSelection: {\r\n        '0': props.showResults || false,\r\n        '1': props.userInputOption || false,\r\n      }\r\n    }\r\n\r\n    this.updateSettings = this.updateSettings.bind(this)\r\n    this.onTypeClick = this.onTypeClick.bind(this);\r\n    this.onOtherClick = this.onOtherClick.bind(this);\r\n  }\r\n\r\n  updateSettings = () => {\r\n    const type = this.state.typeSelection['0'] ? 'single' : 'multiple';\r\n    const showResults = this.state.otherSelection['0'];\r\n    const userInputOption = this.state.otherSelection['1'];\r\n\r\n    console.log(this.state)\r\n    this.props.updateSettings && this.props.updateSettings({type, showResults, userInputOption})\r\n  }\r\n\r\n  async onTypeClick(id) {\r\n    if (!this.state.typeSelection[id]) {\r\n      await this.setState({\r\n        ...this.state,\r\n        typeSelection: {\r\n          '0': id === '0',\r\n          '1': id === '1'\r\n        }\r\n      })\r\n    }\r\n\r\n    this.updateSettings();\r\n  }\r\n\r\n  async onOtherClick( selection ) {\r\n    await this.setState({\r\n      ...this.state,\r\n      otherSelection: selection\r\n    })\r\n\r\n    this.updateSettings();\r\n  }\r\n\r\n  render () {\r\n    const size = {\r\n      extraSmall: this.props.extraSmall,\r\n      small: this.props.small,\r\n      medium: this.props.medium,\r\n      large: this.props.large,\r\n      extraLarge: this.props.extraLarge\r\n    }\r\n\r\n    return (\r\n      <Card borderMedium>\r\n        <PanelHeader {...size}/>\r\n        <PanelContent {...size}>\r\n          <PanelSection title={'POLL TYPE'} size={size}>\r\n            <Group {...size}>\r\n              <TextOption id={'0'} iconType={'bubble'} iconColor={Colors.Blue}\r\n                          clicked={this.state.typeSelection['0']} onClick={() => this.onTypeClick('0')}>\r\n                Single choice\r\n              </TextOption>\r\n              <TextOption id={'1'} iconType={'bubble'} iconColor={Colors.Blue}\r\n                          clicked={this.state.typeSelection['1']} onClick={() => this.onTypeClick('1')}>\r\n                Multiple choice\r\n              </TextOption>\r\n            </Group>\r\n          </PanelSection>\r\n          <PanelSection title={'OTHER'} size={size}>\r\n            <OptionGroup type={'multiple'}\r\n                         selectedOptions={this.state.otherSelection}\r\n                         onSelect={this.onOtherClick}\r\n                         {...size}>\r\n              <TextOption id={'0'}>\r\n                Display results\r\n              </TextOption>\r\n              <TextOption id={'1'}>\r\n                Input option\r\n              </TextOption>\r\n            </OptionGroup>\r\n          </PanelSection>\r\n        </PanelContent>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nHostEditPanelCard.propTypes = propTypes;\r\nHostEditPanelCard.defaultProps = defaultProps;\r\n\r\nexport default HostEditPanelCard;\r\n","import React, { useEffect }                from 'react';\r\nimport styled               from 'styled-components';\r\n\r\nimport { connect }          from 'react-redux';\r\nimport ActionTypes          from '../store/actionTypes';\r\nimport history              from '../history';\r\n\r\nimport { Colors }           from '../components/theme/Colors';\r\nimport ViewportHandler      from './format-pages/ViewportHandler';\r\nimport SideBarPage          from './format-pages/SideBarPage';\r\n\r\nimport HostPollCard         from '../components/cards/HostPollCard';\r\nimport EditPollCard         from '../components/cards/EditPollCard';\r\nimport HostStatusCard       from '../components/cards/HostStatusCard'\r\nimport HostEditPanelCard    from '../components/cards/HostEditPanelCard';\r\n\r\nconst getSize = (viewport) => {\r\n\r\n  let size = {};\r\n  switch (viewport) {\r\n    case 'mobile':\r\n    case 'smallMobile':\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'hdDesktop':\r\n    case 'uhdDesktop':\r\n      size.medium = true;\r\n      break;\r\n    default:\r\n      size.small = true;\r\n  }\r\n\r\n  return size;\r\n}\r\n\r\nconst SideBarComponent = ( props ) => {\r\n\r\n  const size = getSize(props.viewport)\r\n  console.log(size)\r\n\r\n  return ( props.editing ?\r\n    <HostEditPanelCard pollType={props.pollType}\r\n                       userInputOption={props.userInputOption}\r\n                       showResults={props.showResults}\r\n                       updateSettings={props.updateSettings}\r\n                       {...size}\r\n                       /> :\r\n    <HostStatusCard pollStatus={props.pollStatus}\r\n                    headerColor={Colors.Blue}\r\n                    onStatusClick={props.onStatusClick}\r\n                    {...size}/>\r\n  )\r\n}\r\n\r\nconst PollComponent = ( props ) => {\r\n\r\n  const size = getSize(props.viewport)\r\n  console.log(props);\r\n  console.log(size)\r\n\r\n  return props.editing ?\r\n    <EditPollCard pollData={props.pollData}\r\n                  onEditClick={props.onEditClick}\r\n                  onAddClick={props.onAddClick}\r\n                  onDeleteClick={props.onDeleteClick}\r\n                  onDragEnd={props.onDragEnd}\r\n                  onTitleChange={props.onTitleChange}\r\n                  onDescriptionChange={props.onDescriptionChange}\r\n                  onOptionChange={props.onOptionChange}\r\n                  {...size} /> :\r\n    <HostPollCard pollData={props.pollData}\r\n                  onEditClick={props.onEditClick}\r\n                  {...size} />\r\n\r\n}\r\n\r\nconst HostPollPage = ( props ) => {\r\n\r\n  const roomcode = props.match.params.roomcode || '0000';\r\n  const pollcode = props.match.params.pollcode || '00';\r\n\r\n  useEffect(() =>  {\r\n    console.log(props.location.state);\r\n    props.onFetchPoll(roomcode, pollcode, props.location.state);\r\n  }, [])\r\n\r\n\r\n  if (props.poll.status === 'closed') {\r\n    history.replace(`/PollResults/${roomcode}/${pollcode}`);\r\n  }\r\n\r\n  // let isEditing = (props.location.state && props.location.state.editing)\r\n  //\r\n  // const onEditClick = () => {\r\n  //   props.onToggleEdit(roomcode, pollcode);\r\n  //   console.log('her')\r\n  //   isEditing = props.editing;\r\n  //   console.log(props.editing)\r\n  // }\r\n\r\n  const sideContent = (\r\n    <SideBarComponent editing={props.editing}\r\n                      pollType={props.poll.type}\r\n                      pollStatus={props.poll.status}\r\n                      userInputOption={props.poll.userInputOption}\r\n                      showResults={props.poll.showResults}\r\n                      updateSettings={props.onUpdateSettings}\r\n                      onStatusClick={(newStatus) => props.onUpdateStatus(roomcode, pollcode, newStatus)}/>\r\n  )\r\n\r\n  // props.editing ?\r\n  //   <HostEditPanelCard pollType={props.poll.type}\r\n  //                      userInputOption={props.poll.userInputOption}\r\n  //                      showResults={props.poll.showResults}\r\n  //                      updateSettings={props.onUpdateSettings}\r\n  //                      medium\r\n  //                      /> :\r\n  //   <HostStatusCard pollStatus={props.poll.status}\r\n  //                   headerColor={Colors.Blue}\r\n  //                   onStatusClick={(newStatus) => props.onUpdateStatus(roomcode, pollcode, newStatus)}\r\n  //                   medium/>\r\n\r\n  return (\r\n    <ViewportHandler>\r\n      <SideBarPage sideContent={sideContent}>\r\n        <PollComponent editing={props.editing}\r\n                       pollData={props.poll}\r\n                       onEditClick={() => props.onToggleEdit(roomcode, pollcode)}\r\n                       onAddClick={props.onAddOption}\r\n                       onDeleteClick={props.onDeleteOption}\r\n                       onDragEnd={props.onUpdateOrder}\r\n                       onTitleChange={props.onUpdateTitle}\r\n                       onDescriptionChange={props.onUpdateDescription}\r\n                       onOptionChange={props.onUpdateOption}/>\r\n      </SideBarPage>\r\n    </ViewportHandler>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    poll: state.hostpoll.poll,\r\n    editing: state.hostpoll.editing,\r\n    loading: state.hostpoll.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchPoll: (room_id, poll_id, location_state ) => dispatch({ type: ActionTypes.hostpoll.FETCH_POLL_START,\r\n                                                                    room_id, poll_id, location_state }),\r\n    onToggleEdit: (room_id, poll_id ) => { dispatch({ type: ActionTypes.hostpoll.TOGGLE_EDIT});\r\n                                           dispatch({ type: ActionTypes.hostpoll.UPDATE_POLL_START,\r\n                                           room_id, poll_id })},\r\n    onAddOption: () => dispatch({ type: ActionTypes.hostpoll.ADD_POLL, }),\r\n    onDeleteOption: (option_id) => dispatch({ type: ActionTypes.hostpoll.DELETE_POLL,\r\n                                            option_id }),\r\n    onUpdateOrder: (order) => dispatch({ type: ActionTypes.hostpoll.UPDATE_ORDER,\r\n                                            order }),\r\n    onUpdateOption: (option_id, event) => dispatch({ type: ActionTypes.hostpoll.UPDATE_OPTION,\r\n                                            option_id, event }),\r\n    onUpdateTitle: (event) => dispatch({ type: ActionTypes.hostpoll.UPDATE_TITLE,\r\n                                          event }),\r\n    onUpdateDescription: (event) => dispatch({ type: ActionTypes.hostpoll.UPDATE_DESCRIPTION,\r\n                                               event }),\r\n    onUpdateSettings: (settings) => dispatch({ type:ActionTypes.hostpoll.UPDATE_SETTINGS,\r\n                                               settings }),\r\n    onUpdateStatus: (room_id, poll_id, status) => dispatch({ type:ActionTypes.hostpoll.UPDATE_POLL_STATUS_START,\r\n                                                               room_id, poll_id, status }),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HostPollPage);\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body            from '../theme/Body';\r\n\r\nimport TertiaryCard      from '../format-cards/TertiaryCard';\r\nimport OptionGroup      from '../option-groups/OptionGroup';\r\nimport TextOption       from '../options/TextOption';\r\nimport InputOption       from '../options/InputOption';\r\nimport VotingOption       from '../options/VotingOption';\r\nimport EditButton       from '../buttons/EditButton';\r\nimport SubmitButton     from '../buttons/SubmitButton';\r\n\r\n\r\nconst UserPollCard = ( props ) => {\r\n\r\n  const { pollData, userInput, submittedOptions, onOptionChange,\r\n          onSubmit, submissionStatus, onInputChange,\r\n          submitLoading,\r\n          ...rest } = props;\r\n\r\n  const _description = (\r\n    <Body color={Colors.Charcol}>\r\n      {pollData.description}\r\n    </Body>\r\n  )\r\n\r\n  const _renderOptionGroup = () => {\r\n    const optionComponents = pollData.optionsOrder.map(id => {\r\n\r\n      const submitted = submittedOptions[id];\r\n\r\n      return (\r\n        <VotingOption id={id} submitted={submitted}>\r\n          <TextOption>\r\n            {pollData.options[id].value}\r\n          </TextOption>\r\n        </VotingOption>\r\n      )\r\n    });\r\n\r\n    if ( pollData.userInputOption ) {\r\n      console.log(userInput.id)\r\n      const submitted = submittedOptions[userInput.id];\r\n      optionComponents.push(\r\n        <VotingOption id={userInput.id} submitted={submitted}>\r\n          <InputOption value={userInput.value} onChange={onInputChange}/>\r\n        </VotingOption>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <OptionGroup type={pollData.type} fontColor={Colors.Black}\r\n                   onSelect={onOptionChange} {...rest}>\r\n        {optionComponents}\r\n      </OptionGroup>\r\n    );\r\n  }\r\n\r\n  let submitButtonStatus = submissionStatus;\r\n  if ( pollData.status === 'pending' ) { submitButtonStatus = 'pollpending'}\r\n  else if (submitLoading) { submitButtonStatus = 'submitloading'}\r\n\r\n  const _submitButton = (\r\n    <SubmitButton submissionStatus={submitButtonStatus}\r\n                  onClick={onSubmit} {...rest}/>\r\n  )\r\n\r\n  const sections = [{content: _description},\r\n                    {content: _renderOptionGroup()}]\r\n\r\n  return (\r\n    <TertiaryCard {...rest} width={`100%`} cardColor={Colors.White}\r\n                   header={pollData.title} headerColor={Colors.Blue}\r\n                   sections={sections} footer={_submitButton}/>\r\n  )\r\n};\r\n\r\nexport default UserPollCard;\r\n","import React, { useEffect }                from 'react';\r\nimport styled               from 'styled-components';\r\n\r\nimport { connect }          from 'react-redux';\r\nimport ActionTypes          from '../store/actionTypes';\r\n\r\nimport { Colors }           from '../components/theme/Colors';\r\nimport ViewportHandler      from './format-pages/ViewportHandler';\r\nimport MainPage             from './format-pages/MainPage';\r\n\r\nimport UserPollCard         from '../components/cards/UserPollCard';\r\n\r\n\r\nconst getSize = (viewport) => {\r\n\r\n  let size = {};\r\n  switch (viewport) {\r\n    case 'mobile':\r\n    case 'smallMobile':\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'hdDesktop':\r\n    case 'uhdDesktop':\r\n      size.medium = true;\r\n      break;\r\n    default:\r\n      size.small = true;\r\n  }\r\n\r\n  return size;\r\n}\r\n\r\nconst PollComponent = ( props ) => {\r\n\r\n  const size = getSize(props.viewport);\r\n\r\n  return (\r\n    <UserPollCard pollData={props.pollData}\r\n                  userInput={props.userInput}\r\n                  onOptionChange={props.onOptionChange}\r\n                  onInputChange={props.onInputChange}\r\n                  onSubmit={props.onSubmit}\r\n                  submittedOptions={props.submittedOptions}\r\n                  submissionStatus={props.submissionStatus}\r\n                  submitLoading={props.submitLoading}\r\n                  {...size} />\r\n  )\r\n}\r\n\r\nconst UserPollPage = ( props ) => {\r\n\r\n  const roomcode = props.match.params.roomcode || '0000';\r\n  const pollcode = props.match.params.pollcode || '00';\r\n\r\n  useEffect(() =>  {\r\n    props.onFetchPoll(roomcode, pollcode);\r\n  }, [])\r\n\r\n  return (\r\n    <MainPage>\r\n      <ViewportHandler>\r\n        <PollComponent pollData={props.poll}\r\n                       userInput={props.userInput}\r\n                       onOptionChange={props.onOptionChange}\r\n                       onInputChange={props.onInputChange}\r\n                       onSubmit={() => props.onSubmit(roomcode, pollcode)}\r\n                       submittedOptions={props.submission}\r\n                       submissionStatus={props.submissionStatus}\r\n                       submitLoading={props.submitLoading}/>\r\n      </ViewportHandler>\r\n    </MainPage>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    poll: state.userpoll.poll,\r\n    userInput: state.userpoll.userInput,\r\n    selection: state.userpoll.pollStatus.selection,\r\n    submission: state.userpoll.pollStatus.submission,\r\n    submissionStatus: state.userpoll.pollStatus.submitStatus,\r\n    submitloading: state.userpoll.submitLoading,\r\n    loading: state.userpoll.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchPoll: (room_id, poll_id ) => dispatch({ type: ActionTypes.userpoll.FETCH_POLL_START,\r\n                                                   room_id, poll_id }),\r\n    onOptionChange: (selection) => dispatch({ type: ActionTypes.userpoll.UPDATE_SELECTION,\r\n                                              selection}),\r\n    onSubmit: (room_id, poll_id) => dispatch({ type: ActionTypes.userpoll.SUBMIT_VOTE_START,\r\n                                                room_id, poll_id }),\r\n    onInputChange: (event) => dispatch({ type: ActionTypes.userpoll.UPDATE_INPUT,\r\n                                         event}),\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPollPage);\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body             from '../theme/Body';\r\n\r\nimport {HorizontalBar} from 'react-chartjs-2';\r\nimport 'chartjs-plugin-datalabels';\r\n\r\n\r\nconst BarChart = (props) => {\r\n  const { dataLabels, dataValues} = props;\r\n\r\n  const data = {\r\n    labels: dataLabels,\r\n    datasets: [\r\n      {\r\n        label: 'Responses',\r\n        showLabel: false,\r\n        backgroundColor: Colors.Blue,\r\n        borderColor: Colors.Blue,\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: Colors.Blue,\r\n        hoverBorderColor: Colors.Blue,\r\n        data: dataValues,\r\n      }\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n            display: false\r\n         },\r\n     scales: {\r\n         xAxes: [{\r\n             ticks: {\r\n                 beginAtZero: true\r\n             }\r\n         }]\r\n     }\r\n  }\r\n\r\n  return (\r\n    <HorizontalBar data={data}\r\n                   options={options}\r\n                   height={50}/>\r\n  )\r\n}\r\n\r\nexport default BarChart;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body             from '../theme/Body';\r\n\r\nimport OptionGroup      from '../option-groups/OptionGroup';\r\nimport TextOption       from '../options/TextOption';\r\nimport InputOption      from '../options/InputOption';\r\nimport AdderOption      from '../options/AdderOption';\r\nimport Option           from '../options/Option';\r\nimport Button           from '../buttons/Button';\r\nimport Input            from '../inputs/Input';\r\nimport InputField       from '../inputs/InputField';\r\nimport TextArea         from '../inputs/TextArea';\r\nimport EditingOption    from '../options/EditingOption';\r\nimport PrimaryCard      from '../format-cards/PrimaryCard';\r\n\r\nimport PieChart    from '../charts/PieChart';\r\nimport BarChart    from '../charts/BarChart';\r\n\r\nimport Pdf from \"react-to-pdf\";\r\n\r\nconst ChildWrapper = styled.div`\r\n  padding-top: 20px;\r\n`;\r\n\r\nconst LeftColumnWrapper = styled.div`\r\n  width: 30%;\r\n`;\r\nconst TwoColumnWrapper = styled.div`\r\n  display: flex;\r\n  direction: row;\r\n  align-items: flex-start;\r\n`;\r\n\r\nconst ref = React.createRef();\r\n\r\nconst PDFPreviewCard = ( props ) => {\r\n\r\n  return (\r\n    <PrimaryCard cardColor={Colors.White} borderColor={Colors.Blue}\r\n                 width={`21cm`} header={props.header} children={props.children}/>\r\n  )\r\n};\r\n\r\nexport default PDFPreviewCard;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body             from '../theme/Body';\r\n\r\nimport OptionGroup      from '../option-groups/OptionGroup';\r\nimport TextOption       from '../options/TextOption';\r\nimport InputOption      from '../options/InputOption';\r\nimport AdderOption      from '../options/AdderOption';\r\nimport Option           from '../options/Option';\r\nimport Button           from '../buttons/Button';\r\nimport Input            from '../inputs/Input';\r\nimport InputField       from '../inputs/InputField';\r\nimport TextArea         from '../inputs/TextArea';\r\nimport EditingOption    from '../options/EditingOption';\r\nimport PrimaryCard      from '../format-cards/PrimaryCard';\r\nimport PDFPreviewCard      from './PDFPreviewCard';\r\n\r\nimport PieChart    from '../charts/PieChart';\r\nimport BarChart    from '../charts/BarChart';\r\n\r\nimport Pdf from \"react-to-pdf\";\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst ref = React.createRef();\r\n\r\n\r\nconst HiddenWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: 20000px;\r\n`;\r\n\r\nconst PollResultsCard = ( props ) => {\r\n\r\n  const { pollResults } = props;\r\n\r\n  // Array of arrays. Each item is rendered as a CSV line\r\n  const data = [\r\n    [\"firstname\", \"lastname\", \"email\"],\r\n    [\"Ahmed\", \"Tomi\", \"ah@smthing.co.com\"],\r\n    [\"Raed\", \"Labes\", \"rl@smthing.co.com\"],\r\n    [\"Yezzi\", \"Min l3b\", \"ymin@cocococo.com\"]\r\n  ];\r\n\r\n  const _header = (\r\n    <Jumbo extraSmall color={Colors.Blue}>\r\n      {pollResults.title}\r\n    </Jumbo>\r\n  )\r\n\r\n  const _toPDFButton = (\r\n    <Button>\r\n    <CSVLink data={data}>\r\n      Download me\r\n    </CSVLink>\r\n    </Button>\r\n  )\r\n\r\n  const _description = (\r\n    <Body small color={Colors.Charcol}>\r\n      {pollResults.description}\r\n    </Body>\r\n  )\r\n\r\n\r\n  const _chart = (\r\n    <BarChart dataLabels={pollResults.optionsOrder.map(id => pollResults.options[id].value)}\r\n              dataValues={pollResults.optionsOrder.map(id => pollResults.results[id].count)}/>\r\n  )\r\n\r\n  const _children = (\r\n    <>\r\n      {_description}\r\n      {_chart}\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <PrimaryCard cardColor={Colors.White} width={`100%`}\r\n                 header={_header} children={_children}/>\r\n  )\r\n};\r\n\r\nexport default PollResultsCard;\r\n","import React, { useEffect }                from 'react';\r\nimport styled               from 'styled-components';\r\nimport ReactDOMServer       from \"react-dom/server\";\r\n\r\n\r\nimport { connect }          from 'react-redux';\r\nimport ActionTypes          from '../store/actionTypes';\r\n\r\nimport { Colors }           from '../components/theme/Colors';\r\nimport MainPage             from './format-pages/MainPage';\r\n\r\nimport PollResultsCard         from '../components/cards/PollResultsCard';\r\n\r\n\r\nconst PollResultsPage = ( props ) => {\r\n\r\n  const roomcode = props.match.params.roomcode || '0000';\r\n  const pollcode = props.match.params.pollcode || '00';\r\n\r\n  useEffect(() =>  {\r\n    props.onFetchResults(roomcode, pollcode);\r\n  }, [])\r\n\r\n  return (\r\n    <MainPage>\r\n      <PollResultsCard pollResults={props.pollResults} toPDF={props.toPDF}/>\r\n    </MainPage>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    pollResults: state.pollresults.pollResults,\r\n    loading: state.pollresults.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchResults: (room_id, poll_id ) => dispatch({ type: ActionTypes.pollresults.FETCH_RESULTS_START,\r\n                                                   room_id, poll_id }),\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PollResultsPage);\r\n","const formatResultsAsCSV = (roomResults) => {\r\n  var csv = [\r\n    ['Poll Title', 'Options', 'Number of Votes']\r\n  ]\r\n\r\n  roomResults.order.forEach((poll_id) => {\r\n    let pollResults = roomResults.allResults[poll_id];\r\n    let options = pollResults.optionsOrder.map(id => pollResults.options[id].value);\r\n    let numVotes = pollResults.optionsOrder.map(id => pollResults.results[id].count);\r\n\r\n    for (var i = 0; i < options.length; i++) {\r\n      var row;\r\n      if (i == 0) {\r\n        csv.push([pollResults.title, options[i], numVotes[i]]);\r\n      } else {\r\n        csv.push([\"\", options[i], numVotes[i]]);\r\n      }\r\n    }\r\n  })\r\n\r\n  return csv\r\n}\r\n\r\nexport  { formatResultsAsCSV };\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body             from '../theme/Body';\r\n\r\nimport OptionGroup      from '../option-groups/OptionGroup';\r\nimport TextOption       from '../options/TextOption';\r\nimport InputOption      from '../options/InputOption';\r\nimport AdderOption      from '../options/AdderOption';\r\nimport Option           from '../options/Option';\r\nimport Button           from '../buttons/Button';\r\nimport Input            from '../inputs/Input';\r\nimport InputField       from '../inputs/InputField';\r\nimport TextArea         from '../inputs/TextArea';\r\nimport EditingOption    from '../options/EditingOption';\r\nimport PrimaryCard      from '../format-cards/PrimaryCard';\r\nimport PDFPreviewCard      from './PDFPreviewCard';\r\n\r\nimport PieChart    from '../charts/PieChart';\r\nimport BarChart    from '../charts/BarChart';\r\n\r\nimport Pdf from \"react-to-pdf\";\r\nimport { CSVLink } from \"react-csv\";\r\nimport { formatResultsAsCSV } from '../../csv/csvFunctions.js';\r\n\r\n// import { fetchAgenda, getPollResults } from '../../store/MockDataFunctions'\r\n\r\nconst ref = React.createRef();\r\n\r\nconst HiddenWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: 20000px;\r\n`;\r\n\r\nconst csvLinkStyle  = {\r\n  // fontSize: 14,\r\n  // fontWeight: 500,\r\n  height: 52,\r\n  'text-decoration': 'none',\r\n  padding: '0 48px',\r\n  borderRadius: 5,\r\n  color: Colors.White,\r\n};\r\n\r\nconst RoomResultsCard = ( props ) => {\r\n\r\n  // const { room } = props;\r\n  // const roomcode = '0000'\r\n  // const room = fetchAgenda(roomcode);\r\n\r\n\r\n  const _header = (\r\n    <Jumbo extraSmall color={Colors.Blue}>\r\n      {props.roomResults.title}\r\n    </Jumbo>\r\n  )\r\n\r\n\r\n  const filename = props.roomResults.title + \".csv\"\r\n  const _toPDFButton = (\r\n    <Button backgroundColor={Colors.Blue}>\r\n      <CSVLink data={formatResultsAsCSV(props.roomResults)} style={csvLinkStyle} filename={filename}>\r\n        Export CSV\r\n      </CSVLink>\r\n    </Button>\r\n  )\r\n\r\n  const _renderCharts = () =>  {\r\n    // console.log(room);\r\n    // console.log(roomcode);\r\n    // console.log(room.order['closed'])\r\n    var chartComponents = props.roomResults.order.map((poll_id) => {\r\n      // var pollResults = getPollResults(roomcode, poll_id)\r\n\r\n    const pollResults = props.roomResults.allResults[poll_id]\r\n    console.log(pollResults)\r\n\r\n      return (\r\n        <>\r\n          <Body medium>\r\n            {pollResults.title}\r\n          </Body>\r\n          <BarChart dataLabels={pollResults.optionsOrder.map(id => pollResults.options[id].value)}\r\n                    dataValues={pollResults.optionsOrder.map(id => pollResults.results[id].count)} />\r\n        </>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <>\r\n        {chartComponents}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const MyPDF = React.forwardRef((props, ref) => (\r\n    <div ref={ref}>\r\n      <PDFPreviewCard header={props.header} children={props.children} />\r\n    </div>\r\n  ));\r\n\r\n  const _pdfChildren = (\r\n    <>\r\n      {_renderCharts()}\r\n    </>\r\n  )\r\n\r\n  const _children = (\r\n    <>\r\n      {_renderCharts()}\r\n      <HiddenWrapper>\r\n        {<MyPDF ref={ref} header={_header} children={_pdfChildren} />}\r\n      </HiddenWrapper>\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <PrimaryCard cardColor={Colors.White} width={`100%`}\r\n                 header={_header} headerButton={_toPDFButton}\r\n                 children={_children}/>\r\n  )\r\n};\r\n\r\nexport default RoomResultsCard;\r\n","import React, { useEffect }                from 'react';\r\nimport styled               from 'styled-components';\r\n\r\nimport { connect }          from 'react-redux';\r\nimport ActionTypes          from '../store/actionTypes';\r\n\r\nimport { Colors }           from '../components/theme/Colors';\r\nimport MainPage             from './format-pages/MainPage';\r\n\r\nimport RoomResultsCard         from '../components/cards/RoomResultsCard';\r\n\r\nconst PollResultsPage = ( props ) => {\r\n\r\n  const roomcode = props.match.params.roomcode || '0000';\r\n\r\n  useEffect(() =>  {\r\n    props.onFetchResults(roomcode);\r\n  }, [])\r\n\r\n  console.log(props);\r\n\r\n  return (\r\n    <MainPage>\r\n      <RoomResultsCard roomResults={props.roomResults}/>\r\n    </MainPage>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    roomResults: state.roomresults.roomResults,\r\n    loading: state.roomresults.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchResults: (room_id) => dispatch({ type: ActionTypes.roomresults.FETCH_RESULTS_START,\r\n                                            room_id }),\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PollResultsPage);\r\n","import React, { Component } from \"react\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Login       from \"./pages/Login\"\r\nimport HostDash    from './pages/HostDash'\r\nimport HostAgenda       from \"./pages/HostAgenda\"\r\nimport Roomcode from \"./pages/Roomcode\"\r\nimport UserAgenda    from './pages/UserAgenda'\r\nimport HostPoll       from \"./pages/HostPoll\"\r\nimport UserPoll    from './pages/UserPoll'\r\nimport PollResults from './pages/PollResults'\r\nimport RoomResults from './pages/RoomResults'\r\n\r\n\r\nimport history from './history';\r\n\r\nexport default class Routes extends Component {\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path=\"/Login\" exact component={Login}/>\r\n                    <Route path=\"/HostDash\" exact component={HostDash}/>\r\n                    <Route path='/Roomcode' exact component={Roomcode}/>\r\n                    <Route path=\"/HostAgenda/:roomcode\" exact component={HostAgenda}/>\r\n                    <Route path=\"/UserAgenda/:roomcode\" exact component={UserAgenda}/>\r\n                    <Route path=\"/HostPoll/:roomcode/:pollcode\" exact component={HostPoll}/>\r\n                    <Route path=\"/UserPoll/:roomcode/:pollcode\" exact component={UserPoll}/>\r\n                    <Route path=\"/PollResults/:roomcode/:pollcode\" exact component={PollResults}/>\r\n                    <Route path=\"/RoomResults/:roomcode\" exact component={RoomResults}/>\r\n                    <Route path=\"/:\" exact component={Login}/>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './store/reducers/index';\r\nimport { watcherSaga }    from './store/sagas/index';\r\n\r\nimport App from './App';\r\nimport Routes from './Routes';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(watcherSaga);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <div className=\"App\">\r\n        <App />\r\n        <Routes />\r\n      </div>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// ReactDOM.render(\r\n//     <Router>\r\n//       <div className=\"App\">\r\n//         <App />\r\n//         <Routes />\r\n//       </div>\r\n//     </Router>,\r\n//   document.getElementById('root')\r\n// );\r\n"],"sourceRoot":""}