{"version":3,"sources":["components/theme/logo.png","store/actionTypes.js","store/reducers/login.reducer.js","store/reducers/roomcode.reducer.js","store/reducers/hostdash.reducer.js","store/reducers/useragenda.reducer.js","store/reducers/hostagenda.reducer.js","store/reducers/userpoll.reducer.js","store/MockDataFunctions.js","store/reducers/hostpoll.reducer.js","store/reducers/pollresults.reducer.js","store/reducers/roomresults.reducer.js","store/reducers/index.js","databaseCommunication/permissions.js","LoginUtils.js","store/sagas/login.saga.js","databaseCommunication/roomFunctions.js","store/sagas/roomcode.saga.js","store/sagas/hostdash.saga.js","databaseCommunication/pollFunctions.js","store/sagas/useragenda.saga.js","store/sagas/hostagenda.saga.js","store/sagas/userpoll.saga.js","store/sagas/hostpoll.saga.js","store/sagas/pollresults.saga.js","store/sagas/roomresults.saga.js","store/sagas/index.js","history.js","components/theme/Breakpoints.js","pages/format-pages/ViewportHandler.js","components/theme/Colors.js","components/theme/Text.js","components/theme/Fonts.js","components/theme/Body.js","components/theme/Jumbo.js","components/theme/PageHeader.js","components/theme/PageFooter.js","pages/format-pages/BasePage.js","pages/format-pages/MainPage.js","components/buttons/Button.js","components/cards/Card.js","components/cards/LoginCard.js","pages/Login.js","App.js","pages/Loading.js","components/cards/LoadingCard.js","components/groups/Group.js","components/items/Item.js","components/items/HostRoomItem.js","components/theme/Icon.js","components/items/EditItem.js","components/items/AddItem.js","components/format-text/StatusText.js","components/format-cards/PrimaryCard.js","components/format-cards/SecondaryCard.js","components/format-cards/TertiaryCard.js","components/format-cards/StatusTertiaryCard.js","components/cards/HostDashCard.js","pages/HostDash.js","pages/format-pages/SideBarPage.js","components/items/AgendaItem.js","components/items/HostAgendaItem.js","components/buttons/EditButton.js","components/cards/HostAgendaCard.js","components/inputs/TextArea.js","components/inputs/InputField.js","components/inputs/Input.js","components/groups/DragItem.js","components/groups/DragGroup.js","components/groups/EditingGroup.js","components/items/HostEditAgendaItem.js","components/cards/HostEditAgendaCard.js","components/cards/HostStatusCard.js","pages/HostAgenda.js","components/cards/RoomcodeCard.js","pages/Roomcode.js","components/cards/UserAgendaCard.js","pages/UserAgenda.js","components/option-groups/OptionGroup.js","components/buttons/Bubble.js","components/buttons/CheckBox.js","components/options/OptionBase.js","components/options/Option.js","components/options/TextOption.js","components/options/InputOption.js","components/options/VotingOption.js","components/buttons/SubmitButton.js","components/cards/HostPollCard.js","components/options/AdderOption.js","components/options/EditingOption.js","components/items/HostEditPollOptionItem.js","components/cards/EditPollCard.js","components/cards/HostEditPanelCard.js","pages/HostPoll.js","components/cards/UserPollCard.js","pages/UserPoll.js","components/charts/BarChart.js","components/cards/PollResultsCard.js","pages/PollResults.js","components/buttons/CSVButton.js","csv/csvFunctions.js","components/cards/RoomResultsCard.js","pages/RoomResults.js","Routes.js","index.js"],"names":["module","exports","ActionTypes","login","HOST_LOGIN_START","HOST_LOGIN_SUCCESS","HOST_LOGIN_ERROR","USER_LOGIN_START","USER_LOGIN_SUCCESS","USER_LOGIN_ERROR","LOGOUT_START","LOGOUT_SUCCESS","LOGOUT_ERROR","roomcode","UPDATE_ROOMCODE","CHECK_ROOMCODE_START","CHECK_ROOMCODE_SUCCESS","CHECK_ROOMCODE_ERROR","RESET_ROOMCODE","hostdash","FETCH_ROOMS_START","FETCH_ROOMS_SUCCESS","FETCH_ROOMS_ERROR","DELETE_ROOM_START","DELETE_ROOM_SUCCESS","DELETE_ROOM_ERROR","ADD_ROOM_START","ADD_ROOM_SUCCESS","ADD_ROOM_ERROR","useragenda","FETCH_AGENDA_START","FETCH_AGENDA_SUCCESS","FETCH_AGENDA_ERROR","hostagenda","UPDATE_AGENDA_START","UPDATE_AGENDA_SUCCESS","UPDATE_AGENDA_ERROR","ADD_POLL_START","ADD_POLL_SUCCESS","ADD_POLL_ERROR","TOGGLE_EDIT","UPDATE_TITLE","DELETE_POLL","UPDATE_ORDER","UPDATE_POLL_STATUS_START","UPDATE_POLL_STATUS_SUCCESS","UPDATE_POLL_STATUS_ERROR","UPDATE_ROOM_STATUS_START","UPDATE_ROOM_STATUS_SUCCESS","UPDATE_ROOM_STATUS_ERROR","userpoll","FETCH_POLL_START","FETCH_POLL_SUCCESS","FETCH_POLL_ERROR","UPDATE_SELECTION","SUBMIT_VOTE_START","SUBMIT_VOTE_SUCCESS","SUBMIT_VOTE_ERROR","UPDATE_SUBMISSION_STATUS","UPDATE_INPUT","hostpoll","ADD_POLL","UPDATE_OPTION","UPDATE_DESCRIPTION","UPDATE_SETTINGS","UPDATE_POLL_START","UPDATE_POLL_SUCCESS","UPDATE_POLL_ERROR","pollresults","FETCH_RESULTS_START","FETCH_RESULTS_SUCCESS","FETCH_RESULTS_ERROR","roomresults","initialState","loginAttempt","loginType","loading","error","result","submitted","rooms","order","title","status","polls","newPolls","newOrder","editing","newState","poll","type","description","options","optionsOrder","userInputOption","userInput","id","value","submissionId","submissionValue","pollStatus","selection","submission","submitStatus","submitLoading","submissionStatus","state","selected","i","length","generateOptionId","Math","floor","random","slice","newOptions","newOptionsOrder","showResults","pollResults","roomResults","allResults","combineReducers","action","console","log","response","event","target","newPoll","newPending","map","push","poll_id","filter","newPendingOrder","inputSubmission","inputSubmissionId","location_state","option_id","undefined","optionType","settings","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fireauth","auth","firestore","signOutCurrentUser","a","signOut","then","catch","getCurrentUserEmail","email","currentUser","userLogin","provider","GoogleAuthProvider","setCustomParameters","signInWithPopup","credential","accessToken","user","errorCode","code","errorMessage","message","getUserId","userIsLoggedIn","split","userIsVoter","user_id","docRef","collection","doc","get","exists","userIsHostOfRoom","room_id","loginHost","loginUser","loginHandler","call","put","checkRoomcode","url","fetch","json","data","fetchHostRooms","host_id","deleteHostRoom","addHostRoom","uid","updateRoom","room_state","updateRoomStatus","new_status","getRoomResults","validateRoomcode","fetchRooms","deleteRoom","addRoom","fetchPollData","updatePoll","poll_state","fetchAgenda","addPoll","updatePollStatus","getPollResults","submitVote","fetchUserAgenda","fetchHostAgenda","updateHostAgenda","addRoomPoll","changePollStatus","changeRoomStatus","roomSelector","select","roomState","newStatus","fetchUserPoll","sendVote","pollSelector","currentPoll","fetchHostPoll","updateHostPoll","changePollStatusPoll","pollState","fetchPollResults","fetchRoomResults","watcherSaga","takeLatest","history","getViewport","windowWidth","Breakpoints","ViewportHandler","props","initView","window","innerWidth","viewport","handleResize","bind","e","this","setState","addEventListener","React","cloneElement","children","Component","defaultProps","Colors","TextWrapper","styled","span","color","fontSize","lineHeight","Text","primitive","rest","as","WebFont","load","google","families","Fonts","fontConfig","fontFamily","fontWeight","twoExtraSmall","extraSmall","small","medium","large","extraLarge","BodyWrapper","Body","sizeConfig","threeExtraLarge","twoExtraLarge","threeExtraSmall","fourExtraSmall","fiveExtraSmall","JumboComponent","Jumbo","Wrapper","div","PageHeader","src","logo","alt","height","PageFooter","PageWrapper","CenterWrapper","BasePageWrapper","ComponentWrapper","MainPage","BasePage","onClick","backgroundColor","textColor","BodyText","JumboText","ButtonComponent","button","disabled","padding","buttonConfig","buttonHeight","Button","config","jumbo","bodyText","jumboText","borderColor","CardComponent","borderRadius","width","borderWidth","paddingConfig","getPadding","size","borderSmall","borderMedium","borderLarge","Card","CenterRowWrapper","LoginWrapper","HostWrapper","LoginCard","onHostLogin","onUserLogin","_renderLogin","_renderHostLogin","LoginComponent","connect","dispatch","onLogout","alert","App","Login","ExtraPropTypes","PropTypes","string","bool","cardColor","cardBorderColor","GroupWrapper","ItemWrapper","lastChild","Group","Children","item","index","_renderOptions","ChildWrapper","ItemBase","text","renderChildren","HostRoomItem","roomTitle","roomCode","onViewClick","viewButton","roomCodeText","Item","Icon","baseSize","IconWrapper","EditItem","iconColor","onDelete","AddItem","statusConfig","pending","open","closed","StatusText","args","getSizeConfig","getStatusConfig","dotIcon","SectionWrapper","InnerWrapper","HeaderWrapper","HeaderTextWrapper","HeaderButtonWrapper","ScrollableWrapper","FooterWrapper","SecondaryCard","header","headerButton","footer","_renderHeader","_renderFooter","child","section","headerComponent","headerColor","renderHeader","PrimaryCard","sections","TertiaryCard","renderedSections","content","_renderSection","StatusTertiaryCard","renderSection","SectionGroup","onAdd","items","room","addItems","HostDashCard","statusList","sectionRooms","DashComponent","LoadingCard","onFetchRooms","onDeleteRoom","onAddRoom","useEffect","replace","roomStatus","SideBarWrapper","HorizontalSideBarWrapper","VerticalComponentWrapper","MainComponentWrapper","VerticalPage","mainComponent","sideContent","HorizontalPage","SideBarPage","AgendaItem","pollTitle","hostButton","onStatusClick","statusText","statusButtonConfig","HostAgendaItem","nextStatus","statusButton","ButtonWrapper","EditButton","HostAgendaCard","onEditClick","onStatusButtonClick","allPolls","concat","openPolls","pendingPolls","closedPolls","placeholder","fontColor","TextAreaComponent","textarea","placeholderColor","TextArea","InputFieldComponent","InputField","labelColor","LabelWrapper","Input","onChange","inputProps","component","label","DraggableItem","DragHandle","DragItem","handleColor","draggableId","provided","draggableProps","ref","innerRef","dragHandleProps","DropContainer","InnerList","nextProps","key","DragGroup","onDragEnd","destination","list","startIndex","endIndex","Array","from","splice","removed","reorder","source","droppableId","droppableProps","EditingGroup","awaitSetState","stateProps","prevProps","find","addItem","HostEditAgendaItem","buttonText","Header","HeaderButton","AddComponent","onAddClick","PendingSectionGroup","onDeleteClick","HostEditAgendaCard","onPollEditClick","onTitleChange","HeadingWrapper","SectionHeadingWrapper","HorizontalSectionWrapper","PanelHeader","StatusButton","disable","PanelSection","HostStatusCard","getSize","SideBarComponent","AgendaComponent","cardProps","onFetchAgenda","onUpdatePollStatus","onUpdateStatus","match","params","handleChange","handleSubmit","TextInputWrapper","TitleWrapper","Title","titlePadding","CodeInput","inputPadding","EnterButton","RoomCodeForm","RoomcodeWrapper","RoomcodeComponent","RoomcodeCard","updateCode","validateCode","resetCode","UserAgendaCard","OptionGroup","_handleClick","_handleClickMulti","_handleClickSngl","clicked","selectedOptions","iconType","itemProps","newSelected","onSelect","propTypes","func","Bubble","renderClicked","renderUnClicked","CheckBox","buttonColor","buttonType","ChildrenWrapper","IconButtonWrapper","ExtraIconWrapper","OptionWrapper","OptionBase","iconButton","extraIcons","renderExtraIcons","Option","bubble","add","checkbox","TextOption","InputOption","inputType","submitIcon","VotingOption","childProps","SubmitWrapper","unfilledInput","subText","submit","unselected","resubmit","pollpending","submitloading","SubmitButton","renderButton","renderText","HostPollCard","pollData","_editButton","_submitButton","optionComponents","_renderOptionGroup","AdderOption","deleteIcon","EditingOption","HostEditPollOptionItem","object","Description","EditPollCard","onDescriptionChange","onOptionChange","renderOptionGroup","HorizontalContentWrapper","PanelContent","HostEditPanelCard","updateSettings","typeSelection","otherSelection","pollType","onTypeClick","onOtherClick","PollComponent","onFetchPoll","onToggleEdit","onAddOption","onDeleteOption","onUpdateOrder","onUpdateOption","onUpdateTitle","onUpdateDescription","onUpdateSettings","pollcode","location","UserPollCard","submittedOptions","onSubmit","onInputChange","_description","submitButtonStatus","BarChart","dataLabels","dataValues","labels","datasets","showLabel","hoverBackgroundColor","hoverBorderColor","legend","display","scales","xAxes","ticks","beginAtZero","createRef","PollResultsCard","_chart","results","count","_children","ResultsComponent","onFetchResults","CSVButton","csvLinkStyle","table","style","filename","formatResultsAsCSV","csv","forEach","numVotes","RoomResultsCard","_toCSVButton","chartComponents","_renderCharts","Routes","path","exact","HostDash","Roomcode","HostAgenda","UserAgenda","HostPoll","UserPoll","PollResults","RoomResults","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","run","ReactDOM","render","className","document","getElementById"],"mappings":"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","file":"static/js/main.a7b81465.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.41be865c.png\";","\r\nconst ActionTypes = {\r\n    login: {\r\n      HOST_LOGIN_START: 'HOST_LOGIN_START',\r\n      HOST_LOGIN_SUCCESS: 'HOST_LOGIN_SUCCESS',\r\n      HOST_LOGIN_ERROR: 'HOST_LOGIN_ERROR',\r\n      USER_LOGIN_START: 'USER_LOGIN_START',\r\n      USER_LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\r\n      USER_LOGIN_ERROR: 'USER_LOGIN_ERROR',\r\n      LOGOUT_START: 'LOGOUT_START',\r\n      LOGOUT_SUCCESS: 'LOGOUT_SUCCESS',\r\n      LOGOUT_ERROR: 'LOGOUT_ERROR'\r\n    },\r\n    roomcode: {\r\n      UPDATE_ROOMCODE: 'UPDATE_ROOMCODE',\r\n      CHECK_ROOMCODE_START: 'CHECK_ROOMCODE_START',\r\n      CHECK_ROOMCODE_SUCCESS: 'CHECK_ROOMCODE_SUCCESS',\r\n      CHECK_ROOMCODE_ERROR: 'CHECK_ROOMCODE_ERROR',\r\n      RESET_ROOMCODE: 'RESET_ROOMCODE'\r\n    },\r\n    hostdash: {\r\n      FETCH_ROOMS_START: 'FETCH_ROOMS_START',\r\n      FETCH_ROOMS_SUCCESS: 'FETCH_ROOMS_SUCCESS',\r\n      FETCH_ROOMS_ERROR: 'FETCH_ROOMS_ERROR',\r\n      DELETE_ROOM_START: 'DELETE_ROOM_START',\r\n      DELETE_ROOM_SUCCESS: 'DELETE_ROOM_SUCCESS',\r\n      DELETE_ROOM_ERROR: 'DELETE_ROOM_ERROR',\r\n      ADD_ROOM_START: 'ADD_ROOM_START',\r\n      ADD_ROOM_SUCCESS: 'ADD_ROOM_SUCCESS',\r\n      ADD_ROOM_ERROR: 'ADD_ROOM_ERROR'\r\n    },\r\n    useragenda: {\r\n      FETCH_AGENDA_START: 'FETCH_USER_AGENDA_START',\r\n      FETCH_AGENDA_SUCCESS: 'FETCH_USER_AGENDA_SUCCESS',\r\n      FETCH_AGENDA_ERROR: 'FETCH_USER_AGENDA_ERROR',\r\n    },\r\n    hostagenda: {\r\n      FETCH_AGENDA_START: 'FETCH_HOST_AGENDA_START',\r\n      FETCH_AGENDA_SUCCESS: 'FETCH_HOST_AGENDA_SUCCESS',\r\n      FETCH_AGENDA_ERROR: 'FETCH_HOST_AGENDA_ERROR',\r\n\r\n      UPDATE_AGENDA_START: 'UPDATE_AGENDA_START',\r\n      UPDATE_AGENDA_SUCCESS: 'UPDATE_AGENDA_SUCCESS',\r\n      UPDATE_AGENDA_ERROR: 'UPDATE_AGENDA_ERROR',\r\n\r\n      ADD_POLL_START: 'ADD_POLL_START',\r\n      ADD_POLL_SUCCESS: 'ADD_POLL_SUCCESS',\r\n      ADD_POLL_ERROR: 'ADD_POLL_ERROR',\r\n\r\n      TOGGLE_EDIT: 'TOGGLE_EDIT_ROOM',\r\n      UPDATE_TITLE: 'UPDATE_ROOM_TITLE',\r\n      DELETE_POLL: 'DELETE_POLL_ROOM',\r\n      UPDATE_ORDER: 'UPDATE_ORDER_ROOM',\r\n\r\n      UPDATE_POLL_STATUS_START: 'UPDATE_POLL_STATUS_AGENDA_START',\r\n      UPDATE_POLL_STATUS_SUCCESS: 'UPDATE_POLL_STATUS_AGENDA_SUCCESS',\r\n      UPDATE_POLL_STATUS_ERROR: 'UPDATE_POLL_STATUS_AGENDA_ERROR',\r\n\r\n      UPDATE_ROOM_STATUS_START: 'UPDATE_ROOM_STATUS_AGENDA_START',\r\n      UPDATE_ROOM_STATUS_SUCCESS: 'UPDATE_ROOM_STATUS_AGENDA_SUCCESS',\r\n      UPDATE_ROOM_STATUS_ERROR: 'UPDATE_ROOM_STATUS_AGENDA_ERROR',\r\n    },\r\n    userpoll: {\r\n      FETCH_POLL_START: 'FETCH_USER_POLL_START',\r\n      FETCH_POLL_SUCCESS: 'FETCH_USER_POLL_SUCCESS',\r\n      FETCH_POLL_ERROR: 'FETCH_USER_POLL_ERROR',\r\n      UPDATE_SELECTION: 'UPDATE_SELECTION_OPTIONS',\r\n      SUBMIT_VOTE_START: 'SUBMIT_VOTE_START',\r\n      SUBMIT_VOTE_SUCCESS: 'SUBMIT_VOTE_SUCCESS',\r\n      SUBMIT_VOTE_ERROR: 'SUBMIT_VOTE_ERROR',\r\n      UPDATE_SUBMISSION_STATUS: 'UPDATE_SUBMISSION_STATUS',\r\n      UPDATE_INPUT: 'USER_UPDATE_INPUT',\r\n    },\r\n    hostpoll: {\r\n      FETCH_POLL_START: 'FETCH_HOST_POLL_START',\r\n      FETCH_POLL_SUCCESS: 'FETCH_HOST_POLL_SUCCESS',\r\n      FETCH_POLL_ERROR: 'FETCH_HOST_POLL_ERROR',\r\n\r\n      TOGGLE_EDIT: 'HOST_TOGGLE_EDIT',\r\n      ADD_POLL: 'HOST_ADD_POLL',\r\n      DELETE_POLL: 'HOST_DELETE_POLL',\r\n      UPDATE_ORDER: 'HOST_UPDATE_ORDER',\r\n      UPDATE_OPTION: 'HOST_UPDATE_OPTION',\r\n      UPDATE_TITLE: 'HOST_UPDATE_TITLE',\r\n      UPDATE_DESCRIPTION: 'HOST_UPDATE_DESCRIPTION',\r\n      UPDATE_SETTINGS: 'HOST_UPDATE_SETTINGS',\r\n\r\n      UPDATE_POLL_START: 'UPDATE_POLL_START',\r\n      UPDATE_POLL_SUCCESS: 'UPDATE_POLL_SUCCESS',\r\n      UPDATE_POLL_ERROR: 'UPDATE_POLL_ERROR',\r\n\r\n      UPDATE_POLL_STATUS_START: 'UPDATE_POLL_STATUS_POLL_START',\r\n      UPDATE_POLL_STATUS_SUCCESS: 'UPDATE_POLL_STATUS_POLL_SUCCESS',\r\n      UPDATE_POLL_STATUS_ERROR: 'UPDATE_POLL_STATUS_POLL_ERROR',\r\n    },\r\n    pollresults: {\r\n      FETCH_RESULTS_START: 'FETCH_RESULTS_START',\r\n      FETCH_RESULTS_SUCCESS: 'FETCH_RESULTS_SUCCESS',\r\n      FETCH_RESULTS_ERROR: 'FETCH_RESULTS_ERROR',\r\n    },\r\n    roomresults: {\r\n      FETCH_RESULTS_START: 'FETCH_ROOM_RESULTS_START',\r\n      FETCH_RESULTS_SUCCESS: 'FETCH_ROOM_RESULTS_SUCCESS',\r\n      FETCH_RESULTS_ERROR: 'FETCH_ROOM_RESULTS_ERROR',\r\n    }\r\n};\r\n\r\nexport default ActionTypes;\r\n","import ActionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  loginAttempt: null,\r\n  loginType: null,\r\n  loading: false,\r\n  error: null,\r\n};\r\n\r\nlet result;\r\n\r\nexport default function reducePoll(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n\r\n    case ActionTypes.login.HOST_LOGIN_START:\r\n      return { ...state, loginType: null, loading: true, error: null }\r\n    case ActionTypes.login.HOST_LOGIN_SUCCESS:\r\n      return { ...state, loginType: 'host', loading: false }\r\n    case ActionTypes.login.HOST_LOGIN_ERROR:\r\n      return { ...state, loading: false, error: action.error }\r\n\r\n    case ActionTypes.login.USER_LOGIN_START:\r\n      return { ...state, loginType: null, loading: true, error: null }\r\n    case ActionTypes.login.USER_LOGIN_SUCCESS:\r\n      return { ...state, loginType: 'user', loading: false }\r\n    case ActionTypes.login.USER_LOGIN_ERROR:\r\n      return { ...state, loading: false, error: action.error }\r\n\r\n      case ActionTypes.login.LOGOUT_START:\r\n        return { ...state, loading: true, error: null }\r\n      case ActionTypes.login.LOGOUT_SUCCESS:\r\n        return { ...state, loginType: null, loading: false }\r\n      case ActionTypes.login.LOGOUT_ERROR:\r\n        return { ...state, loginType: null, loading: false, error: action.error }\r\n  }\r\n  return state;\r\n}\r\n","import ActionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  roomcode: '',\r\n  submitted: false,\r\n  loading: false,\r\n  error: false,\r\n};\r\n\r\nlet result;\r\n\r\nexport default function reducePoll(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n\r\n    case ActionTypes.roomcode.UPDATE_ROOMCODE:\r\n      result = action.value;\r\n      // console.log(result);\r\n      return {\r\n        ...state,\r\n        roomcode: result,\r\n        submitted: false,\r\n        error: false,\r\n      };\r\n    case ActionTypes.roomcode.CHECK_ROOMCODE_START:\r\n      return {\r\n        ...state,\r\n        submitted: true,\r\n        loading: true,\r\n        error: false,\r\n      };\r\n    case ActionTypes.roomcode.CHECK_ROOMCODE_SUCCESS:\r\n        console.log('j')\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.roomcode.CHECK_ROOMCODE_ERROR:\r\n      console.log('je')\r\n      return {\r\n        ...state,\r\n        roomcode: '',\r\n        loading: false,\r\n        error: true,\r\n      };\r\n    case ActionTypes.roomcode.RESET_ROOMCODE:\r\n      return {\r\n        ...state,\r\n        roomcode: '',\r\n        submitted: false,\r\n        loading: false,\r\n        error: false,\r\n      }\r\n\r\n  }\r\n  // console.log(state);\r\n  return state;\r\n}\r\n\r\n// export default function;\r\n","// import PollItem from '../../components/PollItem';\r\nimport ActionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  rooms: null,\r\n  order: {\r\n    'open': [],\r\n    'closed': [],\r\n    'pending': []\r\n  },\r\n  loading: false,\r\n  error: null,\r\n}\r\n\r\nlet result;\r\n\r\nexport default function reduceHostDash(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case ActionTypes.hostdash.FETCH_ROOMS_START:\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostdash.FETCH_ROOMS_SUCCESS:\r\n      result = action.response;\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        rooms: result.rooms,\r\n        order: result.order\r\n      };\r\n    case ActionTypes.hostdash.FETCH_ROOMS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error\r\n      };\r\n\r\n\r\n    case ActionTypes.hostdash.DELETE_ROOM_START:\r\n    return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostdash.DELETE_ROOM_SUCCESS:\r\n      result = action.response;\r\n      // console.log(result);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        rooms: result.rooms,\r\n        order: result.order\r\n      };\r\n    case ActionTypes.hostdash.DELETE_ROOM_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error\r\n      };\r\n\r\n    case ActionTypes.hostdash.ADD_ROOM_START:\r\n      console.log('jer')\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostdash.ADD_ROOM_SUCCESS:\r\n      result = action.response;\r\n      console.log(result);\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        rooms: result.rooms,\r\n        order: result.order\r\n      };\r\n    case ActionTypes.hostdash.ADD_ROOM_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n  // console.log(state);\r\n  return state;\r\n}\r\n\r\n// export default function;\r\n","// import PollItem from '../../components/PollItem';\r\nimport ActionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  title: null,\r\n  status: null,\r\n  polls: null,\r\n  order: {\r\n    'open': [],\r\n    'closed': [],\r\n    'pending': []\r\n  },\r\n  loading: false,\r\n  error: null,\r\n}\r\n\r\nlet result;\r\n\r\nexport default function reduceUserAgenda(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case ActionTypes.useragenda.FETCH_AGENDA_START:\r\n      console.log('here');\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.useragenda.FETCH_AGENDA_SUCCESS:\r\n      result = action.response;\r\n      console.log(result)\r\n      return {\r\n        ...state,\r\n        title: result.title,\r\n        status: result.status,\r\n        polls: result.polls,\r\n        order: result.order,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.useragenda.FETCH_AGENDA_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error\r\n      };\r\n    default:\r\n      return state;\r\n\r\n  }\r\n  return state;\r\n}\r\n","// import { generatePollId } from '../MockDataFunctions';\r\nimport ActionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  title: null,\r\n  status: null,\r\n  polls: null,\r\n  order: {\r\n    'open': [],\r\n    'closed': [],\r\n    'pending': []\r\n  },\r\n  editing: false,\r\n  loading: false,\r\n  error: null,\r\n}\r\n\r\nlet result;\r\nlet newPolls;\r\nlet newOrder;\r\n\r\nexport default function reduceHostAgenda(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case ActionTypes.hostagenda.FETCH_AGENDA_START:\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostagenda.FETCH_AGENDA_SUCCESS:\r\n      result = action.response;\r\n      return {\r\n        ...state,\r\n        title: result.title,\r\n        status: result.status,\r\n        polls: result.polls,\r\n        order: result.order,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.hostagenda.FETCH_AGENDA_ERROR:\r\n      console.log('here')\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error\r\n      };\r\n\r\n    case ActionTypes.hostagenda.UPDATE_TITLE:\r\n      return {\r\n        ...state,\r\n        title: action.event.target.value,\r\n      };\r\n\r\n    case ActionTypes.hostagenda.ADD_POLL_START:\r\n      console.log('here')\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostagenda.ADD_POLL_SUCCESS:\r\n      result = action.response;\r\n\r\n      newPolls = {...state.polls};\r\n      newPolls[result.newPoll.id] = result.newPoll;\r\n\r\n      newOrder = {...state.order};\r\n      const newPending = newOrder['pending'].map(i => i)\r\n      newPending.push(result.newPoll.id);\r\n\r\n      return {\r\n        ...state,\r\n        polls: newPolls,\r\n        order: { ...newOrder,\r\n                 'pending': newPending\r\n        },\r\n        loading: false\r\n      };\r\n    case ActionTypes.hostagenda.ADD_POLL_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: result.error\r\n      };\r\n\r\n\r\n    case ActionTypes.hostagenda.DELETE_POLL:\r\n      newPolls = {...state.polls};\r\n      delete newPolls[action.poll_id];\r\n\r\n      newOrder = {...state.order}\r\n      newOrder['pending'] = state.order['pending'].filter(i => i != action.poll_id)\r\n\r\n      return {\r\n        ...state,\r\n        polls: newPolls,\r\n        order: newOrder\r\n      };\r\n\r\n\r\n    case ActionTypes.hostagenda.UPDATE_AGENDA_START:\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostagenda.UPDATE_AGENDA_SUCCESS:\r\n      result = action.response;\r\n      return {\r\n        ...state,\r\n        title: result.title,\r\n        status: result.status,\r\n        polls: result.polls,\r\n        order: result.order,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.hostagenda.UPDATE_AGENDA_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n    case ActionTypes.hostagenda.TOGGLE_EDIT:\r\n      // console.log('here')\r\n      const editing = !state.editing;\r\n      return {\r\n        ...state,\r\n        editing: editing\r\n      }\r\n\r\n\r\n    case ActionTypes.hostagenda.UPDATE_ORDER:\r\n\r\n      newOrder = {...state.order};\r\n      newOrder['pending'] = action.newPendingOrder;\r\n\r\n      return {\r\n        ...state,\r\n        order: newOrder\r\n      }\r\n    default:\r\n      return state;\r\n\r\n    case ActionTypes.hostagenda.UPDATE_POLL_STATUS_START:\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostagenda.UPDATE_POLL_STATUS_SUCCESS:\r\n      result = action.response;\r\n\r\n      return {\r\n        ...state,\r\n        polls: {...result.polls},\r\n        order: { ...result.order},\r\n        loading: false\r\n      };\r\n    case ActionTypes.hostagenda.UPDATE_POLL_STATUS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: result.error\r\n      };\r\n\r\n    case ActionTypes.hostagenda.UPDATE_ROOM_STATUS_START:\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostagenda.UPDATE_ROOM_STATUS_SUCCESS:\r\n      result = action.response;\r\n\r\n      return {\r\n        ...state,\r\n        status: result.status,\r\n        polls: {...result.polls},\r\n        order: { ...result.order},\r\n        loading: false,\r\n      };\r\n    case ActionTypes.hostagenda.UPDATE_ROOM_STATUS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: result.error\r\n      };\r\n\r\n  }\r\n  return state;\r\n}\r\n","// import PollItem from '../../components/PollItem';\r\nimport ActionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  poll: {  title: null,\r\n    status: null,\r\n    type: null,\r\n    description: null,\r\n    options: null,\r\n    optionsOrder: [],\r\n    userInputOption: false,\r\n  },\r\n  userInput: {\r\n    id: '000',\r\n    value: '',\r\n    submissionId: null,\r\n    submissionValue: null,\r\n  },\r\n  pollStatus: {\r\n    selection: {},\r\n    submission: {},\r\n    submitStatus: 'unselected'\r\n  },\r\n  submitLoading: false,\r\n  loading: false,\r\n  error: null,\r\n}\r\n\r\nconst submissionStatus = (state) => {\r\n\r\n  let status;\r\n\r\n  if (!state.pollStatus.selected && !state.pollStatus.submitted) {\r\n    status = 'unselected'\r\n  }\r\n  else if (state.pollStatus.selected && !state.pollStatus.submitted) {\r\n    if (state.pollStatus.selection['000'] && state.userInput.value === ''){\r\n      status = 'unfilledInput'\r\n    }\r\n    else { status= 'submit' }\r\n  }\r\n  else if (!state.pollStatus.selected && state.pollStatus.submitted) {\r\n    status = 'submitted'\r\n  }\r\n  else {\r\n    status = 'submitted'\r\n    // let resubmit = false;\r\n    for (let i=0; i < state.poll.optionsOrder.length; i++) {\r\n      let id = state.poll.optionsOrder[i];\r\n      if (state.pollStatus.selection[id] !== state.pollStatus.submission[id]) {\r\n        status = 'resubmit'\r\n        // resubmit = true;\r\n        break;}\r\n    }\r\n    // console.log(resubmit);\r\n    if (state.pollStatus.selection['000']) {\r\n\r\n      if (!state.pollStatus.submission['000'] ) {\r\n        if (state.userInput.value !== '') {\r\n          // resubmit = true;\r\n          status = 'resubmit'\r\n        }\r\n        else { status = 'unfilledInput'}\r\n      }\r\n      else {\r\n        if (state.userInput.value !== state.userInput.submissionValue) {\r\n          if (state.userInput.value !== '') {\r\n            status = 'resubmit'\r\n            // resubmit = true;\r\n          }\r\n          else { status = 'unfilledInput'}\r\n        }\r\n      }\r\n\r\n      // if (!state.pollStatus.submission['000'] && state.userInput.value !== ''){\r\n      //   console.log('1')\r\n      //   resubmit = true;\r\n      // }\r\n      // else if (state.pollStatus.submission['000']){\r\n      //   if (state.userInput.value !== '' && state.userInput.value !== state.userInput.submissionValue){\r\n      //     console.log('2')\r\n      //     resubmit = true;\r\n      //   }\r\n      //   else if (resubmit && state.userInput.value === state.userInput.submissionValue){\r\n      //     resubmit = true;\r\n      //   }\r\n      //   else { resubmit = false }\r\n      // }\r\n      // else { resubmit = false }\r\n    }\r\n    else if (state.pollStatus.submission['000']) {\r\n      status = 'resubmit'\r\n      // resubmit = true;\r\n    }\r\n\r\n    // resubmit ? status = 'resubmit' : status = 'submitted';\r\n  }\r\n\r\n  return status;\r\n}\r\n\r\nlet result;\r\nlet newState;\r\n\r\nexport default function reduceUserPoll(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case ActionTypes.userpoll.FETCH_POLL_START:\r\n      console.log('here');\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.userpoll.FETCH_POLL_SUCCESS:\r\n      result = action.response;\r\n      console.log(result)\r\n      return {\r\n        ...state,\r\n        poll: {...result},\r\n        loading: false,\r\n      };\r\n    case ActionTypes.userpoll.FETCH_POLL_ERROR:\r\n      console.log('error')\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error\r\n      };\r\n\r\n    case ActionTypes.userpoll.UPDATE_SELECTION:\r\n\r\n      let selected = false;\r\n      for (let i=0; i < state.poll.optionsOrder.length; i++) {\r\n        let id = state.poll.optionsOrder[i];\r\n        if (action.selection[id]) { selected = true; break;}\r\n      }\r\n      if (state.poll.userInputOption && action.selection['000']) {\r\n        selected = true;\r\n      }\r\n\r\n      newState = {\r\n        ...state,\r\n        pollStatus: {\r\n          ...state.pollStatus,\r\n          selection: action.selection,\r\n          selected: selected,\r\n        },\r\n      }\r\n\r\n      return {\r\n        ...newState,\r\n        pollStatus: {\r\n          ...newState.pollStatus,\r\n          submitStatus: submissionStatus(newState)\r\n        }\r\n      };\r\n\r\n    case ActionTypes.userpoll.SUBMIT_VOTE_START:\r\n      console.log('here');\r\n      return { ...state, submitLoading: true, loading: true, error: null };\r\n    case ActionTypes.userpoll.SUBMIT_VOTE_SUCCESS:\r\n\r\n      console.log(state);\r\n      result = action.response;\r\n\r\n      let inputSubmission = state.pollStatus.selection['000'] ? state.userInput.value : null;\r\n\r\n      console.log(action)\r\n      newState = {\r\n        ...state,\r\n        userInput: {\r\n          ...state.userInput,\r\n          submissionId: result.inputSubmissionId,\r\n          submissionValue: inputSubmission\r\n        },\r\n        pollStatus: {\r\n          ...state.pollStatus,\r\n          submission: {...state.pollStatus.selection},\r\n          submitted: true,\r\n        },\r\n        submitLoading: false,\r\n        loading: false,\r\n      }\r\n\r\n      console.log(newState)\r\n\r\n      return {\r\n        ...newState,\r\n        pollStatus: {\r\n          ...newState.pollStatus,\r\n          submitStatus: submissionStatus(newState)\r\n        }\r\n      }\r\n\r\n      case ActionTypes.userpoll.SUBMIT_VOTE_ERROR:\r\n        return {\r\n          ...state,\r\n          submitLoading: false,\r\n          loading: false,\r\n          error: action.error\r\n        };\r\n\r\n      // newState = {\r\n      //   ...state,\r\n      //   submission: {...state.selection},\r\n      //   submitted: true,\r\n      //   inputSubmission: inputSubmission\r\n      // }\r\n      //\r\n      // return {\r\n      //   ...newState,\r\n      //   submissionStatus: submissionStatus(newState)\r\n\r\n    case ActionTypes.userpoll.UPDATE_INPUT:\r\n\r\n      console.log(action);\r\n\r\n      newState = {\r\n        ...state,\r\n        userInput: {\r\n          ...state.userInput,\r\n          value: action.event.target.value,\r\n        }\r\n      }\r\n      return {\r\n        ...newState,\r\n        pollStatus: {\r\n          ...newState.pollStatus,\r\n          submitStatus: submissionStatus(newState)\r\n        }\r\n      }\r\n    default:\r\n      return state;\r\n\r\n  }\r\n  return state;\r\n}\r\n","import mockData from './mockData'\r\nimport { optionBase, pollBase, roomBase, } from './dataBases'\r\n\r\n\r\n\r\n\r\nfunction fetchPollData(room_id, poll_id) {\r\n  return mockData.rooms[room_id].polls[poll_id];\r\n}\r\n\r\nfunction checkRoomcode(room_id) {\r\n  if (mockData.rooms[room_id]) {\r\n    return {}\r\n  }\r\n  else {\r\n    throw \"Room undefined.\"\r\n  }\r\n}\r\n\r\nfunction fetchHostRooms() {\r\n  const { order, ...rooms } = mockData.rooms;\r\n\r\n  return {\r\n    rooms: rooms,\r\n    order: order\r\n  }\r\n}\r\n\r\nfunction deleteHostRoom(room_id) {\r\n  let { order, ...rooms } = mockData.rooms;\r\n  const room = mockData.rooms[room_id]\r\n\r\n  const newOrder = order[room.status].filter((i) => i != room_id);\r\n  order[room.status] = newOrder;\r\n\r\n  delete rooms[room_id];\r\n\r\n  mockData.rooms = { order, ...rooms}\r\n  return {\r\n    rooms: rooms,\r\n    order: order\r\n  }\r\n\r\n}\r\n\r\nfunction generateRoomCode() {\r\n  const code = Math.floor(Math.random() * 10000);\r\n  const roomcode = `0000${code}`;\r\n\r\n  return roomcode.slice(-4);\r\n}\r\n\r\nfunction addHostRoom() {\r\n  let roomcode = generateRoomCode();\r\n  while (mockData[roomcode] != undefined ) {\r\n    roomcode = generateRoomCode();\r\n  }\r\n\r\n  const room = roomBase(roomcode);\r\n\r\n\r\n  mockData.rooms[roomcode] = room;\r\n  console.log(mockData)\r\n  mockData.rooms.order['pending'].push(roomcode);\r\n  console.log(mockData)\r\n\r\n  const { order, ...rooms } = mockData.rooms;\r\n  console.log(mockData.rooms)\r\n  return {\r\n    rooms: rooms,\r\n    order: order\r\n  }\r\n}\r\n\r\n\r\nfunction fetchAgenda(room_id) {\r\n\r\n  console.log('fetch')\r\n\r\n  const room = mockData.rooms[room_id];\r\n  const { order, ...rest } = room.polls;\r\n\r\n  console.log(room);\r\n\r\n  return {\r\n    title: room.title,\r\n    status: room.status,\r\n    polls: {...rest},\r\n    order: order\r\n  }\r\n}\r\n\r\nfunction updateRoom (roomcode, roomState) {\r\n\r\n  console.log(roomState)\r\n\r\n  let room = {...mockData.rooms[roomcode]};\r\n  let newPolls = {...room.polls,\r\n                  ...roomState.polls,\r\n                  order: roomState.order }\r\n  room.title = roomState.title;\r\n  room.status = roomState.status;\r\n  room.polls = newPolls;\r\n\r\n  mockData.rooms[roomcode] = room;\r\n\r\n  console.log('updated');\r\n  console.log(mockData)\r\n\r\n  return {\r\n    ...roomState\r\n  }\r\n}\r\n\r\nfunction generatePollId() {\r\n  const id = Math.floor(Math.random() * 100);\r\n  const poll_id = `00${id}`;\r\n\r\n  return poll_id.slice(-2);\r\n}\r\n\r\nfunction addPoll(roomcode) {\r\n\r\n  let poll_id = generatePollId();\r\n  while (mockData.rooms[roomcode].polls[poll_id] != undefined ) {\r\n    poll_id = generatePollId();\r\n  }\r\n\r\n  return {\r\n    newPoll: pollBase(poll_id)\r\n  }\r\n}\r\n\r\nfunction updatePoll (roomcode, pollcode, pollState) {\r\n  console.log(pollState)\r\n\r\n  let room = {...mockData.rooms[roomcode]};\r\n  let poll = {...room.polls[pollcode]};\r\n  console.log(poll)\r\n  room.polls[pollcode] = {\r\n    ...room.polls[pollcode],\r\n    ...pollState\r\n  };\r\n\r\n  mockData.rooms[roomcode] = room;\r\n\r\n  console.log(mockData)\r\n\r\n  console.log('updated');\r\n  console.log(pollState)\r\n\r\n  return {\r\n    ...pollState\r\n  }\r\n}\r\n\r\nfunction  updateRoomStatus(roomcode, newStatus) {\r\n\r\n  const currentStatus = mockData.rooms[roomcode].status;\r\n  console.log(currentStatus)\r\n  let newRoomOrder = mockData.rooms.order;\r\n  console.log(newRoomOrder)\r\n  newRoomOrder[currentStatus] = newRoomOrder[currentStatus].filter((i) => i !== roomcode);\r\n  console.log(newRoomOrder)\r\n  console.log(newStatus)\r\n  newRoomOrder[newStatus].push(roomcode);\r\n  console.log(newRoomOrder)\r\n\r\n  if (newStatus === 'closed') {\r\n\r\n    let newPollsOrder = mockData.rooms[roomcode].polls.order;\r\n    console.log(newPollsOrder)\r\n    let allPolls = newPollsOrder['closed'].concat(newPollsOrder['open'], newPollsOrder['pending']);\r\n    newPollsOrder = {\r\n      'closed': allPolls,\r\n      'open': [],\r\n      'pending': [],\r\n    }\r\n\r\n    console.log(newPollsOrder)\r\n\r\n    for (let i = 0; i < allPolls.length; i++) {\r\n      let poll_id = allPolls[i];\r\n      mockData.rooms[roomcode].polls[poll_id].status = 'closed';\r\n    }\r\n\r\n    mockData.rooms[roomcode].polls.order = newPollsOrder;\r\n  }\r\n\r\n  mockData.rooms.order = newRoomOrder;\r\n  mockData.rooms[roomcode].status = newStatus;\r\n\r\n  console.log(mockData)\r\n\r\n  const { order, ...rest } = mockData.rooms[roomcode].polls;\r\n\r\n  return {\r\n    status: mockData.rooms[roomcode].status,\r\n    polls: {...rest},\r\n    order: order\r\n  }\r\n}\r\n\r\n\r\nfunction updatePollStatus(roomcode, pollcode, newStatus) {\r\n\r\n  if (mockData.rooms[roomcode].status === 'open') {\r\n\r\n    let newPoll = {...mockData.rooms[roomcode].polls[pollcode]};\r\n    const oldStatus = newPoll.status;\r\n    newPoll.status = newStatus;\r\n\r\n    const newOrder = {...mockData.rooms[roomcode].polls.order}\r\n    newOrder[oldStatus] = newOrder[oldStatus].filter(i => i !== pollcode);\r\n    newOrder[newStatus].push(pollcode);\r\n\r\n    mockData.rooms[roomcode].polls[pollcode] = {...newPoll};\r\n    mockData.rooms[roomcode].polls.order = {...newOrder};\r\n  }\r\n\r\n  const { order, ...rest } = mockData.rooms[roomcode].polls;\r\n\r\n  return {\r\n    polls: {...rest},\r\n    order: order\r\n  }\r\n}\r\n\r\nfunction generateOptionId() {\r\n  const id = Math.floor(Math.random() * 100);\r\n  const poll_id = `00${id}`;\r\n\r\n  return poll_id.slice(-2);\r\n}\r\n\r\nfunction getPollResults(room_id, poll_id) {\r\n\r\n  const poll = {...mockData.rooms[room_id].polls[poll_id]}\r\n  return {\r\n    title: poll.title,\r\n    description: poll.description,\r\n    optionsOrder: poll.optionsOrder,\r\n    options: {...poll.options},\r\n    results: {...poll.results}\r\n  }\r\n}\r\n\r\nfunction generateUserOptionId() {\r\n  const id = Math.floor(Math.random() * 1000);\r\n  const poll_id = `000${id}`;\r\n\r\n  return poll_id.slice(-3);\r\n}\r\n\r\nfunction submitVote(room_id, poll_id, selection, submission, userInput) {\r\n   const poll = mockData.rooms[room_id].polls[poll_id];\r\n\r\n   for (let i; i < poll.optionsOrder.length; i++) {\r\n     let option_id = poll.optionsOrder[i];\r\n     let count = poll.results[option_id].count;\r\n\r\n     if (submission[option_id]) { count = count - 1}\r\n     if (selection[option_id]) { count = count + 1}\r\n\r\n     poll.results[option_id].count = count;\r\n   }\r\n\r\n   let inputcode = null;\r\n   if (selection[userInput.id]) {\r\n     if (!userInput.submissionId) {\r\n       inputcode = generateUserOptionId();\r\n       while (poll.results[inputcode]) {\r\n         inputcode = generateUserOptionId();\r\n       }\r\n     }\r\n     else { inputcode = userInput.submissionId }\r\n\r\n     const userInputResult = {\r\n       id: inputcode,\r\n       value: userInput.value,\r\n       count: 1\r\n     }\r\n\r\n     poll.results[inputcode] = userInputResult;\r\n   }\r\n   else if (userInput.submissionId ){\r\n     delete poll.results[userInput.submissionId]\r\n   }\r\n   console.log(mockData.rooms[room_id].polls[poll_id].results)\r\n   mockData.rooms[room_id].polls[poll_id] = poll;\r\n\r\n   return {\r\n     submitted: true,\r\n     inputSubmissionId: inputcode\r\n   }\r\n}\r\n\r\nfunction getRoomResults(room_id) {\r\n\r\n  const room = {...mockData.rooms[room_id]}\r\n  console.log(room)\r\n  const polls = {...room.polls}\r\n  console.log(polls)\r\n  const closedPolls = polls.order['closed'];\r\n  console.log(closedPolls);\r\n\r\n  const pollsResults = {};\r\n\r\n  for (let i = 0; i < closedPolls.length; i++) {\r\n    const poll_id = closedPolls[i];\r\n    console.log(poll_id)\r\n    const poll_result = getPollResults(room_id, poll_id);\r\n    pollsResults[poll_id] = poll_result;\r\n  }\r\n\r\n  console.log(pollsResults);\r\n\r\n\r\n  return {\r\n    title: room.title,\r\n    order: closedPolls,\r\n    allResults: pollsResults,\r\n  }\r\n}\r\n\r\nexport { checkRoomcode, fetchPollData,\r\n         fetchHostRooms, deleteHostRoom, addHostRoom,\r\n         fetchAgenda, updateRoom, addPoll, updatePoll, updatePollStatus,\r\n         updateRoomStatus,\r\n        generateOptionId, getPollResults, getRoomResults, submitVote }\r\n","// import PollItem from '../../components/PollItem';\r\nimport ActionTypes from '../actionTypes';\r\nimport { generateOptionId } from '../MockDataFunctions';\r\n\r\nconst initialState = {\r\n  poll: {\r\n    title: null,\r\n    status: null,\r\n    type: null,\r\n    description: null,\r\n    options: null,\r\n    optionsOrder: [],\r\n    userInputOption: false,\r\n    showResults: true,\r\n  },\r\n  editing: false,\r\n  loading: false,\r\n  error: null,\r\n}\r\n\r\n\r\nlet result;\r\nlet newOptions;\r\nlet newOptionsOrder;\r\n\r\nexport default function reduceUserPoll(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case ActionTypes.hostpoll.FETCH_POLL_START:\r\n      console.log('here');\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostpoll.FETCH_POLL_SUCCESS:\r\n      result = action.response;\r\n      return {\r\n        ...state,\r\n        poll: {...result},\r\n        editing: action.location_state ? action.location_state.editing : false,\r\n        loading: false,\r\n      };\r\n    case ActionTypes.hostpoll.FETCH_POLL_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error\r\n      };\r\n    case ActionTypes.hostpoll.TOGGLE_EDIT:\r\n      return {\r\n        ...state,\r\n        editing: !state.editing,\r\n      };\r\n    case ActionTypes.hostpoll.DELETE_POLL:\r\n      newOptions = {...state.poll.options};\r\n      delete newOptions[action.option_id];\r\n      newOptionsOrder = state.poll.optionsOrder.filter((i) => i !== action.option_id)\r\n\r\n      return {\r\n        ...state,\r\n        poll: {...state.poll,\r\n               options: newOptions,\r\n               optionsOrder: newOptionsOrder\r\n              }\r\n      };\r\n    case ActionTypes.hostpoll.ADD_POLL:\r\n      let option_id = generateOptionId();\r\n      while (state.poll.options[option_id] != undefined ) {\r\n        option_id = generateOptionId();\r\n      }\r\n\r\n      newOptions = {...state.poll.options};\r\n      newOptions[option_id] = {\r\n        id: option_id,\r\n        value: 'Option ' + option_id,\r\n        optionType: 'text'\r\n      };\r\n      newOptionsOrder = state.poll.optionsOrder.map(i => i);\r\n      newOptionsOrder.push(option_id);\r\n\r\n      return {\r\n        ...state,\r\n        poll: {...state.poll,\r\n               options: newOptions,\r\n               optionsOrder: newOptionsOrder\r\n              }\r\n      };\r\n\r\n    case ActionTypes.hostpoll.UPDATE_ORDER:\r\n      return {\r\n        ...state,\r\n        poll: {\r\n          ...state.poll,\r\n          optionsOrder: action.order,\r\n        }\r\n      }\r\n    case ActionTypes.hostpoll.UPDATE_OPTION:\r\n      newOptions = {...state.poll.options};\r\n      newOptions[action.option_id] = {\r\n        ...newOptions[action.option_id],\r\n        value: action.event.target.value,\r\n      };\r\n\r\n      return {\r\n        ...state,\r\n        poll: {...state.poll,\r\n               options: newOptions,\r\n              }\r\n      };\r\n    case ActionTypes.hostpoll.UPDATE_TITLE:\r\n\r\n      return {\r\n        ...state,\r\n        poll: {...state.poll,\r\n               title: action.event.target.value,\r\n              }\r\n      };\r\n\r\n    case ActionTypes.hostpoll.UPDATE_DESCRIPTION:\r\n\r\n      return {\r\n        ...state,\r\n        poll: {...state.poll,\r\n               description: action.event.target.value,\r\n              }\r\n      }\r\n    case ActionTypes.hostpoll.UPDATE_SETTINGS:\r\n      console.log(action.settings);\r\n      return {\r\n        ...state,\r\n        poll: {...state.poll,\r\n               ...action.settings,\r\n              }\r\n    }\r\n\r\n    case ActionTypes.hostpoll.UPDATE_POLL_START:\r\n      console.log('here');\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostpoll.UPDATE_POLL_SUCCESS:\r\n      result = action.response;\r\n      console.log(result)\r\n      return {\r\n        ...state,\r\n        poll: {...result},\r\n        loading: false,\r\n      };\r\n    case ActionTypes.hostpoll.UPDATE_POLL_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error\r\n      };\r\n\r\n    case ActionTypes.hostpoll.UPDATE_POLL_STATUS_START:\r\n      console.log('here 0');\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.hostpoll.UPDATE_POLL_STATUS_SUCCESS:\r\n      result = action.poll;\r\n      console.log(result)\r\n      return {\r\n        ...state,\r\n        poll: {...result},\r\n        loading: false,\r\n      };\r\n    case ActionTypes.hostpoll.UPDATE_POLL_STATUS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error\r\n      };\r\n\r\n    default:\r\n      return state;\r\n\r\n  }\r\n  return state;\r\n}\r\n","import ActionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  pollResults: {\r\n    optionsOrder: [],\r\n  },\r\n\r\n  loading: false,\r\n  error: false,\r\n};\r\n\r\nlet result;\r\n\r\nexport default function reducePollResult(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case ActionTypes.pollresults.FETCH_RESULTS_START:\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.pollresults.FETCH_RESULTS_SUCCESS:\r\n      result = action.response;\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        pollResults: result,\r\n      };\r\n    case ActionTypes.pollresults.FETCH_RESULTS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n    };\r\n  return state;\r\n}\r\n\r\n// export default function;\r\n","import ActionTypes from '../actionTypes';\r\n\r\nconst initialState = {\r\n  roomResults: {\r\n    title: null,\r\n    allResults: null,\r\n    order: [],\r\n  },\r\n\r\n  loading: false,\r\n  error: false,\r\n};\r\n\r\nlet result;\r\n\r\nexport default function reduceRoomResult(state = initialState, action) {\r\n\r\n  switch (action.type) {\r\n    case ActionTypes.roomresults.FETCH_RESULTS_START:\r\n      return { ...state, loading: true, error: null };\r\n\r\n    case ActionTypes.roomresults.FETCH_RESULTS_SUCCESS:\r\n      result = action.response;\r\n      console.log(result)\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        roomResults: {...result},\r\n      };\r\n    case ActionTypes.roomresults.FETCH_RESULTS_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: true\r\n      };\r\n    };\r\n  return state;\r\n}\r\n\r\n// export default function;\r\n","import { combineReducers } \t  from 'redux';\r\nimport login                  from './login.reducer';\r\nimport roomcode               from './roomcode.reducer'\r\nimport hostdash  \t\t\t\t\t\t  from './hostdash.reducer';\r\nimport useragenda  \t\t\t\t\t  from './useragenda.reducer';\r\nimport hostagenda \t\t\t\t\t  from './hostagenda.reducer';\r\nimport userpoll               from './userpoll.reducer';\r\nimport hostpoll               from './hostpoll.reducer';\r\nimport pollresults            from './pollresults.reducer';\r\nimport roomresults            from './roomresults.reducer';\r\n\r\nexport default combineReducers({\r\n  login,\r\n  roomcode,\r\n  hostdash,\r\n  useragenda,\r\n  hostagenda,\r\n  userpoll,\r\n  hostpoll,\r\n  pollresults,\r\n  roomresults,\r\n});\r\n","import firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyC6IvTrHvamb83DUmxCJQCOIJCsQHce4wA\",\r\n  authDomain: \"faculty-voting-9ad15.firebaseapp.com\",\r\n  databaseURL: \"https://faculty-voting-9ad15.firebaseio.com\",\r\n  projectId: \"faculty-voting-9ad15\",\r\n  storageBucket: \"faculty-voting-9ad15.appspot.com\",\r\n  messagingSenderId: \"627933747870\",\r\n  appId: \"1:627933747870:web:348d54dac28eab6f84b98f\",\r\n  measurementId: \"G-VB13V4GH27\"\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// const firestore = firebase.firestore();\r\n// const fireauth = firebase.auth();\r\n\r\nexport default firebase;\r\n","import firebase from './databaseCommunication/permissions.js'\r\n\r\nconst fireauth = firebase.auth();\r\nconst firestore = firebase.firestore();\r\n\r\nconst signOutCurrentUser = async () => {\r\n    fireauth.signOut().then(function() {\r\n\t// Sign-out successful.\r\n    }).catch(function(error) {\r\n\t// An error happened.\r\n    });\r\n}\r\n\r\nconst getCurrentUserEmail = () => {\r\n    let email = \"\";\r\n    if (fireauth.currentUser === null) {\r\n\t\temail = \"null\";\r\n    } else {\r\n\t\temail = fireauth.currentUser.email;\r\n    }\r\n    console.log(email);\r\n    return email;\r\n}\r\n\r\nconst getToken = () => {\r\n\tif (fireauth.currentUser === null) {\r\n\t\treturn null;\r\n    } else {\r\n\t\treturn fireauth.currentUser.uid;\r\n    }\r\n}\r\n\r\nconst userLogin = async () => {\r\n\t//await firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION);\r\n    var provider = new firebase.auth.GoogleAuthProvider();\r\n    provider.setCustomParameters({\r\n\t'prompt': 'select_account'\r\n    });\r\n\r\n    await fireauth.signInWithPopup(provider).then(function(result) {\r\n\t\t// This gives you a Google Access Token. You can use it to access the Google API.\r\n\t\tvar token = result.credential.accessToken;\r\n\t\t// The signed-in user info.\r\n\t\tvar user = result.user;\r\n\t\t// ...\r\n    }).catch(function(error) {\r\n\t\t// Handle Errors here.\r\n\t\tvar errorCode = error.code;\r\n\t\tvar errorMessage = error.message;\r\n\t\t// The email of the user's account used.\r\n\t\tvar email = error.email;\r\n\t\t// The firebase.auth.AuthCredential type that was used.\r\n\t\tvar credential = error.credential;\r\n\t\t// ...\r\n\r\n\t\tconsole.log(error);  // Handle Errors here.\r\n\t\tvar errorCode = error.code;\r\n\t\tconsole.log(errorCode);\r\n\r\n\t\tvar errorMessage = error.message;\r\n\t\tconsole.log(errorMessage);\r\n\r\n\t\tsignOutCurrentUser();\r\n    });\r\n}\r\n\r\nconst userIsHamiltonian = () => {\r\n    let email = getCurrentUserEmail();\r\n    let result = (email.split('@')[1] == \"hamilton.edu\");\r\n    return result;\r\n}\r\n\r\n\r\nconst getUserId = async () => {\r\n    if (!(await userIsLoggedIn())) {\r\n\t\tthrow 'Not logged in.';\r\n\t} \r\n\telse {\r\n\t\tlet email = getCurrentUserEmail();\r\n\t//   console.log('made it')\r\n\t//   console.log(email)\r\n\t\treturn email.split('@')[0];\r\n    }\r\n}\r\n\r\n\r\nconst userIsHost = (host_id) => {\r\n    console.log(\"Checking if host...\");\r\n\r\n    if (getUserId() == host_id) {\r\n\tconsole.log(\"User is host.\")\r\n\treturn true;\r\n    } else {\r\n\tconsole.log(\"User isn't host.\");\r\n\treturn false;\r\n    }\r\n}\r\n\r\nconst userIsVoter = async () => {\r\n    // Return true if the current user is a voter\r\n    // code from\r\n    // https://stackoverflow.com/questions/53332471/checking-if-a-document-exists-in-a-firestore-collection\r\n    console.log(\"Checking if voter...\");\r\n    const user_id = await getUserId();\r\n    // try {\r\n\tlet docRef = firestore\r\n\t    .collection(\"voting\")\r\n\t    .doc(user_id)\r\n\r\n\tlet doc = await docRef.get();\r\n\r\n\tif (doc.exists) {\r\n\t    console.log(\"User is a voter.\");\r\n\t    return user_id;\r\n\t} else {\r\n\t    console.log(\"User isn't a voter.\");\r\n\t    throw 'Not a voter.'\r\n\t}\r\n  //   } catch(error) {\r\n\t// console.log(error);\r\n\t// return false;\r\n  //   }\r\n}\r\n\r\n\r\nconst userIsLoggedIn = async () => {\r\n    return fireauth.currentUser !== null;\r\n}\r\n\r\n\r\nconst userIsHostOfRoom = async (room_id) => {\r\n    // Given a roomId, returns true if the currently logged in user is the host of that room.\r\n\r\n    console.log(\"checking if current user is host of \" + room_id);\r\n\r\n    let currentUser = await getUserId();\r\n\r\n    // try {\r\n\tlet docRef = firestore\r\n\t    .collection(currentUser)\r\n\t    .doc(room_id);\r\n\r\n\tlet doc = await docRef.get();\r\n\r\n\tif (doc.exists) {\r\n\t    console.log(\"current user is host of \" + room_id);\r\n\t    return currentUser;\r\n\t} else {\r\n\t    console.log(\"current user isn't host of \" + room_id);\r\n\t    // return null;\r\n      throw 'User is not host of room.'\r\n\t}\r\n  //   } catch(error) {\r\n\t// console.log(error);\r\n\t// return null;\r\n  //   }\r\n}\r\n\r\nexport {userLogin, getUserId, getCurrentUserEmail, signOutCurrentUser, userIsHamiltonian, userIsHost, userIsVoter, getToken, userIsLoggedIn, userIsHostOfRoom};\r\n","import { call, put }     from \"redux-saga/effects\";\r\nimport ActionTypes       from '../actionTypes';\r\nimport { userIsLoggedIn, userLogin, signOutCurrentUser, getCurrentUserEmail, userIsHamiltonian } from '../../LoginUtils.js';\r\n\r\n// async function fetchAsync (func) {\r\n// \tconst response = await func();\r\n// \tif (response) {\r\n// \t\treturn response;\r\n// \t}\r\n//\r\n// \tthrow new Error ('bad');\r\n// }\r\n\r\nconst loginHandler = async () => {\r\n    await userLogin().then(() => {\r\n    \tif (! userIsHamiltonian()) {\r\n          throw 'Not a valid email.'\r\n    \t    // console.log(\"User \" + getCurrentUserEmail() + \" is not within Hamilton domain. Logging out.\");\r\n    \t    // alert(\"Please log in with a Hamilton account. (And enable pop-ups so the new login window appears)\");\r\n    \t    // await signOutCurrentUser();\r\n    \t}\r\n      // else {\r\n    \t//     pushLandingPage(\"user\");\r\n    \t// }\r\n    });\r\n}\r\n\r\nexport function* loginHost (action) {\r\n\r\n\ttry {\r\n\r\n    yield call(loginHandler);\r\n\t// console.log('here')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t // host_id\r\n\t\t// const response = yield call(() => checkRoomcode(action.room_id))\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.login.HOST_LOGIN_SUCCESS,\r\n\t\t\t// response\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n    console.log(error)\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.login.HOST_LOGIN_ERROR,\r\n      error\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\nexport function* loginUser (action) {\r\n\r\n  \ttry {\r\n\r\n      yield call(loginHandler);\r\n  \t// console.log('here')\r\n  \t\t\t\t\t\t\t\t\t\t\t\t\t // host_id\r\n  \t\t// const response = yield call(() => checkRoomcode(action.room_id))\r\n  \t\tyield put({\r\n  \t\t\ttype: ActionTypes.login.USER_LOGIN_SUCCESS,\r\n  \t\t\t// response\r\n  \t\t});\r\n\r\n  \t} catch(error) {\r\n      // console.log('here')\r\n  \t\tyield put({\r\n  \t\t\ttype: ActionTypes.login.USER_LOGIN_ERROR,\r\n        error\r\n  \t\t});\r\n\r\n  \t}\r\n  };\r\n\r\nexport function* logout (action) {\r\n\r\n\ttry {\r\n\t  yield call(signOutCurrentUser)\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.login.LOGOUT_SUCCESS,\r\n\t\t\t// response\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n    console.log('here')\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.login.LOGOUT_ERROR,\r\n      error\r\n\t\t});\r\n\r\n\t}\r\n};\r\n","// import firebase from './permissions.js';\r\n// import { roomBase } from '../store/dataBases';\r\n// import { addPoll, fetchAgenda, updatePollStatus, fetchPollData, getPollResults, getPollOrder, deletePoll } from './pollFunctions';\r\n// import { generateRoomHash, generatePollHash, compareHashes } from './hashFunctions';\r\n// import { userIsHost, userIsVoter } from '../LoginUtils.js';\r\n\r\nimport { getToken } from \"../LoginUtils\";\r\n\r\n\r\n// const firestore = firebase.firestore();\r\n// const fireauth = firebase.auth();\r\n\r\n// function generateRoomCode() {\r\n//     const code = Math.floor(Math.random() * 10000);\r\n//     const roomcode = `0000${code}`;\r\n\r\n//     return roomcode.slice(-4);\r\n// }\r\n\r\n// const checkRoomcode = async (host_id, room_id) => {\r\nconst checkRoomcode = async (room_id) => {\r\n    try {\r\n        let url = `https://facultyvoting.hamilton.edu:4000/room/CheckRoomcode?room_id=${room_id}`;\r\n        let response = await fetch(url);\r\n        if(response.status === 200) {\r\n            const data = await response.json();\r\n            return data;\r\n        }\r\n        else {\r\n            throw `Roomcode ${room_id} is either pending or not valid`;\r\n        }\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n// const checkRoomStatuses = async (rooms, order) => {\r\n//     // Ensure that all rooms' status matches the array they're in in order\r\n//     // (if they don't all match, the information was changed without updating the hash\r\n//     //console.log(typeof rooms);\r\n//     for (let roomKey in rooms) {\r\n//         let room = rooms[roomKey];\r\n//         let roomStatus = room['status'];\r\n//         if (!(order[roomStatus].indexOf(room['id']) > -1)) {\r\n//             console.log(\"!!Warning!! Room status in \" + room['title'] + \" has been changed. This means that the data has been tampered with via the Firebase Console!\");\r\n//             alert(\"Bad status warning - see console for more info.\");\r\n//             return false;\r\n//         }\r\n//     }\r\n\r\n//     // all good\r\n//     return true;\r\n// }\r\n\r\nconst fetchHostRooms = async (host_id) => {\r\n    try {\r\n        let url = `https://facultyvoting.hamilton.edu:4000/room/fetchHostRooms?host_id=${host_id}`;\r\n        let response = await fetch(url);\r\n        if(response.status === 200) {\r\n            return await response.json();\r\n        }\r\n        else {\r\n            throw `Failed to fetch rooms for host ${host_id}`;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst setRoomOrder = async (host_id, new_order) => {\r\n    try {\r\n        //console.log(new_order)\r\n        let url = `https://facultyvoting.hamilton.edu:4000/room/fetchHostRooms?host_id=${host_id}`;\r\n        let response = await fetch(url);\r\n        const data = await response.json();\r\n        if(response.status == 200) {\r\n            return data;\r\n        }\r\n        else {\r\n            throw `Failed to set room order for host ${host_id}`;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst deleteHostRoom = async (host_id, room_id) => {\r\n    try {\r\n        let url = `https://facultyvoting.hamilton.edu:4000/room/deleteHostRoom`;\r\n        let response = await fetch(url, { host_id: host_id, room_id: room_id });\r\n        const data = await response.json();\r\n        if(response.status == 200) {\r\n            return data;\r\n        }\r\n        else {\r\n            throw `Failed to delete room ${room_id} from host ${host_id}`;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst addHostRoom = async (host_id) => {\r\n    // if (!userIsHost(host_id)) {\r\n\t//     throw \"user is not host\";\r\n    // } else {\r\n        try {\r\n            let url = `https://facultyvoting.hamilton.edu:4000/room/addHostRoom`;\r\n            let response = await fetch(url, { user_id: getToken(),\r\n                                              host_id: host_id });\r\n            const data = await response.json();\r\n            if(response.status == 200) {\r\n                return data;\r\n            }\r\n            else {\r\n                throw `Failed to add host room for ${host_id}`;\r\n            }\r\n        } catch (error) {\r\n                console.log(error);\r\n        }\r\n    // }\r\n}\r\n\r\nconst updateRoom = async (host_id, room_id, room_state) => {\r\n    // if (!userIsHost(host_id)) {\r\n    //     throw \"user is not host\";\r\n    // } else {\r\n        try {\r\n            let url = `https://facultyvoting.hamilton.edu:4000/room/updateRoom`;\r\n            let response = await fetch(url, { host_id: host_id, room_id: room_id, room_state: room_state });\r\n            const data = await response.json();\r\n            if(response.status == 200) {\r\n                return data;\r\n            }\r\n            else {\r\n                throw `Failed to update room ${room_id} for host ${host_id}`;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw error;\r\n        }\r\n    // }\r\n}\r\n\r\nconst setPollOrder = async (host_id, room_id, new_order) => {\r\n    // TODO: move this to roomFunctions.js\r\n    // changes the order of the polls in the room\r\n\r\n    // if (!userIsHost(host_id)) {\r\n\t//     throw \"user is not host\";\r\n    // } else {\r\n        try {\r\n            let url = `https://facultyvoting.hamilton.edu:4000/room/setPollOrder`;\r\n            let response = await fetch(url, { host_id: host_id, room_id: room_id, new_order: new_order });\r\n            const data = await response.json();\r\n            if(response.status == 200) {\r\n                return data;\r\n            }\r\n            else {\r\n                throw `Failed to set poll order in room ${room_id} for host ${host_id}`;\r\n            }\r\n        } catch (error) {\r\n                console.log(error);\r\n                throw error\r\n        }\r\n    // }\r\n}\r\n\r\nconst getHost = async (room_id) => {\r\n    try {\r\n        let url = `https://facultyvoting.hamilton.edu:4000/room/getHost?room_id=${room_id}`;\r\n        let response = await fetch(url);\r\n        const data = await response.json();\r\n        if(response.status == 200) {\r\n            return data;\r\n        }\r\n        else {\r\n            throw `Failed to get host for room ${room_id}`;\r\n        }\r\n    } catch(error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nconst updateRoomStatus = async (host_id, room_id, new_status) => {\r\n    // if (!userIsHost(host_id)) {\r\n\t//     throw \"user is not host\";\r\n    // } else {\r\n        try {\r\n            let url = `https://facultyvoting.hamilton.edu:4000/room/updateRoomStatus`;\r\n            let response = await fetch(url, { host_id: host_id, room_id: room_id, new_status: new_status });\r\n            const data = await response.json();\r\n            if(response.status == 200) {\r\n                return data;\r\n            }\r\n            else {\r\n                throw `Failed to update room status for room ${room_id} for host ${host_id}`;\r\n            }\r\n        } catch(error) {\r\n                console.log(error)\r\n                throw error\r\n        }\r\n    // }\r\n}\r\n\r\nconst getRoomResults = async (host_id, room_id) => {\r\n    try {\r\n        let url = `https://facultyvoting.hamilton.edu:4000/room/getRoomResults?host_id=${host_id}&room_id=${room_id}`;\r\n        let response = await fetch(url);\r\n        const data = await response.json();\r\n        if(response.status == 200) {\r\n            return data;\r\n        }\r\n        else {\r\n            throw `Failed to get room results for room ${room_id} from host ${host_id}`;\r\n        }\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst fetchRoomData = async (host_id, room_id) => {\r\n    try {\r\n        let url = `https://facultyvoting.hamilton.edu:4000/room/fetchRoomData?host_id=${host_id}&room_id=${room_id}`;\r\n        let response = await fetch(url);\r\n        const data = await response.json();\r\n        if(response.status == 200) {\r\n            return data;\r\n        }\r\n        else {\r\n            throw `Failed to fetch room data from room ${room_id} for host ${host_id}`;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport { fetchRoomData, fetchHostRooms, deleteHostRoom, addHostRoom, updateRoom, setRoomOrder, checkRoomcode, setPollOrder, updateRoomStatus, getRoomResults, getHost }\r\n","import { call, put }     from \"redux-saga/effects\";\r\nimport ActionTypes       from '../actionTypes';\r\nimport { checkRoomcode }   from '../../databaseCommunication/roomFunctions';\r\n\r\n// async function fetchAsync (func) {\r\n// \tconst response = await func();\r\n// \tif (response) {\r\n// \t\treturn response;\r\n// \t}\r\n//\r\n// \tthrow new Error ('bad');\r\n// }\r\n\r\nexport function* validateRoomcode (action) {\r\n\r\n\ttry {\r\n\t\t//console.log('here')\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t // host_id\r\n\t\tconst response = yield call(() => checkRoomcode(action.room_id))\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.roomcode.CHECK_ROOMCODE_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n    \tconsole.log('here')\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.roomcode.CHECK_ROOMCODE_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\t}\r\n};\r\n","import { call, put }     from \"redux-saga/effects\";\r\nimport ActionTypes       from '../actionTypes';\r\nimport { fetchHostRooms,\r\n\t\t deleteHostRoom,\r\n\t\t addHostRoom }\t from '../../databaseCommunication/roomFunctions';\r\nimport { getUserId,\r\n         userIsHostOfRoom } \t\t\tfrom '../../LoginUtils';\r\n\r\n\r\nexport function* fetchRooms (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield call(getUserId);\r\n\t\t//console.log('here')\r\n\t\tconst response = yield call(fetchHostRooms, user_id);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostdash.FETCH_ROOMS_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostdash.FETCH_ROOMS_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\nexport function* deleteRoom (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield call(userIsHostOfRoom, action.room_id);\r\n\t\t                \t\t\t\t\t\t\t  // host_id\r\n\t\tconst response = yield call(() => deleteHostRoom(user_id, action.room_id))\r\n\t\t//console.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostdash.DELETE_ROOM_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\t\tconsole.log(error)\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostdash.DELETE_ROOM_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\nexport function* addRoom (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield call(getUserId);\r\n\t\t                                      // host_id\r\n\t\tconst response = yield call(addHostRoom, user_id);\r\n\t\t//console.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostdash.ADD_ROOM_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\t\tconsole.log('error')\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostdash.ADD_ROOM_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n","// import firebase from './permissions.js';\r\n// import { generatePollHash, generateRoomHash, compareHashes } from './hashFunctions';\r\n// import { pollBase } from '../store/dataBases';\r\n// import { fetchHostRooms, setPollOrder, getHost, fetchRoomData } from './roomFunctions';\r\n// import { userIsHost, getToken, userIsVoter, userIsHostOfRoom } from '../LoginUtils.js';\r\n\r\n// const firestore = firebase.firestore()\r\n\r\n// function generatePollId() {\r\n//     const id = Math.floor(Math.random() * 100);\r\n//     const poll_id = `00${id}`;\r\n\r\n//     return poll_id.slice(-2);\r\n// }\r\n\r\n// function generateUserOptionId() {\r\n//     const id = Math.floor(Math.random() * 1000);\r\n//     const poll_id = `000${id}`;\r\n\r\n//     return poll_id.slice(-3);\r\n// }\r\n\r\nconst fetchPollData = async (host_id, room_id, poll_id) => {\r\n    try {\r\n        let url = `https://facultyvoting.hamilton.edu:4000/poll/fetchPollData?host_id=${host_id}&room_id=${room_id}&pool_id=${poll_id}`;\r\n        let response = await fetch(url);\r\n        const data = await response.json();\r\n        if(response.status == 200) {\r\n            return data;\r\n        }\r\n        else {\r\n            throw `Failed to fetch poll data for poll ${poll_id} in room ${room_id} from host ${host_id}`;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst updatePoll = async (host_id, room_id, poll_id, poll_state) => {\r\n    // if (!userIsHost(host_id)) {\r\n    //     throw \"user is not host\";\r\n    // } else {\r\n        try {\r\n            let url = `https://facultyvoting.hamilton.edu:4000/poll/updatePoll`;\r\n            let response = await fetch(url, { host_id: host_id,\r\n                                              room_id: room_id,\r\n                                              poll_id: poll_id,\r\n                                              poll_state: poll_state });\r\n            const data = await response.json();\r\n            if(response.status == 200) {\r\n                return data;\r\n            }\r\n            else {\r\n                throw `Failed to update poll ${poll_id} in room ${room_id} from host ${host_id}`;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw error\r\n        }\r\n    // }\r\n}\r\n\r\nconst fetchAgenda = async (host_id, room_id) => {\r\n// const fetchAgenda = async (room_id) => {\r\n    try {\r\n        let url = `https://facultyvoting.hamilton.edu:4000/poll/fetchAgenda?host_id=${host_id}&room_id=${room_id}`;\r\n        let response = await fetch(url);\r\n        const data = await response.json();\r\n        if(response.status == 200) {\r\n            return data;\r\n        }\r\n        else {\r\n            throw `Failed to fetch agenda for room ${room_id} from host ${host_id}`;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst addPoll = async (host_id, room_id) => {\r\n        try {\r\n            let url = `https://facultyvoting.hamilton.edu:4000/poll/addPoll`;\r\n            let response = await fetch(url, { host_id: host_id,\r\n                                              room_id: room_id });\r\n            const data = await response.json();\r\n            if(response.status == 200) {\r\n                return data;\r\n            }\r\n            else {\r\n                throw `Failed to add poll to room ${room_id} from host ${host_id}`;\r\n            }\r\n        } catch (error) {\r\n                console.log(error);\r\n                throw error\r\n        }\r\n\r\n}\r\n\r\nconst updatePollStatus = async (host_id, room_id, poll_id, new_status) => {\r\n    // NEED TO CHECK DIFFERENCE IN POLLS IN NEW_STATUS AND CURRENT STATE AND THEN DELETE THOSE POLLS\r\n    // if (!userIsHost(host_id)) {\r\n\t//     throw \"user is not host\";\r\n    // } else {\r\n        try {\r\n            let url = `https://facultyvoting.hamilton.edu:4000/poll/updatePollStatus`;\r\n            let response = await fetch(url, { host_id: host_id,\r\n                                              room_id: room_id,\r\n                                              poll_id: poll_id,\r\n                                              new_status: new_status });\r\n            const data = await response.json();\r\n            if(response.status == 200) {\r\n                return data;\r\n            }\r\n            else {\r\n                throw `Failed to update poll status for poll ${poll_id} in room ${room_id} from host ${host_id}`;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n            throw 'Firebase error';\r\n        }\r\n    // }\r\n}\r\n\r\nconst getPollResults = async (user_id, room_id, poll_id, host_id = null) => {\r\n    try {\r\n        let url = `https://facultyvoting.hamilton.edu:4000/poll/getPollResults?user_id=${user_id}&room_id=${room_id}&pool_id=${poll_id}&host_id=${host_id}`;\r\n        let response = await fetch(url);\r\n        const data = await response.json();\r\n        if(response.status == 200) {\r\n            return data;\r\n        }\r\n        else {\r\n            throw `Failed to get poll results for poll ${poll_id} in room ${room_id}`;\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nconst submitVote = async (user_id, room_id, poll_id, selection, submission, userInput) => {\r\n    // HERE NEED TO PASS USERS USERNAME THROUGH SO EXPRESS CAN CHECK\r\n    // if (!(await userIsVoter())) {\r\n    //     alert(\"You do not have voting rights. Speak to the Dean of Faculty if you believe this is an error.\");\r\n    //     throw \"user does not have voting rights\";\r\n    // } else {\r\n        try {\r\n            let url = `https://facultyvoting.hamilton.edu:4000/poll/submitVote`;\r\n            let response = await fetch(url, { user_id: user_id,\r\n                                              room_id: room_id,\r\n                                              poll_id: poll_id,\r\n                                              selection: selection,\r\n                                              submission: submission,\r\n                                              userInput: userInput });\r\n            const data = await response.json();\r\n            if(response.status == 200) {\r\n                return data;\r\n            }\r\n            else {\r\n                throw `Failed to submit vote on poll ${poll_id} in room ${room_id} for user ${user_id}`;\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    // }\r\n}\r\n\r\nconst getPollOrder = async (host_id, room_id) => {\r\n    try {\r\n        let url = `https://facultyvoting.hamilton.edu:4000/poll/getPollOrder?host_id=${host_id}&room_id=${room_id}`;\r\n        let response = await fetch(url);\r\n        const data = await response.json();\r\n        if(response.status == 200) {\r\n            return data;\r\n        }\r\n        else {\r\n            throw `Failed to get poll order for room ${room_id} from host ${host_id}`;\r\n        }\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n// const countVotes = async (host_id, room_id, poll_id) => {\r\n//     try {\r\n//         let votes = {};\r\n//         let voteRef = firestore\r\n//                         .collection(host_id)\r\n//                         .doc(room_id)\r\n//                         .collection('polls')\r\n//                         .doc(poll_id)\r\n//                         .collection('Votes')\r\n//                         .doc('votes');\r\n//         let voteSnap = await voteRef.get();\r\n//         let voteData = voteSnap.data();\r\n        \r\n//         for(const[key, value] of Object.entries(voteData)) {\r\n//             let choices = value.choice;\r\n//             //console.log(choices)\r\n//             for(let i = 0; i < choices.length; i++) {\r\n//                 if(votes[choices[i]]) {\r\n//                     votes[choices[i]]++;\r\n//                 }\r\n//                 else {\r\n//                     votes[choices[i]] = 1;\r\n//                 } \r\n//             }\r\n//         }\r\n\r\n//         await voteRef.update({\r\n//             finalVotes: votes\r\n//         })\r\n        \r\n//         return;\r\n//     }\r\n//     catch (error) {\r\n//         console.log(error);\r\n//     }\r\n// }\r\n\r\nconst deletePoll = async (host_id, room_id, poll_id) => {\r\n    try {\r\n        let url = `https://facultyvoting.hamilton.edu:4000/poll/deletePoll`;\r\n        let response = await fetch(url, { host_id: host_id,\r\n                                          room_id: room_id,\r\n                                          poll_id: poll_id });\r\n        const data = await response.json();\r\n        if(response.status == 200) {\r\n            return data;\r\n        }\r\n        else {\r\n            throw `Failed to delete poll ${poll_id} in room ${room_id} from host ${host_id}`;\r\n        }\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport { fetchAgenda, addPoll, updatePollStatus, fetchPollData, getPollResults, updatePoll, submitVote, getPollOrder, deletePoll };\r\n","import { call, put }     from \"redux-saga/effects\";\r\nimport ActionTypes       from '../actionTypes';\r\nimport { fetchAgenda }   from '../../databaseCommunication/pollFunctions';\r\nimport { getUserId }     from '../../LoginUtils';\r\n\r\nexport function* fetchUserAgenda (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield call(getUserId); //check if viewing access\r\n\t\t                                          // host_id\r\n\t\tconst response = yield call(() => fetchAgenda(null, action.room_id))\r\n\t\tconsole.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.useragenda.FETCH_AGENDA_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\t\tconsole.log('error')\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.useragenda.FETCH_AGENDA_ERROR,\r\n      error\r\n\t\t});\r\n\r\n\t}\r\n};\r\n","import { select, call, put }     from \"redux-saga/effects\";\r\nimport ActionTypes       from '../actionTypes';\r\nimport { fetchAgenda, addPoll, updatePollStatus } \t\t  from '../../databaseCommunication/pollFunctions';\r\nimport { updateRoom, updateRoomStatus } \t\t  from '../../databaseCommunication/roomFunctions';\r\nimport { getUserId, userIsHostOfRoom } \t\t\tfrom '../../LoginUtils';\r\n\r\n// async function fetchAsync (func) {\r\n// \tconst response = await func();\r\n// \tif (response) {\r\n// \t\treturn response;\r\n// \t}\r\n//\r\n// \tthrow new Error ('bad');\r\n// }\r\n\r\nexport function* fetchHostAgenda (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield call(getUserId);\r\n\t\t// need to check if has viewing rights\r\n\t\t// console.log('here');                       host_id\r\n\t\tconst response = yield call(() => fetchAgenda(user_id, action.room_id))\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.FETCH_AGENDA_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\t\tconsole.log(error)\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.FETCH_AGENDA_ERROR,\r\n      error\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\nexport const roomSelector = ( state ) => {\r\n\treturn {\r\n\t\tstatus: state.hostagenda.status,\r\n\t\ttitle: state.hostagenda.title,\r\n\t\tpolls: state.hostagenda.polls,\r\n\t\torder: state.hostagenda.order\r\n\t}\r\n}\r\n\r\nexport function* updateHostAgenda (action) {\r\n\r\n\ttry {\r\n\t\tconst roomState = yield select(roomSelector);\r\n\t\tconst user_id = yield call(userIsHostOfRoom, action.room_id);\r\n\t\t                                          // host_id\r\n\t\tconst response = yield call(() => updateRoom(user_id, action.room_id, {...roomState}))\r\n\t\t// console.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.UPDATE_AGENDA_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\t\tconsole.log(error)\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.UPDATE_AGENDA_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n}\r\n\r\n// export function* deleteRoomPoll (action) {\r\n//\r\n// \ttry {\r\n// \t\tconst response = yield call(() => deleteHostRoom(action.room_id))\r\n// \t\tconsole.log(response);\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.DELETE_ROOM_SUCCESS,\r\n// \t\t\tresponse\r\n// \t\t});\r\n//\r\n// \t} catch(error) {\r\n//\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.DELETE_ROOM_ERROR,\r\n//       error\r\n// \t\t});\r\n//\r\n// \t}\r\n// };\r\n\r\nexport function* addRoomPoll (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield call(userIsHostOfRoom, action.room_id);\r\n\t\t                                       // host_id\r\n\t\tconst response = yield call(() => addPoll(user_id, action.room_id));\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.ADD_POLL_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.ADD_POLL_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\nexport function* changePollStatus (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield call(userIsHostOfRoom, action.room_id);\r\n\t\t                                                // host_id\r\n\t\tconst response = yield call(() => updatePollStatus(user_id, action.room_id,\r\n                                                       action.poll_id,\r\n                                                       action.newStatus ));\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.UPDATE_POLL_STATUS_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.UPDATE_POLL_STATUS_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\nexport function* changeRoomStatus (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield call(userIsHostOfRoom, action.room_id);\r\n\t\t\r\n\t\tconst response = yield call(() => updateRoomStatus(user_id, action.room_id, action.newStatus ));\r\n    \t//console.log(response)\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.UPDATE_ROOM_STATUS_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostagenda.UPDATE_ROOM_STATUS_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n","import { call, put, select }     from \"redux-saga/effects\";\r\nimport ActionTypes       from '../actionTypes';\r\nimport { fetchPollData, submitVote }   from '../../databaseCommunication/pollFunctions';\r\nimport { getUserId, userIsVoter }\t\t\t\tfrom '../../LoginUtils';\r\n\r\n\r\nexport function* fetchUserPoll (action) {\r\n\r\n\ttry {\r\n\t\t//console.log('here');\r\n\t\tconst user_id = yield call(getUserId)\r\n\t\t//console.log (user_id)\r\n\t\t                                             // host_id\r\n\t\tconst response = yield call(() => fetchPollData(null, action.room_id, action.poll_id))\r\n\t\t//console.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.userpoll.FETCH_POLL_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.userpoll.FETCH_POLL_ERROR,\r\n      error\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\nexport const pollSelector = ( state ) => {\r\n\treturn {\r\n\t\tselection: state.userpoll.pollStatus.selection,\r\n\t\tsubmission: state.userpoll.pollStatus.submission,\r\n\t\tuserInput: state.userpoll.userInput\r\n\t}\r\n}\r\n\r\nexport function* sendVote (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield call(userIsVoter);\r\n\r\n\t\tconst currentPoll = yield select(pollSelector);\r\n\t\tconst response = yield call(() => submitVote(user_id, action.room_id, action.poll_id,\r\n\t\t\t                                           currentPoll.selection, currentPoll.submission, currentPoll.userInput))\r\n\t\t//console.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.userpoll.SUBMIT_VOTE_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.userpoll.SUBMIT_VOTE_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n//\r\n// export function* addRoom (action) {\r\n//\r\n// \ttry {\r\n// \t\tconst response = yield call(addHostRoom);\r\n// \t\tconsole.log(response);\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.ADD_ROOM_SUCCESS,\r\n// \t\t\tresponse\r\n// \t\t});\r\n//\r\n// \t} catch(error) {\r\n//\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.ADD_ROOM_ERROR,\r\n//       error\r\n// \t\t});\r\n//\r\n// \t}\r\n// };\r\n","import { call, put, select }     from \"redux-saga/effects\";\r\nimport ActionTypes       from '../actionTypes';\r\nimport { fetchPollData, updatePoll, updatePollStatus }   from '../../databaseCommunication/pollFunctions';\r\nimport { getUserId,\r\n         userIsHostOfRoom } \t\t\tfrom '../../LoginUtils';\r\n\r\n// async function fetchAsync (func) {\r\n// \tconst response = await func();\r\n// \tif (response) {\r\n// \t\treturn response;\r\n// \t}\r\n//\r\n// \tthrow new Error ('bad');\r\n// }\r\n\r\nexport function* fetchHostPoll (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield call(userIsHostOfRoom, action.room_id)\r\n\t\t//console.log('here');                       // host_id\r\n\t\tconst response = yield call(() => fetchPollData(user_id, action.room_id, action.poll_id))\r\n\t\t//console.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostpoll.FETCH_POLL_SUCCESS,\r\n\t\t\tresponse,\r\n      \t\tlocation_state: action.location_state\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostpoll.FETCH_POLL_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\nconst roomSelector = ( state ) => {\r\n\treturn {...state.hostpoll.poll}\r\n}\r\n\r\nexport function* updateHostPoll (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield call(userIsHostOfRoom, action.room_id)\r\n\r\n\t\t//console.log('update')\r\n\t\tconst pollState = yield select(roomSelector);\r\n\t\tconst response = yield call(() => updatePoll(user_id, action.room_id, action.poll_id, pollState))\r\n\t\t//console.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostpoll.UPDATE_POLL_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostpoll.UPDATE_POLL_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\nexport function* changePollStatusPoll (action) {\r\n\r\n\ttry {\r\n\t\tconst user_id = yield call(userIsHostOfRoom, action.room_id)\r\n\t\tconsole.log('here');\r\n\t\tconst response = yield call(() => updatePollStatus(user_id, action.room_id, action.poll_id, action.status))\r\n\t  \tconst poll = response.polls[action.poll_id];\r\n    \t//console.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostpoll.UPDATE_POLL_STATUS_SUCCESS,\r\n\t\t\tpoll\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.hostpoll.UPDATE_POLL_STATUS_ERROR,\r\n      \t\terror\r\n\t\t});\r\n\r\n\t}\r\n};\r\n\r\n// export function* deleteRoom (action) {\r\n//\r\n// \ttry {\r\n// \t\tconst response = yield call(() => deleteHostRoom(action.room_id))\r\n// \t\tconsole.log(response);\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.DELETE_ROOM_SUCCESS,\r\n// \t\t\tresponse\r\n// \t\t});\r\n//\r\n// \t} catch(error) {\r\n//\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.DELETE_ROOM_ERROR,\r\n//       error\r\n// \t\t});\r\n//\r\n// \t}\r\n// };\r\n//\r\n// export function* addRoom (action) {\r\n//\r\n// \ttry {\r\n// \t\tconst response = yield call(addHostRoom);\r\n// \t\tconsole.log(response);\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.ADD_ROOM_SUCCESS,\r\n// \t\t\tresponse\r\n// \t\t});\r\n//\r\n// \t} catch(error) {\r\n//\r\n// \t\tyield put({\r\n// \t\t\ttype: ActionTypes.hostdash.ADD_ROOM_ERROR,\r\n//       error\r\n// \t\t});\r\n//\r\n// \t}\r\n// };\r\n","import { call, put }     from \"redux-saga/effects\";\r\nimport ActionTypes       from '../actionTypes';\r\n//import { getPollResults }   from '../MockDataFunctions';\r\nimport { getPollResults }   from '../../databaseCommunication/pollFunctions';\r\nimport { getUserId }\t\t\t\tfrom '../../LoginUtils';\r\n\r\n// async function fetchAsync (func) {\r\n// \tconst response = await func();\r\n// \tif (response) {\r\n// \t\treturn response;\r\n// \t}\r\n//\r\n// \tthrow new Error ('bad');\r\n// }\r\n\r\nexport function* fetchPollResults (action) {\r\n\r\n\ttry {\r\n\t\t//console.log('here');\r\n\t\tconst user_id = yield getUserId();\r\n\t\tconst response = yield call(() => getPollResults(user_id, action.room_id, action.poll_id))\r\n\t\tconsole.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.pollresults.FETCH_RESULTS_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.pollresults.FETCH_RESULTS_ERROR,\r\n      error\r\n\t\t});\r\n\r\n\t}\r\n};\r\n","import { call, put }     from \"redux-saga/effects\";\r\nimport ActionTypes       from '../actionTypes';\r\nimport { getRoomResults }   from '../../databaseCommunication/roomFunctions';\r\nimport { getUserId }\t\t\t\tfrom '../../LoginUtils';\r\n\r\n// async function fetchAsync (func) {\r\n// \tconst response = await func();\r\n// \tif (response) {\r\n// \t\treturn response;\r\n// \t}\r\n//\r\n// \tthrow new Error ('bad');\r\n// }\r\n\r\nexport function* fetchRoomResults (action) {\r\n\r\n\ttry {\r\n\t\t//console.log('here');\r\n\t\tconst user_id = yield getUserId();\r\n\t\tconsole.log(user_id);\r\n\t\tconst response = yield call(() => getRoomResults(user_id, action.room_id))\r\n\t\tconsole.log(response);\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.roomresults.FETCH_RESULTS_SUCCESS,\r\n\t\t\tresponse\r\n\t\t});\r\n\r\n\t} catch(error) {\r\n\r\n\t\tyield put({\r\n\t\t\ttype: ActionTypes.roomresults.FETCH_RESULTS_ERROR,\r\n      error\r\n\t\t});\r\n\r\n\t}\r\n};\r\n","import { takeLatest, all }             from \"redux-saga/effects\";\r\nimport ActionTypes                from '../actionTypes';\r\n\r\nimport { loginHost, loginUser }  from './login.saga';\r\nimport { validateRoomcode }   from './roomcode.saga'\r\nimport { fetchRooms,\r\n         deleteRoom,\r\n         addRoom }             from './hostdash.saga.js';\r\nimport { fetchUserAgenda }     from './useragenda.saga.js';\r\nimport { fetchHostAgenda, updateHostAgenda,\r\n         addRoomPoll,\r\n         changePollStatus,\r\n         changeRoomStatus }     from './hostagenda.saga.js';\r\nimport { fetchUserPoll,\r\n         sendVote }  from './userpoll.saga';\r\nimport { fetchHostPoll,\r\n         updateHostPoll,\r\n         changePollStatusPoll }  from './hostpoll.saga';\r\nimport { fetchPollResults } from './pollresults.saga';\r\nimport { fetchRoomResults } from './roomresults.saga';\r\n\r\n\r\n\r\n// watcher saga: watches for actions dispatched to the store, starts worker saga\r\n\r\nexport function* watcherSaga() {\r\n    yield takeLatest(ActionTypes.login.HOST_LOGIN_START, loginHost);\r\n    yield takeLatest(ActionTypes.login.USER_LOGIN_START, loginUser);\r\n    yield takeLatest(ActionTypes.roomcode.CHECK_ROOMCODE_START, validateRoomcode);\r\n    yield takeLatest(ActionTypes.hostdash.FETCH_ROOMS_START, fetchRooms);\r\n    yield takeLatest(ActionTypes.hostdash.DELETE_ROOM_START, deleteRoom);\r\n    yield takeLatest(ActionTypes.hostdash.ADD_ROOM_START, addRoom);\r\n    yield takeLatest(ActionTypes.useragenda.FETCH_AGENDA_START, fetchUserAgenda);\r\n    yield takeLatest(ActionTypes.hostagenda.FETCH_AGENDA_START, fetchHostAgenda);\r\n    yield takeLatest(ActionTypes.hostagenda.ADD_POLL_START, addRoomPoll );\r\n    yield takeLatest(ActionTypes.hostagenda.UPDATE_AGENDA_START, updateHostAgenda );\r\n    yield takeLatest(ActionTypes.hostagenda.UPDATE_POLL_STATUS_START, changePollStatus );\r\n    yield takeLatest(ActionTypes.hostagenda.UPDATE_ROOM_STATUS_START, changeRoomStatus );\r\n    yield takeLatest(ActionTypes.userpoll.FETCH_POLL_START, fetchUserPoll );\r\n    yield takeLatest(ActionTypes.hostpoll.FETCH_POLL_START, fetchHostPoll );\r\n    yield takeLatest(ActionTypes.hostpoll.UPDATE_POLL_START, updateHostPoll );\r\n    yield takeLatest(ActionTypes.hostpoll.UPDATE_POLL_STATUS_START, changePollStatusPoll );\r\n    yield takeLatest(ActionTypes.userpoll.SUBMIT_VOTE_START, sendVote );\r\n    yield takeLatest(ActionTypes.pollresults.FETCH_RESULTS_START, fetchPollResults );\r\n    yield takeLatest(ActionTypes.roomresults.FETCH_RESULTS_START, fetchRoomResults );\r\n\r\n}\r\n","import { createBrowserHistory as history} from 'history';\r\n\r\nexport default history();\r\n","export default {\r\n  smallMobile: 320,\r\n  mobile: 480,\r\n  tablet: 768,\r\n  smallDesktop: 1024,\r\n  desktop: 1280,\r\n  largeDesktop: 1440,\r\n  hdDesktop: 1600,\r\n  uhdDesktop: 1920\r\n};\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Breakpoints      from '../../components/theme/Breakpoints';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nconst getViewport = (windowWidth) => {\r\n\r\n  if (windowWidth <= Breakpoints.smallMobile) { return 'smallMobile'}\r\n  else if (windowWidth <= Breakpoints.mobile) { return 'mobile' }\r\n  else if (windowWidth <= Breakpoints.tablet) { return 'tablet'}\r\n  else if (windowWidth <= Breakpoints.smallDesktop) { return 'smallDesktop' }\r\n  else if (windowWidth <= Breakpoints.desktop) { return 'desktop' }\r\n  else if (windowWidth <= Breakpoints.largeDesktop) { return 'largeDesktop' }\r\n  else if (windowWidth <= Breakpoints.hdDesktop) { return 'hdDesktop' }\r\n  else { return 'uhdDesktop' }\r\n\r\n}\r\n\r\nclass ViewportHandler extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const initView = getViewport(window.innerWidth);\r\n    this.state = { viewport: initView };\r\n\r\n    this.handleResize = this.handleResize.bind(this);\r\n  }\r\n\r\n  async handleResize(e) {\r\n\r\n    const viewport = getViewport(window.innerWidth);\r\n\r\n    if (this.state.viewport === viewport) { return; }\r\n\r\n    await this.setState({\r\n      ...this.state,\r\n      viewport: viewport\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleResize)\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"resize\", this.handleResize)\r\n  }\r\n\r\n  render () {\r\n\r\n    console.log(this.state)\r\n    return (\r\n      <>\r\n        {React.cloneElement(this.props.children, { viewport: this.state.viewport })}\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nViewportHandler.propTypes = propTypes;\r\nViewportHandler.defaultProps = defaultProps;\r\n\r\nexport default ViewportHandler;\r\n","export const Colors = {\r\n  'Green' : '#74C74F',\r\n  '#74C74F' : '#74C74F',\r\n\r\n  'Yellow' : '#F5B700',\r\n  '#F5B700': '#F5B700',\r\n\r\n  'Red' : '#F24236',\r\n  '#F24236' : '#F24236',\r\n\r\n  'Blue' : '#013087',\r\n  '#1C77C3' : '#013087',\r\n\r\n  'LightBlue': '#39A9DB',\r\n  '#39A9DB' : '#39A9DB',\r\n\r\n  'DarkGreen' : '#19535F',\r\n  '#19535F' : '#19535F',\r\n\r\n  'Pine' : '#0B7A75',\r\n  '#0B7A75' : '#0B7A75',\r\n\r\n  'Charcol' : '#495159',\r\n  '#495159' : '#495159',\r\n\r\n  'Black'   : '#282828',\r\n  '#282828' : '#282828',\r\n\r\n  'White' : '#FFFFFF',\r\n  '#FFFFFF' : '#FFFFFF',\r\n\r\n  'LightGrey': '#d3d3d3',\r\n  '#d3d3d3': '#d3d3d3',\r\n\r\n  'Buff': '#CFB387',\r\n  '#CFB387': '#CFB387',\r\n};\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes\t\tfrom 'react-extra-prop-types';\r\n\r\n\r\nconst propTypes = {\r\n  primitive: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n\r\n  color: ExtraPropTypes.color,\r\n  fontSize: PropTypes.number,\r\n  lineHeight: PropTypes.number,\r\n};\r\n\r\nconst defaultProps = {\r\n  primitive: 'span',\r\n};\r\n\r\nconst TextWrapper = styled.span`\r\n  color: ${({color}) => color}px;\r\n  font-size: ${({fontSize}) => fontSize}px;\r\n  line-height: ${({lineHeight}) => lineHeight}px;\r\n  margin: 0;\r\n`;\r\n\r\nconst Text = ( props ) => {\r\n\r\n  const { primitive, children, ...rest } = props;\r\n\r\n  return (\r\n    <TextWrapper as={primitive} {...rest}>\r\n      {children}\r\n    </TextWrapper>\r\n  );\r\n};\r\n\r\nText.propTypes = propTypes;\r\nText.defaultProps = defaultProps;\r\n\r\nexport default Text;\r\n","import WebFont from 'webfontloader';\r\n\r\nconst WebFontConfig = {\r\n  google:{\r\n  \tfamilies: ['Open Sans', 'Montserrat:300,900', 'Work Sans']\r\n  }\r\n};\r\n\r\nWebFont.load(WebFontConfig);\r\n\r\nexport const Fonts = {\r\n\tMontserrat: 'Montserrat',\r\n  WorkSans: 'Work Sans',\r\n  OpenSans: 'Open Sans'\r\n};\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Text             from './Text'\r\nimport { Fonts }        from './Fonts';\r\nimport { Colors }       from './Colors';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  primative: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h6', 'span', 'p']),\r\n\r\n  color: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  primitive: 'p',\r\n\r\n  color: Colors.Black,\r\n};\r\n\r\nconst fontConfig = {\r\n  fontFamily: Fonts.WorkSans,\r\n  fontWeight: 'bold',\r\n\r\n  twoExtraSmall: { fontSize: 12, lineHeight: 18  },\r\n  extraSmall: { fontSize: 14, lineHeight: 20  },\r\n  small: { fontSize: 16, lineHeight: 22 },\r\n  medium: { fontSize: 20, lineHeight: 28  },\r\n  large: { fontSize: 26, lineHeight: 36 },\r\n  extraLarge: { fontSize: 32, lineHeight: 42 }\r\n};\r\n\r\nconst BodyWrapper = styled(Text)`\r\n  font-weight: ${fontConfig.fontWeight};\r\n  font-family: ${fontConfig.fontFamily};\r\n  color: ${({color}) => color};\r\n  white-space: pre-line;\r\n`;\r\n\r\nconst Body = ( props ) => {\r\n\r\n  const { primitive, extraLarge, large, medium, small, extraSmall, twoExtraSmall,\r\n          children, color, ...rest } = props;\r\n\r\n  let sizeConfig = {};\r\n  if (extraLarge) { sizeConfig = fontConfig.extraLarge }\r\n  else if (large) { sizeConfig = fontConfig.large }\r\n  else if (small) { sizeConfig = fontConfig.small }\r\n  else if (extraSmall) { sizeConfig = fontConfig.extraSmall }\r\n  else if (twoExtraSmall) { sizeConfig = fontConfig.twoExtraSmall }\r\n  else { sizeConfig = fontConfig.medium }\r\n\r\n  return(\r\n    <BodyWrapper color={color}\r\n                 primitive={primitive}\r\n                 fontSize={sizeConfig.fontSize}\r\n                 lineHeight={sizeConfig.lineHeight}\r\n                 {...rest}>\r\n      {children}\r\n    </BodyWrapper>\r\n  );\r\n};\r\n\r\nBody.propTypes = propTypes;\r\nBody.defaultProps = defaultProps;\r\n\r\nexport default Body;\r\n","import React\t\t\t\t\t\tfrom 'react';\r\nimport styled\t \t\t\t\t\tfrom 'styled-components';\r\nimport PropTypes \t\t\t\tfrom 'prop-types';\r\nimport ExtraPropTypes\t\tfrom 'react-extra-prop-types';\r\n\r\nimport { Colors }       from './Colors';\r\nimport { Fonts } \t\t\t\tfrom './Fonts';\r\n\r\nimport Text \t\t\t\t\t\tfrom './Text';\r\n\r\nconst propTypes = {\r\n\tchildren: PropTypes.node,\r\n\tprimitive: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'span', 'p']),\r\n\r\n\tcolor: ExtraPropTypes.color,\r\n\r\n\tfiveExtraSmall: PropTypes.bool,\r\n\tfourExtraSmall: PropTypes.bool,\r\n\tthreeExtraSmall: PropTypes.bool,\r\n\ttwoExtraSmall: PropTypes.bool,\r\n\textraSmall: PropTypes.bool,\r\n\tsmall: PropTypes.bool,\r\n\tmedium: PropTypes.bool,\r\n\tlarge: PropTypes.bool,\r\n\textraLarge: PropTypes.bool,\r\n\ttwoExtraLarge: PropTypes.bool,\r\n\tthreeExtraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n\tcolor: Colors.Black,\r\n\tprimitive: 'h1'\r\n};\r\n\r\nconst fontConfig = {\r\n  fontFamily: Fonts.Montserrat,\r\n\tfontWeight: '900',\r\n\r\n\tthreeExtraLarge: { fontSize: 160, lineHeight: 160},\r\n\ttwoExtraLarge: { fontSize: 140, lineHeight: 140},\r\n\textraLarge: { fontSize: 120, lineHeight: 120},\r\n\tlarge: { fontSize: 104, lineHeight: 104},\r\n\tmedium: { fontSize: 86, lineHeight: 86},\r\n\tsmall: { fontSize: 74, lineHeight: 74},\r\n\textraSmall: { fontSize: 56, lineHeight: 56},\r\n\ttwoExtraSmall: { fontSize: 48, lineHeight: 48},\r\n\tthreeExtraSmall: { fontSize: 32, lineHeight: 32},\r\n\tfourExtraSmall: { fontSize: 24, lineHeight: 24},\r\n\tfiveExtraSmall: { fontSize: 20, lineHeight: 20 }\r\n};\r\n\r\nconst JumboComponent = styled(Text)`\r\n\tfont-weight: ${fontConfig.fontWeight};\r\n\tfont-family: ${fontConfig.fontFamily};\r\n\tcolor: ${({color})=>color};\r\n\tletter-spacing: 0.02em;\r\n`;\r\n\r\n\r\nconst Jumbo = ( props ) => {\r\n\r\n\tconst { color,\r\n\t\t      primitive,\r\n\t\t      children,\r\n\t\t\t\t\tthreeExtraLarge,\r\n\t\t\t\t\ttwoExtraLarge,\r\n\t\t\t\t\textraLarge,\r\n\t\t\t\t\tlarge,\r\n\t\t\t\t\tmedium,\r\n\t\t\t\t\tsmall,\r\n\t\t\t\t\textraSmall,\r\n\t\t\t\t\ttwoExtraSmall,\r\n\t\t\t\t\tthreeExtraSmall,\r\n\t\t\t\t\tfourExtraSmall,\r\n\t\t\t\t\tfiveExtraSmall,\r\n\t\t\t\t\t...rest } = props\r\n\r\n\tlet sizeConfig = {};\r\n\r\n\tif(threeExtraLarge) {\r\n\t\tsizeConfig = fontConfig.threeExtraLarge;\r\n\t} else if(twoExtraLarge) {\r\n\t\tsizeConfig = fontConfig.twoExtraLarge;\r\n\t} else if (large) {\r\n\t\tsizeConfig = fontConfig.large;\r\n\t} else if (medium) {\r\n\t\tsizeConfig = fontConfig.medium;\r\n\t} else if (small) {\r\n\t\tsizeConfig = fontConfig.small;\r\n\t} else if (extraSmall) {\r\n\t\tsizeConfig = fontConfig.extraSmall;\r\n\t} else if (twoExtraSmall) {\r\n\t\tsizeConfig = fontConfig.twoExtraSmall;\r\n\t} else if (threeExtraSmall) {\r\n\t\tsizeConfig = fontConfig.threeExtraSmall;\r\n\t} else if (fourExtraSmall) {\r\n\t\tsizeConfig = fontConfig.fourExtraSmall;\r\n\t} else if (fiveExtraSmall) {\r\n\t\tsizeConfig = fontConfig.fiveExtraSmall;\r\n\t} else {\r\n\t\tsizeConfig = fontConfig.extraLarge;\r\n  }\r\n\r\n\treturn (\r\n\t\t<JumboComponent color={color}\r\n\t\t\t\t\t\t\t\t\t\tprimitive={primitive}\r\n\t\t\t\t\t\t\t\t\t\tfontSize={sizeConfig.fontSize}\r\n\t\t\t\t\t\t\t\t\t\tlineHeight={sizeConfig.lineHeight}\r\n\t\t\t\t\t\t\t\t\t\t{...rest}>\r\n\t      {children}\r\n\t\t</JumboComponent>);\r\n};\r\n\r\nJumbo.propTypes = propTypes;\r\nJumbo.defaultProps = defaultProps;\r\n\r\nexport default Jumbo;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from './Colors';\r\nimport Body             from './Body';\r\nimport Jumbo            from './Jumbo';\r\nimport logo     from './logo.png';\r\n\r\nconst Wrapper = styled.div`\r\n  background: ${Colors.White};\r\n  border-bottom: 5px solid ${Colors.Buff};\r\n  width: 100%;\r\n  padding: 5px;\r\n  height: 7vh;\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst PageHeader = () => {\r\n\r\n  return (\r\n    <Wrapper>\r\n      <img src={logo} alt={'Logo'} height={'50vh'}/>\r\n    </Wrapper>\r\n  )\r\n};\r\n\r\n\r\nexport default PageHeader;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Body             from '../theme/Body'\r\n\r\nconst Wrapper = styled.div`\r\n  background: ${Colors.Blue};\r\n  border-top: 2px solid ${Colors.Buff};\r\n  width: 100%;\r\n  padding: 2px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 3vh;\r\n`;\r\n\r\nconst PageFooter = () => {\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Body twoExtraSmall color={Colors.Buff}> CS410: Faculty Voting - Fall 2020 </Body>\r\n    </Wrapper>\r\n  )\r\n};\r\n\r\n\r\nexport default PageFooter;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport PageHeader       from '../../components/theme/PageHeader'\r\nimport PageFooter       from '../../components/theme/PageFooter'\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  color: ExtraPropTypes.color,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nconst PageWrapper = styled.div`\r\n  background-color: ${({color}) => color};\r\n  right: 0;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  position: fixed;\r\n\r\n  overflow: auto;\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between\r\n`;\r\n\r\nconst CenterWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  padding-top: 5vh;\r\n  flex-grow: 2;\r\n`;\r\n\r\nconst BasePageWrapper = (props) => {\r\n  return (\r\n    <PageWrapper color={props.color}>\r\n      <PageHeader />\r\n      <CenterWrapper>\r\n        {props.children}\r\n      </CenterWrapper>\r\n      <PageFooter />\r\n    </PageWrapper>\r\n  )\r\n}\r\n\r\nBasePageWrapper.propTypes = propTypes;\r\nBasePageWrapper.defaultProps = defaultProps;\r\n\r\nexport default BasePageWrapper;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\n\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../../components/theme/Colors';\r\nimport BasePage         from './BasePage';\r\n\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  color: ExtraPropTypes.color,\r\n};\r\n\r\nconst defaultProps = {\r\n  color: Colors.Blue\r\n};\r\n\r\nconst ComponentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 90%;\r\n  height: 80%;\r\n`;\r\n\r\n\r\nconst MainPage = ( props ) => {\r\n\r\n  console.log(props);\r\n\r\n  return (\r\n    <BasePage color={props.color}>\r\n      <ComponentWrapper>\r\n        {React.cloneElement(props.children, { viewport: props.viewport })}\r\n      </ComponentWrapper>\r\n    </BasePage>\r\n  )\r\n}\r\n\r\nMainPage.propTypes = propTypes;\r\nMainPage.defaultProps = defaultProps;\r\n\r\nexport default MainPage;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Body             from '../theme/Body';\r\nimport Jumbo             from '../theme/Jumbo';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  onClick: PropTypes.func,\r\n\r\n  backgroundColor: ExtraPropTypes.color,\r\n  textColor: ExtraPropTypes.color,\r\n\r\n  extraLarge: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  extraSmall: PropTypes.bool\r\n};\r\n\r\nconst defaultProps = {\r\n  onClick: undefined,\r\n  backgroundColor: Colors.Blue,\r\n  textColor: Colors.White,\r\n};\r\n\r\nconst BodyText = styled(Body)`\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst JumboText = styled(Jumbo)`\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ButtonComponent = styled.button`\r\n  background: ${({backgroundColor}) => backgroundColor};\r\n  position: relative;\r\n  display: inline-block;\r\n  cursor: ${({disabled}) => disabled ? `default` : `pointer`};\r\n  outline: none;\r\n  border: 0px;\r\n  vertical-align: middle;\r\n  horizontal-align: middle;\r\n  text-decoration: none;\r\n  border-radius: 42px;\r\n\r\n  width: 100%;\r\n  padding-right: ${({padding}) => padding};\r\n  padding-left: ${({padding}) => padding};\r\n`;\r\n\r\nconst buttonConfig = {\r\n  extraLarge: { buttonHeight: `44px`,\r\n                padding: `28px` },\r\n  large: { buttonHeight: `40px`,\r\n           padding: `22px`},\r\n  medium: { buttonHeight: `34px`,\r\n            padding: `16px` },\r\n  small: { buttonHeight: `28px`,\r\n           padding: `14px`},\r\n  extraSmall: { buttonHeight: `24px`,\r\n           padding: `12px`},\r\n};\r\n\r\nconst Button = ( props ) => {\r\n\r\n  const { children, backgroundColor, textColor, onClick, jumbo, ...rest} = props;\r\n\r\n  const bodyText = <BodyText color={textColor} children={children} {...rest}/>;\r\n  const jumboText = <JumboText color={textColor} children={children} {...rest}/>;\r\n\r\n  let config;\r\n\r\n  if (props.extraLarge) { config = buttonConfig.extraLarge }\r\n  else if (props.large) { config = buttonConfig.large }\r\n  else if (props.small) { config = buttonConfig.small }\r\n  else if (props.extraSmall) { config = buttonConfig.extraSmall }\r\n  else { config = buttonConfig.medium }\r\n\r\n  return(\r\n    <ButtonComponent padding={config.padding}\r\n                     buttonHeight={config.buttonHeight}\r\n                     {...props}>\r\n      { jumbo ? jumboText : bodyText }\r\n    </ButtonComponent>\r\n  );\r\n};\r\n\r\nButton.propTypes = propTypes;\r\nButton.defaultProps = defaultProps;\r\n\r\nexport default Button;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\n\r\nconst propTypes = {\r\n  color: ExtraPropTypes.color,\r\n\r\n  height: PropTypes.string,\r\n  width: PropTypes.string,\r\n  padding: PropTypes.number,\r\n  borderRadius: PropTypes.number,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n}\r\n\r\nconst defaultProps = {\r\n  color: Colors.White,\r\n  borderColor: Colors.White\r\n}\r\n\r\nconst CardComponent = styled.div`\r\n  box-sizing: border-box;\r\n  background-color: ${({color}) => color};\r\n  border-radius: ${({borderRadius}) => borderRadius}px;\r\n  ${({height}) => height ?`height: ${height}` : `height: auto`};\r\n  width: ${({width}) => width ? `${width}` : `auto`};\r\n  padding: ${({padding}) => padding}px;\r\n  ${({borderColor, borderWidth}) => borderColor ? `border: ${borderWidth}px solid ${borderColor}` : ``};\r\n`;\r\n\r\nconst paddingConfig = {\r\n  extraSmall: {\r\n    small: 8,\r\n    medium: 10,\r\n    large: 20,\r\n  },\r\n  small: {\r\n    small: 10,\r\n    medium: 12,\r\n    large: 25,\r\n  },\r\n  medium: {\r\n    small: 15,\r\n    medium: 25,\r\n    large: 35,\r\n  },\r\n  large: {\r\n    small: 20,\r\n    medium: 42,\r\n    large: 50,\r\n  }\r\n}\r\n\r\nconst getPadding = (size, borderSmall, borderMedium, borderLarge) => {\r\n\r\n  if (borderSmall) { return paddingConfig[size].small}\r\n  else if (borderLarge) { return paddingConfig[size].large}\r\n  else { return paddingConfig[size].medium}\r\n}\r\n\r\nconst Card = ( props ) => {\r\n\r\n  const { children, borderSmall, borderMedium, borderLarge,\r\n          extraSmall, small, medium, large, ...rest } = props;\r\n\r\n  let borderRadius;\r\n  if ( borderSmall ) { borderRadius = 5 }\r\n  else if ( borderLarge ) { borderRadius = 20 }\r\n  else { borderRadius = 15 }\r\n\r\n  let padding;\r\n  let borderWidth;\r\n  if ( extraSmall ) { padding = getPadding('extraSmall', borderSmall, borderMedium, borderLarge); borderWidth = 3 }\r\n  else if ( small ) { padding = getPadding('small', borderSmall, borderMedium, borderLarge); borderWidth = 3 }\r\n  else if ( large ) { padding = getPadding('large', borderSmall, borderMedium, borderLarge); borderWidth = 5 }\r\n  else { padding = getPadding('medium', borderSmall, borderMedium, borderLarge); borderWidth = 5 }\r\n\r\n  return (\r\n    <CardComponent borderRadius={borderRadius}\r\n                   borderWidth={borderWidth}\r\n                   padding={padding}\r\n                   {...rest}>\r\n      {children}\r\n    </CardComponent>\r\n  )\r\n};\r\n\r\nCard.propTypes = propTypes;\r\nCard.defaultProps = defaultProps;\r\n\r\nexport default Card;\r\n","import React                from 'react';\r\nimport styled               from 'styled-components';\r\n\r\nimport { Colors }           from '../theme/Colors';\r\nimport Button                from '../buttons/Button';\r\n\r\nimport Card                 from './Card';\r\n\r\nconst CenterRowWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  ${({padding}) => padding ? `padding-bottom: ${padding}px;` : ``}\r\n`;\r\n\r\nconst LoginWrapper = styled.div`\r\n  width: 75%;\r\n  min-width: 250px;\r\n`;\r\n\r\nconst HostWrapper = styled.div`\r\n  display: inline-block\r\n`;\r\n\r\nconst LoginCard = ( props ) => {\r\n\r\n  const { onHostLogin, onUserLogin,\r\n          extraSmall, small, medium, large } = props;\r\n\r\n  console.log(props)\r\n\r\n  let padding;\r\n\r\n  if ( extraSmall ) { padding = 20 }\r\n  else if ( small ) { padding = 25 }\r\n  else if ( large ) { padding = 35 }\r\n  else { padding = 30 }\r\n\r\n  const _renderLogin = (\r\n    <CenterRowWrapper padding={padding}>\r\n      <LoginWrapper>\r\n        <Button jumbo\r\n                extraSmall={extraSmall} small={small}\r\n                medium={medium} large={large}\r\n                backgroundColor={Colors.Buff}\r\n                onClick={onUserLogin}>\r\n          LOGIN\r\n        </Button>\r\n      </LoginWrapper>\r\n    </CenterRowWrapper>\r\n  );\r\n\r\n  const _renderHostLogin = (\r\n    <CenterRowWrapper>\r\n      <HostWrapper>\r\n        <Button small={extraSmall} medium={small}\r\n                large={medium} extraLarge={large}\r\n                onClick={onHostLogin}>\r\n          LOGIN AS HOST\r\n        </Button>\r\n      </HostWrapper>\r\n    </CenterRowWrapper>\r\n  );\r\n\r\n  return (\r\n    <Card borderLarge {...{extraSmall, small, medium, large}} color={Colors.Blue} borderColor={Colors.Blue}>\r\n      {_renderLogin}\r\n      {_renderHostLogin}\r\n    </Card>\r\n  )\r\n};\r\n\r\nexport default LoginCard;\r\n","import React                from 'react';\r\nimport styled               from 'styled-components';\r\nimport ParticlesBg          from 'particles-bg';\r\n\r\nimport { connect }          from 'react-redux';\r\nimport ActionTypes          from '../store/actionTypes';\r\nimport history              from '../history';\r\n\r\nimport ViewportHandler      from './format-pages/ViewportHandler';\r\nimport MainPage             from './format-pages/MainPage';\r\nimport { Colors }           from '../components/theme/Colors';\r\n\r\nimport LoginCard            from '../components/cards/LoginCard';\r\n\r\n// import {userIsLoggedIn, userLogin, signOutCurrentUser, getCurrentUserEmail, userIsHamiltonian } from '../LoginUtils.js';\r\n\r\nconst LoginWrapper = styled.div`\r\n  width: ${({width}) => width};\r\n`;\r\n\r\n// const userLoginHandler = async () => {\r\n//     await userLogin().then(() => {\r\n// \tif (!userIsHamiltonian()) {\r\n// \t    console.log(\"User \" + getCurrentUserEmail() + \" is not within Hamilton domain. Logging out.\");\r\n// \t    alert(\"Please log in with a Hamilton account. (And enable pop-ups so the new login window appears)\");\r\n// \t    signOutCurrentUser();\r\n// \t} else {\r\n// \t    pushLandingPage(\"user\");\r\n// \t}\r\n//     });\r\n// }\r\n//\r\n// const hostLoginHandler = async () => {\r\n//     await userLogin().then(() => {\r\n// \tif (!userIsHamiltonian()) {\r\n// \t    console.log(\"User \" + getCurrentUserEmail() + \" is not within Hamilton domain. Logging out.\");\r\n// \t    alert(\"Please log in with a Hamilton account. (And enable pop-ups if you don't see the login window appear)\");\r\n// \t    signOutCurrentUser();\r\n// \t} else {\r\n// \t    pushLandingPage(\"host\");\r\n// \t}\r\n//     });\r\n// }\r\n//\r\n// const pushLandingPage = async (userOrHost) => {\r\n//     if (userIsLoggedIn() && userIsHamiltonian()) {\r\n// \tif (userOrHost == \"user\") {\r\n// \t    history.push('/RoomCode');\r\n// \t} else {\r\n// \t    history.push('/HostDash');\r\n// \t}\r\n//     } else {\r\n// \tconsole.log(\"Nobody is logged in, but new page was attempted to be loaded. User probably closed pop-up\");\r\n//     }\r\n// }\r\n\r\nconst LoginComponent = ( props ) => {\r\n\r\n  let width;\r\n  let size = {};\r\n  switch (props.viewport) {\r\n    case 'smallDesktop':\r\n      width = `75%`;\r\n      size.small = true;\r\n      break;\r\n    case 'tablet':\r\n      width = `100%`;\r\n      size.small = true;\r\n      break;\r\n    case 'mobile':\r\n    case 'smallMobile':\r\n      width = `100%`\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'hdDesktop':\r\n    case 'uhdDesktop':\r\n      width = `50%`\r\n      size.medium = true;\r\n      break;\r\n    default:\r\n      width = `50%`\r\n      size.small = true;\r\n  }\r\n\r\n  return (\r\n    <LoginWrapper width={width}>\r\n      <LoginCard onUserLogin={props.onUserLogin}\r\n                 onHostLogin={props.onHostLogin}\r\n                 viewport={props.viewport}\r\n                 {...size}/>\r\n    </LoginWrapper>\r\n  )\r\n}\r\n\r\nconst LoginPage = ( props ) => {\r\n\r\n  console.log(props)\r\n\r\n  if (props.error) {\r\n    props.onLogout();\r\n    alert(\"Please log in with a Hamilton account. (And enable pop-ups if you don't see the login window appear)\");\r\n  }\r\n\r\n  if (props.loginType === 'host') {\r\n    history.push('/HostDash');\r\n  }\r\n  else if (props.loginType === 'user') {\r\n    history.push('/Roomcode')\r\n  }\r\n\r\n  return (\r\n    <ViewportHandler>\r\n      <MainPage color={Colors.Blue}>\r\n          <LoginComponent {...props}/>\r\n      </MainPage>\r\n    </ViewportHandler>\r\n  )\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    loginType: state.login.loginType,\r\n    loading: state.login.loading,\r\n    error: state.login.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onHostLogin: () => dispatch({ type: ActionTypes.login.HOST_LOGIN_START }),\r\n    onUserLogin: () => dispatch({ type: ActionTypes.login.USER_LOGIN_START }),\r\n    onLogout: () => dispatch({ type: ActionTypes.login.LOGOUT_START }),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n\r\n// export default LoginPage;\r\n","import React, {Component} from 'react';\r\nimport styled             from 'styled-components'\r\n\r\nimport Login from './pages/Login';\r\n\r\nclass App extends Component {\r\n\r\n\r\n  render(){\r\n\r\n    return (\r\n      <Login />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React                from 'react';\r\nimport styled               from 'styled-components';\r\nimport ParticlesBg          from 'particles-bg';\r\n\r\nimport ViewportHandler      from './format-pages/ViewportHandler';\r\nimport MainPage             from './format-pages/MainPage';\r\nimport { Colors }           from '../components/theme/Colors';\r\n\r\nimport Jumbo          from '../components/theme/Jumbo';\r\n\r\n\r\nconst LoginWrapper = styled.div`\r\n  width: ${({width}) => width};\r\n`;\r\n//\r\n// const LoginComponent = ( props ) => {\r\n//\r\n//   let width;\r\n//   let size = {};\r\n//   switch (props.viewport) {\r\n//     case 'smallDesktop':\r\n//       width = `75%`;\r\n//       size.small = true;\r\n//       break;\r\n//     case 'tablet':\r\n//       width = `100%`;\r\n//       size.small = true;\r\n//       break;\r\n//     case 'mobile':\r\n//     case 'smallMobile':\r\n//       width = `100%`\r\n//       size.extraSmall = true;\r\n//       break;\r\n//     case 'hdDesktop':\r\n//     case 'uhdDesktop':\r\n//       width = `50%`\r\n//       size.medium = true;\r\n//       break;\r\n//     default:\r\n//       width = `50%`\r\n//       size.small = true;\r\n//   }\r\n\r\nconst LoginPage = ( props ) => {\r\n\r\n  console.log(props)\r\n\r\n  return (\r\n    <ViewportHandler>\r\n      <MainPage color={Colors.LightBlue}>\r\n          <Jumbo color={Colors.White}>\r\n            Loading...\r\n          </Jumbo>\r\n      </MainPage>\r\n    </ViewportHandler>\r\n  )\r\n};\r\n\r\nexport default LoginPage;\r\n","import React                from 'react';\r\nimport styled               from 'styled-components';\r\nimport PropTypes            from 'prop-types';\r\nimport ExtraPropTypes       from 'react-extra-prop-types';\r\n\r\nimport { Colors }           from '../theme/Colors';\r\nimport Jumbo                from '../theme/Jumbo';\r\n\r\nimport Card                 from './Card';\r\n\r\nconst propTypes = {\r\n  cardColor: ExtraPropTypes.color,\r\n  cardBorderColor: ExtraPropTypes.color,\r\n  height: PropTypes.string,\r\n  textColor: PropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n}\r\n\r\nconst defaultProps = {\r\n  textColor: Colors.Blue\r\n}\r\n\r\nconst CenterWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n`;\r\n\r\n\r\nconst LoginCard = ( props ) => {\r\n\r\n  const { cardColor, cardBorderColor, height,\r\n          textColor,\r\n          extraSmall, small, medium, large, ...rest } = props;\r\n\r\n  return (\r\n    <Card color={props.cardColor} height={props.height || 'stretch'} width={`100%`}\r\n          borderLarge borderColor={props.cardBorderColor}\r\n          {...{extraSmall, small, medium, large}}\r\n          {...rest}>\r\n      <CenterWrapper>\r\n        <Jumbo color={textColor}\r\n               threeExtraSmall={extraSmall} extraSmall={small}\r\n               small={medium} medium={large} large={props.extraLarge}>\r\n          Loading...\r\n        </Jumbo>\r\n      </CenterWrapper>\r\n    </Card>\r\n  )\r\n};\r\n\r\nexport default LoginCard;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool\r\n};\r\n\r\nconst defaultProps = {\r\n};\r\n\r\nconst GroupWrapper = styled.div`\r\n  width: auto;\r\n`;\r\n\r\nconst ItemWrapper = styled.div`\r\n  ${({lastChild, padding}) => !lastChild ? `padding-bottom: ${padding}px;` : ``}\r\n  width: auto;\r\n`;\r\n\r\nconst _renderOptions = ( props ) => {\r\n\r\n  const { children, onClick, ...rest } = props;\r\n\r\n  const { extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  let padding;\r\n\r\n  if ( extraSmall ) { padding = 10}\r\n  else if ( small ) { padding = 10 }\r\n  else if ( large ) { padding = 18 }\r\n  else if ( extraLarge ) { padding = 22 }\r\n  else { padding = 14 }\r\n\r\n  console.log(children);\r\n\r\n  return React.Children.map( children, ((item, index) => {\r\n    const lastChild = index === children.length - 1;\r\n\r\n    return (\r\n      <ItemWrapper id={item.props.id} lastChild={lastChild} padding={padding}>\r\n        {React.cloneElement(item, {...rest, ...item.props})}\r\n      </ItemWrapper>\r\n    )\r\n  }))\r\n};\r\n\r\nconst Group = (props) => {\r\n\r\n  return (\r\n    <GroupWrapper>\r\n      {_renderOptions(props)}\r\n    </GroupWrapper>\r\n  )\r\n};\r\n\r\nGroup.propTypes = propTypes;\r\nGroup.defaultProps = defaultProps;\r\n\r\nexport default Group;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Body             from '../theme/Body';\r\nimport Card             from '../cards/Card';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node, // components for right side\r\n  text: PropTypes.string,\r\n\r\n  fontColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  text: 'Item'\r\n}\r\n\r\nconst ComponentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst TextWrapper = styled.div `\r\n  width: 100%;\r\n`;\r\n\r\nconst ChildWrapper = styled.div`\r\n  ${({padding}) => `padding-left: ${padding}px;`}\r\n`;\r\n\r\nconst ItemBase = ( props ) => {\r\n\r\n  const { children, text, ...rest } = props;\r\n\r\n  let padding;\r\n  if ( props.extraSmall ) { padding = 10 }\r\n  else if ( props.small ) { padding = 12 }\r\n  else if ( props.large ) { padding = 20 }\r\n  else if ( props.extraLarge ) { padding = 24 }\r\n  else { padding = 16 }\r\n\r\n  const renderChildren = React.Children.map(children, (item) => {\r\n    return (\r\n      <ChildWrapper padding={padding}>\r\n        {React.cloneElement(item, {...rest})}\r\n      </ChildWrapper>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <Card borderSmall {...rest}>\r\n      <ComponentWrapper>\r\n        <TextWrapper>\r\n          <Body {...rest}>\r\n            {text}\r\n          </Body>\r\n        </TextWrapper>\r\n        {renderChildren}\r\n      </ComponentWrapper>\r\n    </Card>\r\n  )\r\n\r\n}\r\n\r\nItemBase.propTypes = propTypes;\r\nItemBase.defaultProps = defaultProps;\r\n\r\nexport default ItemBase;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\n\r\nimport Item             from './Item';\r\nimport Button           from '../buttons/Button';\r\nimport Body             from '../theme/Body';\r\n\r\nconst propTypes = {\r\n  roomTitle: PropTypes.string,\r\n\r\n  onViewClick: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  roomTitle: 'Room Title',\r\n};\r\n\r\n\r\nconst HostRoomItem = ( props ) => {\r\n\r\n  const { roomTitle, roomCode, onViewClick,\r\n          ...rest } = props;\r\n\r\n  const viewButton = (\r\n    <Button {...rest} onClick={onViewClick}>\r\n      VIEW\r\n    </Button>\r\n  )\r\n\r\n  const roomCodeText = (\r\n    <Body {...rest}>\r\n      {roomCode}\r\n    </Body>\r\n  )\r\n\r\n\r\n  return (\r\n    <Item text={roomTitle} {...rest}>\r\n      { roomCodeText }\r\n      { viewButton }\r\n    </Item >\r\n  )\r\n\r\n}\r\n\r\nHostRoomItem.propTypes = propTypes;\r\nHostRoomItem.defaultProps = defaultProps;\r\n\r\nexport default HostRoomItem;\r\n","import React                          from 'react';\r\nimport styled                         from 'styled-components';\r\nimport PropTypes                      from 'prop-types';\r\nimport ExtraPropTypes                 from 'react-extra-prop-types';\r\n\r\nimport { MdCheckBoxOutlineBlank,\r\n         MdCheckBox,\r\n         MdRadioButtonUnchecked,\r\n         MdRadioButtonChecked,\r\n         MdDone,\r\n         MdCheckCircle,\r\n         MdLens,\r\n         MdAddCircleOutline,\r\n         MdClear,\r\n         MdDragHandle,\r\n         MdRemoveCircleOutline,\r\n         MdEdit,\r\n         MdSave,\r\n         MdVisibility }                     from 'react-icons/md';\r\n\r\nimport { IoMdTrash }                  from 'react-icons/io'\r\n\r\n// https://react-icons.github.io/react-icons/\r\n\r\nconst propTypes = {\r\n  type: PropTypes.oneOf(['box', 'checkbox', 'circle', 'bubble', 'check',\r\n                         'checkCircle', 'fullCircle', 'addCircle', 'x',\r\n                         'dragHandle', 'xCircle', 'trash', 'edit', 'save',\r\n                         'view' ]).isRequired,\r\n  onClick: PropTypes.func,\r\n\r\n  color: ExtraPropTypes.color,\r\n  size: PropTypes.string,\r\n\r\n  twoExtraLarge: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  extraSmall: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  onClick: undefined,\r\n};\r\n\r\nconst sizeConfig = {\r\n  twoExtraLarge: '2.75em',\r\n  extraLarge: '2em',\r\n  large: '1.75em',\r\n  medium: '1.5em' ,\r\n  small: '1em',\r\n  extraSmall: '0.75em'\r\n};\r\n\r\nconst Icon = ( props ) => {\r\n\r\n  const { type, size, twoExtraLarge, extraLarge, large,\r\n          medium, small, extraSmall, ...rest } = props;\r\n\r\n  let baseSize;\r\n\r\n  if (twoExtraLarge) { baseSize = sizeConfig.twoExtraLarge }\r\n  else if (extraLarge) { baseSize = sizeConfig.extraLarge }\r\n  else if (large) { baseSize = sizeConfig.large }\r\n  else if (small) { baseSize = sizeConfig.small }\r\n  else if (extraSmall) { baseSize = sizeConfig.extraSmall }\r\n  else { baseSize = sizeConfig.medium }\r\n\r\n  switch (type) {\r\n    case 'checkbox':\r\n      return( <MdCheckBox size={size ? size : baseSize} {...rest}/> )\r\n    case 'circle':\r\n      return( <MdRadioButtonUnchecked size={size ? size : baseSize} {...rest}/> )\r\n    case 'bubble':\r\n      return(< MdRadioButtonChecked size={size ? size : baseSize} {...rest}/> )\r\n    case 'check':\r\n      return( <MdDone size={size ? size : baseSize} {...rest}/> )\r\n    case 'checkCircle':\r\n      return( <MdCheckCircle size={size ? size : baseSize} {...rest}/>)\r\n    case 'fullCircle':\r\n      return( <MdLens size={size ? size : baseSize} {...rest}/>)\r\n    case 'addCircle':\r\n      return( <MdAddCircleOutline size={size ? size : baseSize} {...rest}/>)\r\n    case 'x':\r\n      return( <MdClear size={size ? size : baseSize} {...rest}/>)\r\n    case 'dragHandle':\r\n      return( <MdDragHandle size={size ? size : baseSize} {...rest}/>)\r\n    case 'xCircle':\r\n      return( <MdRemoveCircleOutline size={size ? size : baseSize} {...rest}/>)\r\n    case 'trash':\r\n      return( <IoMdTrash size={size ? size : baseSize} {...rest}/>)\r\n    case 'edit':\r\n      return( <MdEdit size={size ? size : baseSize} {...rest}/>)\r\n    case 'save':\r\n      return( <MdSave size={size ? size : baseSize} {...rest}/>)\r\n    case 'view':\r\n      return( <MdVisibility size={size ? size : baseSize} {...rest}/>)\r\n    default:\r\n      return( <MdCheckBoxOutlineBlank size={size ? size : baseSize} {...rest}/> )\r\n  };\r\n};\r\n\r\nIcon.propTypes = propTypes;\r\nIcon.defaultProps = defaultProps;\r\n\r\nexport default Icon;\r\n","import React                  from \"react\";\r\nimport styled                 from 'styled-components';\r\nimport PropTypes              from 'prop-types';\r\nimport ExtraPropTypes         from 'react-extra-prop-types';\r\n\r\nimport Icon                   from '../theme/Icon';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  iconColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nconst ComponentWrapper = styled.div `\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ItemWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-left: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst EditItem = ( props ) => {\r\n\r\n  const { children, iconColor, onDelete, ...rest } = props;\r\n\r\n  let padding;\r\n  if ( props.extraSmall ) { padding = 10 }\r\n  else if ( props.small ) { padding = 12 }\r\n  else if ( props.large ) { padding = 20 }\r\n  else if ( props.extraLarge ) { padding = 24 }\r\n  else { padding = 16 }\r\n\r\n  return (\r\n    <ComponentWrapper>\r\n        <ItemWrapper>\r\n          {React.cloneElement(children, {...rest})}\r\n        </ItemWrapper>\r\n        <IconWrapper padding={padding}>\r\n          <Icon type={'trash'} color={iconColor} onClick={onDelete}\r\n                small={props.extraSmall} medium={props.small}\r\n                large={props.medium} extraLarge={props.large}\r\n                twoExtraLarge={props.extraLarge}/>\r\n        </IconWrapper>\r\n    </ComponentWrapper>\r\n  )\r\n};\r\n\r\nEditItem.propTypes = propTypes;\r\nEditItem.defaultProps = defaultProps;\r\n\r\nexport default EditItem;\r\n","import React                  from \"react\";\r\nimport styled                 from 'styled-components';\r\nimport PropTypes              from 'prop-types';\r\nimport ExtraPropTypes         from 'react-extra-prop-types';\r\n\r\nimport Body                   from '../theme/Body';\r\nimport Icon                   from '../theme/Icon';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  iconColor: ExtraPropTypes.color,\r\n  textColor: ExtraPropTypes.color,\r\n\r\n  onClick: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nconst ComponentWrapper = styled.div `\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ItemWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-right: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst AddItem = ( props ) => {\r\n\r\n  const { children, iconColor, textColor, onClick, ...rest } = props;\r\n\r\n  let padding;\r\n  if ( props.extraSmall ) { padding = 10 }\r\n  else if ( props.small ) { padding = 12 }\r\n  else if ( props.large ) { padding = 20 }\r\n  else if ( props.extraLarge ) { padding = 24 }\r\n  else { padding = 16 }\r\n\r\n  return (\r\n    <ComponentWrapper>\r\n        <IconWrapper padding={padding}>\r\n          <Icon type={'addCircle'} color={iconColor} onClick={onClick}\r\n                small={props.extraSmall} medium={props.small}\r\n                large={props.medium} extraLarge={props.large}\r\n                twoExtraLarge={props.extraLarge}/>\r\n        </IconWrapper>\r\n        <ItemWrapper>\r\n          <Body color={textColor} {...rest}>\r\n            {children}\r\n          </Body>\r\n        </ItemWrapper>\r\n    </ComponentWrapper>\r\n  )\r\n};\r\n\r\nAddItem.propTypes = propTypes;\r\nAddItem.defaultProps = defaultProps;\r\n\r\nexport default AddItem;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Body             from '../theme/Body';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Icon             from '../theme/Icon';\r\n\r\nconst propTypes = {\r\n  status: PropTypes.string,\r\n\r\n  jumbo: PropTypes.bool,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  status: 'open',\r\n}\r\n\r\nconst ComponentWrapper = styled.div`\r\n  display: inline-block;\r\n`;\r\n\r\nconst ItemWrapper = styled.div`\r\n  display: flex;\r\n  flex-directon: row;\r\n  justify-content: flex-start;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-right: ${({padding}) => padding};\r\n`;\r\n\r\nconst statusConfig = {\r\n  loading: { color: Colors.Yellow,\r\n             text: 'LOADING' },\r\n  pending: { color: Colors.Yellow,\r\n             text: 'PENDING' },\r\n  open: { color: Colors.Green,\r\n          text: 'OPEN' },\r\n  closed: { color: Colors.Red,\r\n             text: 'CLOSED' }\r\n};\r\n\r\nconst sizeConfig = {\r\n  extraSmall: {size: '0.75em',\r\n               padding: '5px'},\r\n  small: {size: '0.9em',\r\n               padding: '6px'},\r\n  medium: {size: '1em',\r\n               padding: '8px'},\r\n  large: {size: '1.25em',\r\n               padding: '10px'},\r\n  extraLarge: {size: '1.5em',\r\n               padding: '12px'},\r\n};\r\n\r\nconst getStatusConfig = ( status ) => {\r\n\r\n  switch (status) {\r\n    case 'loading':\r\n      return statusConfig.loading;\r\n    case 'open':\r\n      return statusConfig.open;\r\n    case 'closed':\r\n      return statusConfig.closed;\r\n    default:\r\n      return statusConfig.pending;\r\n\r\n  }\r\n};\r\n\r\nconst getSizeConfig = ( args ) => {\r\n  const { extraSmall, small, medium, large, extraLarge } = args;\r\n\r\n  if (extraSmall) { return sizeConfig.extraSmall }\r\n  else if (small) { return sizeConfig.small }\r\n  else if (large) { return sizeConfig.large }\r\n  else if (extraLarge) { return sizeConfig.extraLarge }\r\n  else { return sizeConfig.medium }\r\n}\r\n\r\nconst dotIcon = ( sizeConfig, color ) => (\r\n  <IconWrapper padding={sizeConfig.padding}>\r\n    <Icon type={'fullCircle'} size={sizeConfig.size} color={color}/>\r\n  </IconWrapper>\r\n)\r\n\r\nconst StatusText = ( props ) => {\r\n\r\n  const { status, jumbo, ...rest} = props;\r\n\r\n  const sizeConfig = getSizeConfig(rest);\r\n  const statusConfig = getStatusConfig(status);\r\n\r\n  const bodyText = (\r\n    <Body {...rest}>\r\n      {statusConfig.text}\r\n    </Body>\r\n  );\r\n\r\n  const jumboText = (\r\n    <Jumbo {...rest}>\r\n      {statusConfig.text}\r\n    </Jumbo>\r\n  )\r\n\r\n  return (\r\n    <ComponentWrapper>\r\n      <ItemWrapper>\r\n        {dotIcon(sizeConfig, statusConfig.color)}\r\n        <TextWrapper>\r\n          { jumbo ? jumboText : bodyText }\r\n        </TextWrapper>\r\n      </ItemWrapper>\r\n    </ComponentWrapper>\r\n  )\r\n};\r\n\r\nStatusText.propTypes = propTypes;\r\nStatusText.defaultProps = defaultProps;\r\n\r\nexport default StatusText;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Card             from '../cards/Card'\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport StatusText       from '../format-text/StatusText'\r\n\r\nconst propTypes = {\r\n  header: PropTypes.string,\r\n  headerButton: PropTypes.node,\r\n  children: PropTypes.node,\r\n  footer: PropTypes.node,\r\n\r\n  cardColor: ExtraPropTypes.color,\r\n  cardBorderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\n\r\nconst defaultProps ={\r\n  cardColor: Colors.Blue,\r\n  cardBorderColor: Colors.White,\r\n};\r\n\r\nconst ComponentWrapper = styled.div`\r\n  height: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst SectionWrapper = styled.div`\r\n  padding-bottom: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst InnerWrapper = styled.div`\r\n  height: 100%;\r\n  width: auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst HeaderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  padding-bottom: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst HeaderTextWrapper = styled.div`\r\n  width: 100%\r\n`;\r\n\r\nconst HeaderButtonWrapper  = styled.div``;\r\n\r\nconst ScrollableWrapper = styled.div`\r\n  overflow: scroll;\r\n  padding-right: 15px;\r\n  height: 100%;\r\n  width: 100%;\r\n`;\r\n\r\nconst FooterWrapper = styled.div`\r\n  padding-top: ${({padding}) => padding}px;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst SecondaryCard = ( props ) => {\r\n\r\n  const { header, headerButton, children, footer,\r\n          cardColor, cardBorderColor, ...rest } = props;\r\n\r\n  let padding;\r\n  let subPadding;\r\n  if (props.extraSmall) { padding = 40;\r\n                          subPadding = 14}\r\n  else if (props.small) { padding = 45;\r\n                          subPadding = 16}\r\n  else if (props.large) { padding = 55;\r\n                          subPadding = 28}\r\n  else if (props.extraLarge) { padding = 60;\r\n                              subPadding = 32}\r\n  else { padding = 50;\r\n         subPadding = 22}\r\n\r\n const _renderHeader = (\r\n   <HeaderWrapper padding={padding}>\r\n     <HeaderTextWrapper>\r\n       {header}\r\n     </HeaderTextWrapper>\r\n     <HeaderButtonWrapper>\r\n       {headerButton ? React.cloneElement(headerButton, {...rest}) :\r\n                     <div/>}\r\n     </HeaderButtonWrapper>\r\n   </HeaderWrapper>\r\n );\r\n\r\n  const _renderSection = ( section ) => {\r\n\r\n    return (\r\n    <SectionWrapper padding={padding}>\r\n      {React.cloneElement(section, {...rest})}\r\n    </SectionWrapper>\r\n  );}\r\n\r\n\r\n  const _renderFooter =  footer ? (\r\n    <FooterWrapper padding={padding}>\r\n      {React.cloneElement(footer, {...rest})}\r\n    </FooterWrapper>\r\n  ) : <div/>;\r\n\r\n\r\n  return (\r\n    <Card color={cardColor} height={props.height || 'stretch'} width={props.width}\r\n          borderLarge borderColor={cardBorderColor}\r\n          {...rest}>\r\n      <InnerWrapper>\r\n        {_renderHeader}\r\n        <ScrollableWrapper>\r\n          {React.Children.map(props.children, (child) => _renderSection(child))}\r\n        </ScrollableWrapper>\r\n        {_renderFooter}\r\n      </InnerWrapper>\r\n    </Card>\r\n  )\r\n};\r\n\r\nSecondaryCard.propTypes = propTypes;\r\nSecondaryCard.defaultProps = defaultProps;\r\n\r\nexport default SecondaryCard;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\n\r\nimport PrimaryCard      from './PrimaryCard';\r\n\r\nconst propTypes = {\r\n  header: PropTypes.string,\r\n  headerButton: PropTypes.node,\r\n  headerComponent: PropTypes.node,\r\n  children: PropTypes.node,\r\n  footer: PropTypes.node,\r\n\r\n  headerColor: ExtraPropTypes.color,\r\n  cardColor: ExtraPropTypes.color,\r\n  cardBorderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps ={\r\n  header: 'Card',\r\n  headerColor: Colors.White,\r\n  sections: [],\r\n};\r\n\r\n\r\nconst SecondaryCard = ( props ) => {\r\n\r\n  const { header, headerComponent, headerColor, ...rest } = props;\r\n\r\n const renderHeader = (\r\n   <Jumbo threeExtraSmall={props.extraSmall} extraSmall={props.small}\r\n              small={props.medium} medium={props.large} large={props.extraLarge}\r\n              color={headerColor}>\r\n         {header}\r\n   </Jumbo>\r\n );\r\n\r\n  return (\r\n    <PrimaryCard header={headerComponent ? headerComponent : renderHeader} {...rest}/>\r\n  )\r\n};\r\n\r\nSecondaryCard.propTypes = propTypes;\r\nSecondaryCard.defaultProps = defaultProps;\r\n\r\nexport default SecondaryCard;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\n\r\nimport SecondaryCard    from './SecondaryCard';\r\n\r\nconst propTypes = {\r\n  header: PropTypes.string,\r\n  headerButton: PropTypes.node,\r\n  headerComponent: PropTypes.node,\r\n  sections: PropTypes.arrayOf(PropTypes.object),\r\n  footer: PropTypes.node,\r\n\r\n  cardColor: ExtraPropTypes.color,\r\n  cardBorderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps ={\r\n  header: 'Card',\r\n  sections: [],\r\n};\r\n\r\nconst SectionWrapper = styled.div`\r\n`;\r\n\r\n\r\nconst HeaderWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  padding-bottom: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst TertiaryCard = ( props ) => {\r\n\r\n  const { sections, ...rest } = props;\r\n\r\n  let padding;\r\n  if (props.extraSmall) { padding = 14}\r\n  else if (props.small) { padding = 16}\r\n  else if (props.large) { padding = 28}\r\n  else if (props.extraLarge) { padding = 32}\r\n  else { padding = 22}\r\n\r\n\r\n  const _renderSection = ( section ) => {\r\n\r\n    return (\r\n      section.header ?\r\n        <SectionWrapper>\r\n          <HeaderWrapper padding={padding}>\r\n            {section.header}\r\n          </HeaderWrapper>\r\n          {React.cloneElement(section.content, {...rest})}\r\n        </SectionWrapper> :\r\n        <SectionWrapper>\r\n          {React.cloneElement(section.content, {...rest})}\r\n        </SectionWrapper>\r\n  );}\r\n\r\n\r\n  const renderedSections = sections.map((section) => _renderSection(section));\r\n\r\n  return (\r\n    <SecondaryCard {...rest}>\r\n      {renderedSections}\r\n    </SecondaryCard>\r\n  )\r\n};\r\n\r\nTertiaryCard.propTypes = propTypes;\r\nTertiaryCard.defaultProps = defaultProps;\r\n\r\nexport default TertiaryCard;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport TertiaryCard    from './TertiaryCard'\r\nimport { Colors }       from '../theme/Colors';\r\nimport StatusText       from '../format-text/StatusText'\r\n\r\nconst propTypes = {\r\n  header: PropTypes.string,\r\n  headerButton: PropTypes.node,\r\n  headerComponent: PropTypes.node,\r\n  sections: PropTypes.arrayOf(PropTypes.object),\r\n  footer: PropTypes.node,\r\n\r\n  cardColor: ExtraPropTypes.color,\r\n  cardBorderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps ={\r\n  header: 'Card',\r\n  sections: [],\r\n};\r\n\r\n\r\nconst StatusTertiaryCard = ( props ) => {\r\n\r\n  const { sections, ...rest } = props;\r\n\r\n\r\n  const renderSection = ( section ) => {\r\n\r\n    const header = (\r\n      <StatusText fiveExtraSmall={props.extraSmall} fourExtraSmall={props.small}\r\n                  threeExtraSmall={props.medium} twoExtraSmall={props.large} extraSmall={props.extraLarge}\r\n                  status={section.status} jumbo color={Colors.White} />\r\n    );\r\n\r\n    return {\r\n      ...section,\r\n      header: header\r\n    }\r\n  }\r\n\r\n  return (\r\n    <TertiaryCard sections={sections.map((section) => renderSection(section))}\r\n                   {...rest}/>\r\n  )\r\n};\r\n\r\nStatusTertiaryCard.propTypes = propTypes;\r\nStatusTertiaryCard.defaultProps = defaultProps;\r\n\r\nexport default StatusTertiaryCard;\r\n","import React                from 'react';\r\nimport styled               from 'styled-components';\r\nimport PropTypes                      from 'prop-types';\r\nimport ExtraPropTypes                 from 'react-extra-prop-types';\r\n\r\nimport { Colors }           from '../theme/Colors';\r\nimport Jumbo                from '../theme/Jumbo';\r\nimport Body                 from '../theme/Body';\r\nimport Button                from '../buttons/Button';\r\n\r\nimport Group                  from '../groups/Group';\r\nimport HostRoomItem                   from '../items/HostRoomItem';\r\nimport EditItem                   from '../items/EditItem';\r\nimport AddItem                   from '../items/AddItem';\r\n\r\nimport StatusTertiaryCard       from '../format-cards/StatusTertiaryCard';\r\n\r\n\r\nconst propTypes = {\r\n  rooms: PropTypes.object,\r\n  order: PropTypes.object,\r\n\r\n  onDelete: PropTypes.func,\r\n  onAdd: PropTypes.func,\r\n  onViewClick: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n}\r\n\r\nconst defaultProps = {\r\n\r\n}\r\n\r\n\r\nconst SectionGroup = ( props ) => {\r\n  const { rooms, onViewClick,\r\n          onDelete, onAdd, ...rest } = props;\r\n\r\n  const items = rooms.map((room, index) => (\r\n    room.status === 'open' ?\r\n    <HostRoomItem roomTitle={room.title}\r\n                  roomCode={room.id}\r\n                  onViewClick={() => onViewClick(room.id, room.status)}/> :\r\n    <EditItem iconColor={Colors.White} onDelete={() => onDelete(room.id)}>\r\n      <HostRoomItem roomTitle={room.title}\r\n                roomCode={room.id}\r\n                onViewClick={() => onViewClick(room.id, room.status)}/>\r\n    </EditItem>\r\n  ));\r\n\r\n  const addItems = items.map(item => item);\r\n  addItems.push(<AddItem textColor={Colors.White}\r\n                         iconColor={Colors.White}\r\n                         onClick={onAdd}> Add a room </AddItem>);\r\n\r\n  console.log(addItems)\r\n  return (\r\n    onAdd ?\r\n      <Group {...rest}>\r\n        {addItems}\r\n      </Group> :\r\n      <Group {...rest}>\r\n        {items}\r\n      </Group>\r\n    )\r\n}\r\n\r\n\r\nconst HostDashCard = ( props ) => {\r\n\r\n  const { rooms, order,\r\n          onViewClick, onDelete, onAdd, ...rest} = props;\r\n\r\n  let statusList = ['open', 'pending', 'closed'];\r\n  statusList = statusList.filter((status) => order[status].length != 0 ||\r\n                                             status === 'pending');\r\n\r\n\r\n  const sections = statusList.map((status) => {\r\n\r\n    const sectionRooms = order[status].map((room) => rooms[room])\r\n\r\n    return {\r\n      status: status,\r\n      content: <SectionGroup rooms={sectionRooms}\r\n                             onViewClick={onViewClick}\r\n                             onDelete={onDelete}\r\n                             onAdd={status === 'pending' ? onAdd : undefined}\r\n                             {...rest}/>,\r\n    }\r\n  })\r\n\r\n  return (\r\n    <StatusTertiaryCard header={'My Rooms'}\r\n                        sections={sections}\r\n                        width={`100%`}\r\n                        {...rest}/>\r\n  )\r\n}\r\n\r\nHostDashCard.propTypes = propTypes;\r\nHostDashCard.defaultProps = defaultProps;\r\n\r\nexport default HostDashCard;\r\n","import React, { useEffect } from 'react';\r\nimport styled               from 'styled-components';\r\n\r\nimport { connect }          from 'react-redux';\r\nimport ActionTypes          from '../store/actionTypes';\r\n\r\nimport history              from '../history';\r\n\r\nimport Loading              from './Loading'\r\nimport LoadingCard             from '../components/cards/LoadingCard'\r\n\r\n\r\nimport ViewportHandler      from './format-pages/ViewportHandler';\r\nimport MainPage             from './format-pages/MainPage';\r\nimport { Colors }           from '../components/theme/Colors';\r\n\r\nimport HostDashCard         from '../components/cards/HostDashCard';\r\n\r\nconst DashComponent = ( props ) => {\r\n\r\n  let size = {};\r\n  switch (props.viewport) {\r\n    case 'mobile':\r\n    case 'smallMobile':\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'hdDesktop':\r\n    case 'uhdDesktop':\r\n      size.medium = true;\r\n      break;\r\n    default:\r\n      size.small = true;\r\n  }\r\n\r\n  if (props.loading) {\r\n    return (\r\n      <LoadingCard cardColor={Colors.Blue}\r\n                   cardBorderColor={Colors.White}\r\n                   textColor={Colors.White}\r\n                   {...size}/>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <HostDashCard {...size}\r\n                  onViewClick={props.onViewClick}\r\n                  rooms={props.rooms}\r\n                  order={props.order}\r\n                  onDelete={props.onDelete}\r\n                  onAdd={props.onAdd}/>\r\n  )\r\n}\r\n\r\nconst HostDashPage = ( props ) => {\r\n  useEffect(() =>  {\r\n    props.onFetchRooms();\r\n  }, [])\r\n\r\n  console.log(props)\r\n\r\n  // if ( props.loading ) { return <Loading/> }\r\n  if ( props.error ) { console.log(props.error); history.replace('/Login') }\r\n\r\n  const onViewClick = (roomcode, roomStatus) => {\r\n    console.log(roomStatus)\r\n    if (roomStatus === 'closed') {\r\n      history.push(`/RoomResults/${roomcode}`)\r\n    }\r\n    else {\r\n      history.push(`/HostAgenda/${roomcode}`)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ViewportHandler>\r\n      <MainPage>\r\n          <DashComponent viewport={props.viewport}\r\n                         loading={props.loading}\r\n                         onViewClick={onViewClick}\r\n                         rooms={props.rooms}\r\n                         order={props.order}\r\n                         onDelete={props.onDeleteRoom}\r\n                         onAdd={props.onAddRoom}/>\r\n      </MainPage>\r\n    </ViewportHandler>\r\n  );\r\n\r\n  // return (\r\n  //   <ViewportHandler>\r\n  //     <MainPage>\r\n  //         <LoadingCard/>\r\n  //     </MainPage>\r\n  //   </ViewportHandler>\r\n  // );\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    rooms: state.hostdash.rooms,\r\n    order: state.hostdash.order,\r\n    loading: state.hostdash.loading,\r\n    error: state.hostdash.error,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchRooms: () => dispatch({ type: ActionTypes.hostdash.FETCH_ROOMS_START }),\r\n    onDeleteRoom: (room_id) => dispatch({ type: ActionTypes.hostdash.DELETE_ROOM_START,\r\n                                          room_id }),\r\n    onAddRoom: () => dispatch({ type: ActionTypes.hostdash.ADD_ROOM_START }),\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HostDashPage);\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\n\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../../components/theme/Colors';\r\nimport BasePage         from './BasePage';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  header: PropTypes.node,\r\n  sideContent: PropTypes.node,\r\n\r\n  color: ExtraPropTypes.color,\r\n};\r\n\r\nconst defaultProps = {\r\n  color: Colors.Blue\r\n};\r\n\r\nconst HeaderWrapper = styled.div`\r\n  padding-bottom: 20px;\r\n`;\r\n\r\nconst ComponentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction:row;\r\n  justify-content: space-between;\r\n  width: 90%;\r\n  height: 80%;\r\n`;\r\n\r\nconst SideBarWrapper = styled.div`\r\n  width: 40%;\r\n  padding-left: 10px;\r\n`;\r\n\r\nconst HorizontalSideBarWrapper = styled.div`\r\n  padding-bottom: 10px;\r\n\r\n`;\r\n\r\nconst VerticalComponentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  width: 90%;\r\n  height: 80%;\r\n`;\r\n\r\nconst MainComponentWrapper = styled.div`\r\n  height: 100%;\r\n`;\r\n\r\nconst VerticalPage = ( props ) => {\r\n\r\n  const mainComponent = props.sideContent ?\r\n    <>\r\n      <HorizontalSideBarWrapper>\r\n        {React.cloneElement(props.sideContent, { viewport: props.viewport })}\r\n      </HorizontalSideBarWrapper>\r\n      <MainComponentWrapper>\r\n        {React.cloneElement(props.children, { viewport: props.viewport })}\r\n      </MainComponentWrapper>\r\n    </> :\r\n    <MainComponentWrapper>\r\n      {React.cloneElement(props.children, { viewport: props.viewport })}\r\n    </MainComponentWrapper>\r\n\r\n  const headerComponent = props.header ?\r\n    <HeaderWrapper>\r\n      {React.cloneElement(props.header, { viewport: props.viewport })}\r\n    </HeaderWrapper> :\r\n    <></>\r\n\r\n  return (\r\n    <>\r\n      {headerComponent}\r\n      <VerticalComponentWrapper>\r\n        {mainComponent}\r\n      </VerticalComponentWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\nconst HorizontalPage = ( props ) => {\r\n\r\n  const mainComponent = props.sideContent ?\r\n    <>\r\n      {React.cloneElement(props.children, { viewport: props.viewport })}\r\n      <SideBarWrapper>\r\n        {React.cloneElement(props.sideContent, { viewport: props.viewport })}\r\n      </SideBarWrapper>\r\n    </> : React.cloneElement(props.children, { viewport: props.viewport })\r\n\r\n  const headerComponent = props.header ?\r\n    <HeaderWrapper>\r\n      {React.cloneElement(props.header, { viewport: props.viewport })}\r\n    </HeaderWrapper> :\r\n    <></>\r\n\r\n  return (\r\n    <>\r\n      {headerComponent}\r\n      <ComponentWrapper>\r\n        {mainComponent}\r\n      </ComponentWrapper>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nconst SideBarPage = ( props ) => {\r\n\r\n  const small = props.viewport === 'mobile' || props.viewport === 'smallMobile';\r\n\r\n  console.log(small);\r\n  console.log(props.viewport);\r\n  return (\r\n    <BasePage color={props.color}>\r\n      {small ? <VerticalPage {...props}/> : <HorizontalPage {...props}/>}\r\n    </BasePage>\r\n  )\r\n}\r\n\r\nSideBarPage.propTypes = propTypes;\r\nSideBarPage.defaultProps = defaultProps;\r\n\r\nexport default SideBarPage;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Icon             from '../theme/Icon';\r\n\r\nimport Item         from './Item';\r\nimport StatusText       from '../format-text/StatusText';\r\n\r\nimport Button           from '../buttons/Button';\r\n\r\nconst propTypes = {\r\n  pollTitle: PropTypes.string,\r\n  status: PropTypes.oneOf(['closed', 'open', 'pending']),\r\n\r\n  onViewClick: PropTypes.func,\r\n  hostButton: PropTypes.node,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  pollTitle: 'Poll Title',\r\n  status: 'pending'\r\n};\r\n\r\nconst IconWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column:\r\n  justify-content: center;\r\n  padding: 3px 0px 3px 0px;\r\n`;\r\n\r\n\r\nconst AgendaItem = ( props ) => {\r\n\r\n  const { pollTitle, status, onViewClick, onStatusClick, hostButton,\r\n          ...rest } = props;\r\n\r\n  const statusText = <StatusText status={status} {...rest}/>\r\n\r\n  const viewButton = props.extraSmall ?\r\n    <Button {...rest} onClick={onViewClick}>\r\n      <IconWrapper>\r\n        <Icon type={'view'} color={Colors.White} small/>\r\n      </IconWrapper>\r\n    </Button> :\r\n    <Button {...rest} onClick={onViewClick}>\r\n      VIEW\r\n    </Button>\r\n\r\n\r\n  if ( hostButton ){\r\n    return (\r\n      <Item text={pollTitle} {...rest}>\r\n        { statusText }\r\n        { hostButton }\r\n        { viewButton }\r\n      </Item>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Item text={pollTitle} {...rest}>\r\n      { statusText }\r\n      { viewButton }\r\n    </Item>\r\n  )\r\n\r\n}\r\n\r\nAgendaItem.propTypes = propTypes;\r\nAgendaItem.defaultProps = defaultProps;\r\n\r\nexport default AgendaItem;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\n\r\nimport AgendaItem         from './AgendaItem';\r\nimport Button           from '../buttons/Button';\r\n\r\nconst propTypes = {\r\n  pollTitle: PropTypes.string,\r\n  status: PropTypes.oneOf(['closed', 'open', 'pending']),\r\n\r\n  onViewClick: PropTypes.func,\r\n  onStatusButtonClick: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  pollTitle: 'Poll Title',\r\n  status: 'pending'\r\n};\r\n\r\nconst statusButtonConfig = {\r\n  open: {\r\n    text: 'CLOSE',\r\n    color: Colors.Yellow,\r\n  },\r\n  closed:{\r\n    text: 'CLOSED',\r\n    color: Colors.Red,\r\n  },\r\n  pending:{\r\n    text: 'OPEN',\r\n    color: Colors.Green,\r\n  }\r\n}\r\n\r\nconst HostAgendaItem = ( props ) => {\r\n\r\n  const {  roomStatus, status, onStatusClick,\r\n          ...rest } = props;\r\n\r\n  let config;\r\n  let nextStatus;\r\n\r\n  switch ( status ) {\r\n    case 'open':\r\n      config = statusButtonConfig.open;\r\n      nextStatus = 'closed';\r\n      break;\r\n    case 'closed':\r\n      config = statusButtonConfig.closed;\r\n      nextStatus = 'closed';\r\n      break;\r\n    default:\r\n      config = statusButtonConfig.pending;\r\n      nextStatus = 'open';\r\n  };\r\n\r\n  const statusButton = ( roomStatus === 'pending' )|| (status === 'closed') ?\r\n    undefined :\r\n    <Button {...rest} disabled={status === 'closed'} onClick={() => onStatusClick(nextStatus)}\r\n            backgroundColor={config.color} textColor={Colors.White}>\r\n      {config.text}\r\n    </Button>\r\n\r\n\r\n  return (\r\n    <AgendaItem status={status} hostButton={statusButton} {...rest}/>\r\n  )\r\n\r\n}\r\n\r\nHostAgendaItem.propTypes = propTypes;\r\nHostAgendaItem.defaultProps = defaultProps;\r\n\r\nexport default HostAgendaItem;\r\n","import React            from 'react';\r\nimport styled               from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Icon             from '../theme/Icon';\r\nimport Body             from '../theme/Body'\r\n\r\nconst propTypes = {\r\n  type: PropTypes.oneOf(['edit', 'save']),\r\n}\r\n\r\nconst defaultProps = {\r\n\r\n}\r\n\r\nconst ButtonWrapper = styled.div`\r\n  width: max-content;\r\n  display: flex;\r\n  flex-direction: column\r\n`;\r\n\r\nconst IconWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n  width: auto;\r\n`\r\n\r\nconst EditButton = ( props ) => {\r\n\r\n  const { children, type, color, onClick, ...rest } = props;\r\n\r\n  return (\r\n    <ButtonWrapper onClick={onClick}>\r\n      <IconWrapper>\r\n        <Icon type={type} color={color}\r\n              small={props.extraSmall} medium={props.small} large={props.medium}\r\n              extraLarge={props.large} twoExtraLarge={props.extraLarge}/>\r\n      </IconWrapper>\r\n      <Body color={color} {...rest}>\r\n        { type === 'edit' ? 'EDIT' : 'SAVE'}\r\n      </Body>\r\n    </ButtonWrapper>\r\n  )\r\n}\r\n\r\nEditButton.propTypes = propTypes;\r\nEditButton.defaultProps = defaultProps;\r\n\r\nexport default EditButton;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport SecondaryCard      from '../format-cards/SecondaryCard'\r\nimport HostAgendaItem                from '../items/HostAgendaItem';\r\nimport Group                 from '../groups/Group'\r\n\r\nimport { Colors }                from '../theme/Colors';\r\nimport EditButton                      from '../buttons/EditButton';\r\n\r\nconst propTypes = {\r\n  roomcode: PropTypes.string,\r\n  title: PropTypes.string,\r\n  status: PropTypes.string,\r\n\r\n  polls: PropTypes.object,\r\n  order: PropTypes.object,\r\n\r\n  onEditClick: PropTypes.func,\r\n  onViewClick: PropTypes.func,\r\n  onStatusButtonClick: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  roomTitle: 'Agenda',\r\n  openPolls: [],\r\n  pendingPolls: [],\r\n  closedPolls: [],\r\n};\r\n\r\n\r\nconst HostAgendaCard = ( props ) => {\r\n\r\n  const { roomcode, title, status, polls, order,\r\n          onEditClick, onStatusClick,\r\n          onViewClick, onStatusButtonClick,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  console.log(props)\r\n\r\n\r\n  let allPolls = [];\r\n  let statusList = ['open', 'pending', 'closed'];\r\n  statusList = statusList.filter((status) => order[status] && order[status].length != 0);\r\n\r\n  for (let i = 0; i < statusList.length; i++) {\r\n    allPolls = allPolls.concat(order[statusList[i]]) }\r\n\r\n  const headerButton = (\r\n    <EditButton type={'edit'} color={Colors.White} onClick={onEditClick}/>\r\n  )\r\n\r\n  return (\r\n    <SecondaryCard  width={'100%'}\r\n                    height={extraSmall ? `100%` : `stretch`}\r\n                    header={title}\r\n                    extraSmall={extraSmall} small={small}\r\n                    medium={medium} large={large} extraLarge={extraLarge}\r\n                    headerButton={status === 'closed' ? undefined : headerButton}>\r\n      <Group>\r\n        {allPolls.map((id) => {\r\n          const poll = polls[id];\r\n          return (\r\n            <HostAgendaItem roomStatus={status}\r\n                            pollTitle={poll.title}\r\n                            status={poll.status}\r\n                            onStatusClick={(newStatus) => onStatusClick(id, newStatus)}\r\n                            onViewClick={onViewClick ? () => onViewClick(id) : undefined}/>\r\n          )\r\n        })}\r\n      </Group>\r\n    </SecondaryCard>\r\n\r\n  )\r\n};\r\n\r\nHostAgendaCard.propTypes = propTypes;\r\nHostAgendaCard.defaultProps = defaultProps;\r\n\r\nexport default HostAgendaCard;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport { Fonts }        from '../theme/Fonts';\r\n\r\nconst propTypes = {\r\n  placeholder: PropTypes.string,\r\n\r\n  fontColor: ExtraPropTypes.color,\r\n  backgroundColor: ExtraPropTypes.color,\r\n  placeholderColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  placeholder: 'Write something...',\r\n  fontColor: Colors.Black,\r\n  borderColor: Colors.Blue,\r\n}\r\n\r\nconst fontConfig = {\r\n  fontFamily: Fonts.WorkSans,\r\n  fontWeight: 'bold',\r\n  extraSmall: { fontSize: 14, lineHeight: 20  },\r\n  small: { fontSize: 16, lineHeight: 22 },\r\n  medium: { fontSize: 20, lineHeight: 28  },\r\n  large: { fontSize: 26, lineHeight: 36 },\r\n  extraLarge: { fontSize: 32, lineHeight: 42 }\r\n};\r\n\r\nconst TextAreaComponent = styled.textarea`\r\n  font-family: ${fontConfig.fontFamily};\r\n  font-weight: ${fontConfig.fontWeight};\r\n  font-size: ${({fontSize}) => fontSize}px;\r\n  color: ${({fontColor}) => fontColor};\r\n  line-height: ${({lineHeight}) => lineHeight}px;\r\n  width: 100%;\r\n  height: ${({height}) => height}px;\r\n  padding: 12px 20px;\r\n  box-sizing: border-box;\r\n  border: solid 3px ${({borderColor}) => borderColor};\r\n  border-radius: 4px;\r\n  background-color: ${({backgroundColor}) => backgroundColor ? backgroundColor : `none`};\r\n  overflow: visable;\r\n  resize: none;\r\n  ::placeholder {\r\n    color: ${(placeholderColor) => placeholderColor ? placeholderColor : Colors.Blue};\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border: solid 3px ${Colors.Green};\r\n  }\r\n`;\r\n\r\nconst TextArea = ( props ) => {\r\n\r\n  const { placeholder, backgroundColor, borderColor,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  let sizeConfig;\r\n\r\n  if (extraSmall) { sizeConfig = fontConfig.extraSmall }\r\n  else if (small) { sizeConfig = fontConfig.small }\r\n  else if (large) { sizeConfig = fontConfig.large }\r\n  else if (extraLarge) { sizeConfig = fontConfig.extraLarge }\r\n  else { sizeConfig = fontConfig.medium }\r\n\r\n  const height = (sizeConfig.lineHeight * 3) + 24;\r\n\r\n  return (\r\n    <TextAreaComponent fontSize={sizeConfig.fontSize}\r\n                       lineHeight={sizeConfig.lineHeight}\r\n                       height={height}\r\n                       {...props}/>\r\n  );\r\n};\r\n\r\nTextArea.propTypes = propTypes;\r\nTextArea.defaultProps = defaultProps;\r\n\r\nexport default TextArea;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport { Fonts }        from '../theme/Fonts';\r\n\r\nconst propTypes = {\r\n  value: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n\r\n  labelColor: ExtraPropTypes.color,\r\n  placeholderColor: ExtraPropTypes.color,\r\n  fontColor: ExtraPropTypes.color,\r\n  backgroundColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  placeholder: 'Write something...',\r\n  fontColor: Colors.Black,\r\n  borderColor: Colors.Blue,\r\n}\r\n\r\nconst fontConfig = {\r\n  fontFamily: Fonts.WorkSans,\r\n  fontWeight: 'bold',\r\n  extraSmall: { fontSize: 14, lineHeight: 20  },\r\n  small: { fontSize: 16, lineHeight: 22 },\r\n  medium: { fontSize: 20, lineHeight: 28  },\r\n  large: { fontSize: 26, lineHeight: 36 },\r\n  extraLarge: { fontSize: 32, lineHeight: 42 }\r\n};\r\n\r\n// const InputFieldComponent = styled.input`\r\n//   font-family: ${fontConfig.fontFamily};\r\n//   font-weight: ${fontConfig.fontWeight};\r\n//   font-size: ${({fontSize}) => fontSize}px;\r\n//   color: ${({fontColor}) => fontColor};\r\n//   line-height: ${({lineHeight}) => lineHeight}px;\r\n//   width: 100%;\r\n//   height: ${({height}) => height}px;\r\n//   padding: 8px 10px;\r\n//   box-sizing: border-box;\r\n//   border: none;\r\n//   border-bottom: solid 3px ${({borderColor}) => borderColor};\r\n//   background-color: ${({backgroundColor}) => backgroundColor ? backgroundColor : `none`};\r\n//   overflow: visable;\r\n//   resize: none;\r\n//   ::placeholder {\r\n//     color: ${Colors.LightBlue};\r\n//   }\r\n//   &:focus {\r\n//     outline: none;\r\n//     border: none;\r\n//     border-bottom: solid 3px ${Colors.Green};\r\n//   }\r\n// `;\r\n\r\n// class InputField extends React.Component {\r\n//\r\n//   constructor(props){\r\n//     super(props);\r\n//\r\n//     const { placeholder, backgroundColor, borderColor,\r\n//             extraSmall, small, medium, large, extraLarge } = props;\r\n//\r\n//\r\n//     if (extraSmall) { this.sizeConfig = fontConfig.extraSmall }\r\n//     else if (small) { this.sizeConfig = fontConfig.small }\r\n//     else if (large) { this.sizeConfig = fontConfig.large }\r\n//     else if (extraLarge) { this.sizeConfig = fontConfig.extraLarge }\r\n//     else { this.sizeConfig = fontConfig.medium }\r\n//\r\n//     this.height = this.sizeConfig.lineHeight + 16;\r\n//\r\n//     this.state = {\r\n//       value: props.value\r\n//     }\r\n//     console.log(props.value)\r\n//\r\n//     this.onChange = this.onChange.bind(this);\r\n//   }\r\n//\r\n//   onChange = (event) => {\r\n//\r\n//     console.log('onChage')\r\n//     this.setState({\r\n//       value: event.target.value\r\n//     })\r\n//\r\n//     this.props.onChange && this.props.onChange(event);\r\n//   }\r\n//\r\n//   render() {\r\n//\r\n//     const valueProps = (this.state.value && this.state.value !== '') ?\r\n//                        { value: this.state.value} : {};\r\n//\r\n//     return (\r\n//       <InputFieldComponent  fontSize={this.sizeConfig.fontSize}\r\n//                             lineHeight={this.sizeConfig.lineHeight}\r\n//                             height={this.height}\r\n//                             onChange={this.onChange}\r\n//                             borderColor={this.props.borderColor}\r\n//                             backgroundColor={this.props.backgroundColor}\r\n//                             fontColor={this.props.fontColor}\r\n//                             {...valueProps}/>\r\n//     );\r\n//\r\n//   }\r\n// }\r\n//\r\n// InputField.propTypes = propTypes;\r\n// InputField.defaultProps = defaultProps;\r\n\r\nconst InputFieldComponent = styled.textarea`\r\n  font-family: ${fontConfig.fontFamily};\r\n  font-weight: ${fontConfig.fontWeight};\r\n  font-size: ${({fontSize}) => fontSize}px;\r\n  color: ${({fontColor}) => fontColor};\r\n  line-height: ${({lineHeight}) => lineHeight}px;\r\n  width: 100%;\r\n  height: ${({height}) => height}px;\r\n  padding: 12px 20px;\r\n  box-sizing: border-box;\r\n  border: none;\r\n  border-bottom: solid 3px ${({borderColor}) => borderColor};\r\n  background-color: ${({backgroundColor}) => backgroundColor ? backgroundColor : `none`};\r\n  overflow: hidden;\r\n  white-space: pre;\r\n  resize: none;\r\n  ::placeholder {\r\n    color: ${({placeholderColor}) => placeholderColor};\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    border: none\r\n    border-bottom: solid 3px ${Colors.Green};\r\n    border-color: ${Colors.Green};\r\n  }\r\n`;\r\n\r\nconst InputField = ( props ) => {\r\n\r\n  const { placeholder, backgroundColor, borderColor,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  let sizeConfig;\r\n\r\n  if (extraSmall) { sizeConfig = fontConfig.extraSmall }\r\n  else if (small) { sizeConfig = fontConfig.small }\r\n  else if (large) { sizeConfig = fontConfig.large }\r\n  else if (extraLarge) { sizeConfig = fontConfig.extraLarge }\r\n  else { sizeConfig = fontConfig.medium }\r\n\r\n  const height = sizeConfig.lineHeight + 24;\r\n\r\n  return (\r\n    <InputFieldComponent fontSize={sizeConfig.fontSize}\r\n                       lineHeight={sizeConfig.lineHeight}\r\n                       height={height}\r\n                       {...props}/>\r\n  );\r\n};\r\n\r\nInputField.propTypes = propTypes;\r\nInputField.defaultProps = defaultProps;\r\n\r\nexport default InputField;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\n\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Body             from '../theme/Body';\r\nimport TextArea         from './TextArea';\r\nimport InputField       from './InputField';\r\n\r\nconst propTypes = {\r\n  type: PropTypes.string,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n\r\n  labelColor: ExtraPropTypes.color,\r\n  placeholderColor: ExtraPropTypes.color,\r\n  fontColor: ExtraPropTypes.color,\r\n  backgroundColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  type: 'inputfield',\r\n  labelColor: Colors.Blue,\r\n};\r\n\r\nconst LabelWrapper = styled.div`\r\n  padding-top: 4px;\r\n`;\r\nconst ComponentWrapper = styled.div``;\r\n\r\n\r\nclass Input extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      value: props.value\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange = (event) => {\r\n\r\n    this.setState({\r\n      value: event.target.value\r\n    })\r\n\r\n    this.props.onChange && this.props.onChange(event);\r\n  }\r\n\r\n  render() {\r\n\r\n    const inputProps = { ...this.props,\r\n                         value: this.state.value,\r\n                         onChange: this.onChange\r\n                       }\r\n\r\n    const component = this.props.type === 'textarea' ? <TextArea {...inputProps}/> : <InputField {...inputProps}/>;\r\n\r\n    return (\r\n      this.props.label ?\r\n        <ComponentWrapper>\r\n          <LabelWrapper>\r\n            <Body color={this.props.labelColor} {...this.props}>\r\n              {this.props.label}\r\n            </Body>\r\n          </LabelWrapper>\r\n          {component}\r\n        </ComponentWrapper> :\r\n        <ComponentWrapper>\r\n          {component}\r\n        </ComponentWrapper>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nInput.propTypes = propTypes;\r\nInput.defaultProps = defaultProps;\r\n\r\nexport default Input;\r\n","import React                  from \"react\";\r\nimport styled                 from 'styled-components';\r\nimport PropTypes              from 'prop-types';\r\nimport ExtraPropTypes         from 'react-extra-prop-types';\r\n\r\nimport { Draggable }          from 'react-beautiful-dnd';\r\n\r\nimport Icon                   from '../theme/Icon';\r\n\r\nconst propTypes = {\r\n  item: PropTypes.object,\r\n  index: PropTypes.int,\r\n\r\n  handleColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool\r\n}\r\n\r\nconst defaultProps = {\r\n\r\n};\r\n\r\nconst DraggableItem = styled.div `\r\n  width: 100%;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n\r\n  padding-bottom: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst ItemWrapper = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst DragHandle = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-right: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst DragItem = ( props ) => {\r\n\r\n  const { item, index, handleColor, ...rest } = props;\r\n\r\n  let padding;\r\n  if ( props.extraSmall ) { padding = 10}\r\n  else if ( props.small ) { padding = 10 }\r\n  else if ( props.large ) { padding = 18 }\r\n  else if ( props.extraLarge ) { padding = 22 }\r\n  else { padding = 14 }\r\n\r\n  return (\r\n    <Draggable draggableId={item.id} index={index}>\r\n      { ( provided ) => (\r\n        <DraggableItem padding={padding}\r\n                       {...provided.draggableProps}\r\n                       ref={provided.innerRef}>\r\n          <DragHandle {...provided.dragHandleProps}\r\n                      padding={padding}>\r\n            <Icon type={'dragHandle'} color={handleColor}\r\n                  small={props.extraSmall} medium={props.small}\r\n                  large={props.medium} extraLarge={props.large}\r\n                  twoExtraLarge={props.extraLarge}/>\r\n          </DragHandle>\r\n          <ItemWrapper>\r\n            {React.cloneElement(item.content, {...rest})}\r\n          </ItemWrapper>\r\n        </DraggableItem>\r\n      )}\r\n    </Draggable>\r\n  )\r\n};\r\n\r\nDragItem.propTypes = propTypes;\r\nDragItem.defaultProps = defaultProps;\r\n\r\nexport default DragItem;\r\n","import React                  from \"react\";\r\nimport styled                 from 'styled-components';\r\nimport PropTypes              from 'prop-types';\r\nimport ExtraPropTypes         from 'react-extra-prop-types';\r\nimport { DragDropContext,\r\n         Droppable }          from \"react-beautiful-dnd\";\r\n\r\nimport Icon                   from '../theme/Icon';\r\nimport DragItem               from './DragItem';\r\n\r\nconst propTypes = {\r\n  items: PropTypes.arrayOf(PropTypes.node),\r\n  onDragEnd: PropTypes.func,\r\n\r\n  handleColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool\r\n}\r\n\r\nconst defaultProps = {\r\n  items: []\r\n}\r\n\r\nconst DropContainer = styled.div`\r\n  width: auto;\r\n`;\r\n\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nclass InnerList extends React.Component {\r\n\r\n  shouldComponentUpdate (nextProps) {\r\n    if (nextProps.items === this.props.items) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render () {\r\n\r\n    // console.log(this.props.items);\r\n\r\n    return (\r\n      this.props.items.map((item, index) =>\r\n        <DragItem key={item.id}\r\n                  item={item}\r\n                  index={index}\r\n                  handleColor={this.props.handleColor}\r\n                  {...this.props.size}/>)\r\n    )\r\n  }\r\n}\r\n\r\nclass DragGroup extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n\r\n  }\r\n\r\n  onDragEnd = (result) => {\r\n    if (!result.destination) {\r\n      return;\r\n    }\r\n\r\n    const items = reorder(\r\n      this.props.items,\r\n      result.source.index,\r\n      result.destination.index\r\n    );\r\n\r\n    this.props.onDragEnd && this.props.onDragEnd(items);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { extraSmall, small, medium, large, extraLarge } = this.props;\r\n\r\n    const size = {\r\n      extraSmall: extraSmall,\r\n      small: small,\r\n      medium: medium,\r\n      large: large,\r\n      extraLarge: extraLarge\r\n    }\r\n\r\n    // console.log(this.props.items);\r\n    return (\r\n      <DragDropContext onDragEnd={this.onDragEnd}>\r\n        <Droppable droppableId=\"droppable\">\r\n          { provided => (\r\n            <DropContainer ref={provided.innerRef}\r\n                           {...provided.droppableProps}>\r\n              <InnerList items={this.props.items}\r\n                         handleColor={this.props.handleColor}\r\n                         size={size}/>\r\n              {provided.placeholder}\r\n            </DropContainer>\r\n          )}\r\n        </Droppable>\r\n      </DragDropContext>\r\n    )\r\n  };\r\n};\r\n\r\nDragGroup.propTypes = propTypes;\r\nDragGroup.defaultProps = defaultProps;\r\n\r\nexport default DragGroup;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\n\r\nimport DragGroup        from './DragGroup';\r\nimport AgendaItem       from '../items/AgendaItem';\r\nimport EditItem         from '../items/EditItem';\r\n\r\nimport Group            from './Group';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  order: PropTypes.arrayOf(PropTypes.int),\r\n\r\n  onDragEnd: PropTypes.func,\r\n  handleColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool\r\n};\r\n\r\nconst defaultProps = {\r\n  handleColor: Colors.White\r\n};\r\n\r\nclass EditingGroup extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      order: props.order,\r\n    }\r\n\r\n    this.awaitSetState = this.awaitSetState.bind(this);\r\n    this.onDragEnd = this.onDragEnd.bind(this);\r\n  }\r\n\r\n  async awaitSetState(stateProps) {\r\n    await this.setState({\r\n      ...this.state,\r\n      ...stateProps\r\n    })\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n\r\n    if (prevProps.children != this.props.children) {\r\n\r\n      this.awaitSetState({\r\n        order: this.props.order\r\n      });\r\n    }\r\n  }\r\n\r\n  async onDragEnd(items) {\r\n    const newOrder = items.map((item) => item.id);\r\n\r\n    await this.setState({\r\n      ...this.state,\r\n      order: newOrder\r\n    });\r\n\r\n    this.props.onDragEnd && this.props.onDragEnd(newOrder);\r\n  }\r\n\r\n  render() {\r\n\r\n    const size = {\r\n      extraSmall: this.props.extraSmall,\r\n      small: this.props.small,\r\n      medium: this.props.medium,\r\n      large: this.props.large,\r\n      extraLarge: this.props.extraLarge\r\n    }\r\n\r\n    const items = React.Children.map(this.props.children, (child, index) => {\r\n      return {\r\n        id: `${child.props.id}`,\r\n        content: child\r\n      }\r\n    })\r\n\r\n    if (this.state.order.length !== this.props.order.length) {\r\n      return (\r\n      <Group {...size}/>)\r\n    }\r\n\r\n\r\n    return (\r\n\r\n      <Group {...size}>\r\n        <DragGroup {...size} handleColor={this.props.handleColor}\r\n                   items={this.state.order.map(i => items.find(item => item.id === i))}\r\n                   onDragEnd={this.onDragEnd}/>\r\n        {React.cloneElement(this.props.addItem, {...size})}\r\n      </Group>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nEditingGroup.propTypes = propTypes;\r\nEditingGroup.defaultProps = defaultProps;\r\n\r\nexport default EditingGroup;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\n\r\nimport Item         from './Item';\r\nimport Button           from '../buttons/Button';\r\n\r\nconst propTypes = {\r\n  pollTitle: PropTypes.string,\r\n\r\n  buttonText: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  pollTitle: 'Poll Title',\r\n  buttonText: 'VIEW'\r\n};\r\n\r\n\r\nconst HostEditAgendaItem = ( props ) => {\r\n\r\n  const { text, buttonText, onClick, ...rest } = props;\r\n\r\n  return (\r\n    <Item text={text} {...rest}>\r\n      <Button onClick={onClick}>\r\n        { buttonText }\r\n      </Button>\r\n    </Item>\r\n  )\r\n}\r\n\r\nHostEditAgendaItem.propTypes = propTypes;\r\nHostEditAgendaItem.defaultProps = defaultProps;\r\n\r\nexport default HostEditAgendaItem;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport PollData          from '../../data-containers/PollData';\r\n\r\nimport { Colors }        from '../theme/Colors';\r\nimport Input             from '../inputs/Input';\r\nimport EditButton             from '../buttons/EditButton';\r\nimport StatusTertiaryCard from '../format-cards/StatusTertiaryCard';\r\n\r\nimport Group              from '../groups/Group';\r\nimport EditingGroup                 from '../groups/EditingGroup';\r\nimport EditItem                  from '../items/EditItem';\r\nimport AddItem                  from '../items/AddItem';\r\nimport HostEditAgendaItem                  from '../items/HostEditAgendaItem';\r\n\r\n\r\nconst propTypes = {\r\n  roomcode: PropTypes.string,\r\n  title: PropTypes.string,\r\n  status: PropTypes.string,\r\n\r\n  polls: PropTypes.object,\r\n  order: PropTypes.object,\r\n\r\n  onDragEnd: PropTypes.func,\r\n  onAddClick: PropTypes.func,\r\n  onDeleteClick: PropTypes.func,\r\n  onEditClick: PropTypes.func,\r\n  onViewClick: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n};\r\n\r\nconst Header = ( props ) => (\r\n  <Input label={'Title'} type={'inputfield'}\r\n         value={props.title} fontColor={Colors.White}\r\n         onChange={props.onChange}\r\n         backgroundColor={Colors.Blue}\r\n         borderColor={Colors.White}\r\n         labelColor={Colors.White}\r\n         {...props.size}/>\r\n)\r\n\r\nconst HeaderButton = (props) => (\r\n  <EditButton type={'save'} color={Colors.White} onClick={props.onEditClick} {...props.size}/>\r\n)\r\n\r\nconst AddComponent = ( props ) => {\r\n\r\n  const { onAddClick, ...rest } = props;\r\n\r\n  return (\r\n    <AddItem onClick={onAddClick} textColor={Colors.White} iconColor={Colors.White} {...rest}>\r\n      Add new poll\r\n    </AddItem>\r\n  )\r\n}\r\n\r\nconst PendingSectionGroup = ( props ) => {\r\n\r\n  const { roomcode, polls, order,\r\n          onDragEnd, onAddClick, onDeleteClick, onEditClick,\r\n          size} = props;\r\n\r\n  return (\r\n    <EditingGroup addItem={<AddComponent onAddClick={onAddClick}/>}\r\n                  order={order}\r\n                  onDragEnd={onDragEnd}\r\n                  {...size}>\r\n      {order.map((id) => {\r\n        const poll = polls[id];\r\n\r\n        return (\r\n        <EditItem id={id} onDelete={() => onDeleteClick(id)} iconColor={Colors.White}>\r\n          <HostEditAgendaItem text={poll.title} buttonText={'EDIT'} onClick={() => onEditClick(id)}/>\r\n        </EditItem>\r\n      )})}\r\n    </EditingGroup>\r\n  )\r\n}\r\n\r\nconst SectionGroup = ( props ) => {\r\n  const { roomcode, polls, order, onViewClick, size} = props;\r\n\r\n  return (\r\n    <Group {...size}>\r\n      { order.map((id) => {\r\n        const poll = polls[id];\r\n        return (\r\n        <HostEditAgendaItem text={poll.title} buttonText={'VIEW'} onClick={onViewClick}/>\r\n      )}) }\r\n    </Group>\r\n  )\r\n}\r\n\r\nconst HostEditAgendaCard = ( props ) => {\r\n\r\n  const { roomcode, title, status, polls, order,\r\n          onDeleteClick, onViewClick, onEditClick,\r\n          onPollEditClick,\r\n          onDragEnd, onAddClick,\r\n          ...rest } = props;\r\n\r\n  const size = {\r\n    extraSmall: props.extraSmall,\r\n    small: props.small,\r\n    medium: props.medium,\r\n    large: props.large,\r\n    extraLarge: props.extraLarge\r\n  }\r\n\r\n\r\n  let statusList = ['open', 'closed'];\r\n  statusList = statusList.filter((status) => order[status] && order[status].length != 0);\r\n\r\n  let sections = [\r\n    { status: 'pending',\r\n      content: (\r\n        <PendingSectionGroup roomcode={roomcode}\r\n                             polls={polls}\r\n                             order={order['pending']}\r\n                             onDragEnd={onDragEnd}\r\n                             onEditClick={onPollEditClick}\r\n                             onAddClick={onAddClick}\r\n                             onDeleteClick={onDeleteClick}\r\n                             size={size}/>\r\n      )\r\n    }\r\n  ]\r\n\r\n  for (let i = 0; i < statusList.length; i++) {\r\n    let status = statusList[i];\r\n    sections.push({\r\n      status: status,\r\n      content: (\r\n        <SectionGroup roomcode={roomcode}\r\n                      polls={polls}\r\n                      order={order[status]}\r\n                      size={size}/>\r\n      )\r\n    })\r\n  }\r\n\r\n  return (\r\n    <StatusTertiaryCard header={<Header title={props.title} onChange={props.onTitleChange} size={size}/>}\r\n                        headerButton={<HeaderButton onEditClick={onEditClick} size={size}/>}\r\n                        sections={sections}\r\n                        width={'100%'}\r\n                        height={props.extraSmall ? `100%` : `stretch`}\r\n                        {...size}/>\r\n  )\r\n\r\n}\r\n\r\nHostEditAgendaCard.propTypes = propTypes;\r\nHostEditAgendaCard.defaultProps = defaultProps;\r\n\r\nexport default HostEditAgendaCard;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body             from '../theme/Body';\r\n\r\nimport StatusText       from '../format-text/StatusText';\r\nimport Button           from '../buttons/Button';\r\n\r\nimport Card             from './Card';\r\n\r\n\r\nconst propTypes = {\r\n  disabled: PropTypes.bool,\r\n\r\n  editing: PropTypes.bool,\r\n  loading: PropTypes.bool,\r\n  pollStatus: PropTypes.string,\r\n\r\n  updateStatus: PropTypes.func,\r\n\r\n  headerColor: ExtraPropTypes.color,\r\n  textColor: ExtraPropTypes.color,\r\n  cardColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  headerColor: Colors.White\r\n};\r\n\r\nconst HeadingWrapper = styled.div`\r\n`;\r\n\r\nconst SectionWrapper = styled.div`\r\n  padding-top: 15px;\r\n`;\r\n\r\nconst SectionHeadingWrapper = styled.div`\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst HorizontalSectionWrapper = styled.div`\r\n  padding-top: 10px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  width: auto;\r\n`;\r\n\r\nconst PanelHeader = ( props ) => {\r\n\r\n  return (\r\n    <HeadingWrapper>\r\n      <Jumbo fiveExtraSmall={props.extraSmall} fourExtraSmall={props.small}\r\n             threeExtraSmall={props.medium} twoExtraSmall={props.large}\r\n             extraSmall={props.extraLarge} color={props.color}>\r\n        STATUS\r\n      </Jumbo>\r\n    </HeadingWrapper>\r\n  )\r\n}\r\n\r\nconst StatusButton = ( props ) => {\r\n\r\n  const { editing, loading, status, onClick, size, ...rest } = props;\r\n\r\n  let disabled = false;\r\n  let text;\r\n  let color;\r\n  let newStatus;\r\n\r\n  if ( loading ) {\r\n    disabled = true;\r\n    text = 'WAIT';\r\n    color = Colors.LightGrey;\r\n  }\r\n  else if ( status === 'closed') {\r\n    disabled = true;\r\n    text = 'CLOSED';\r\n    color = Colors.LightGrey;\r\n  }\r\n  else if ( status === 'open' ) {\r\n    text = 'CLOSE';\r\n    color = Colors.Red;\r\n    newStatus = 'closed';\r\n  }\r\n  else {\r\n    text = 'OPEN';\r\n    color = Colors.Green;\r\n    newStatus = 'open';\r\n  }\r\n\r\n  console.log(props.disable)\r\n  if ( editing || props.disable ) {\r\n    color = Colors.LightGrey;\r\n    disabled = true;\r\n  }\r\n\r\n  return (\r\n    <Button backgroundColor={editing ? Colors.LightGrey : color} onClick={() => onClick(newStatus)}\r\n            disabled={editing ? true : disabled} {...size}>\r\n      {text}\r\n    </Button>\r\n  )\r\n\r\n}\r\n\r\nconst PanelSection = ( props ) => {\r\n\r\n  const { disable, editing, loading, status, children,\r\n          onStatusClick, color, size, ...rest } = props;\r\n\r\n  if (size.extraSmall) {\r\n    return (\r\n      <HorizontalSectionWrapper>\r\n        <StatusText status={loading ? 'loading' : status} color={color} {...size}/>\r\n        {children}\r\n        <ButtonWrapper>\r\n          <StatusButton disable={disable} editing={editing} loading={loading} status={status}\r\n                        onClick={onStatusClick} size={size}/>\r\n        </ButtonWrapper>\r\n      </HorizontalSectionWrapper>\r\n    )\r\n  }\r\n  return (\r\n    <SectionWrapper>\r\n      <SectionHeadingWrapper>\r\n        <StatusText status={loading ? 'loading' : status} color={color} {...size}/>\r\n      </SectionHeadingWrapper>\r\n      {children}\r\n      <StatusButton disable={disable} editing={editing} loading={loading} status={status}\r\n                    onClick={onStatusClick} size={size}/>\r\n    </SectionWrapper>\r\n  )\r\n}\r\n\r\nconst HostStatusCard = ( props ) => {\r\n\r\n  const size = {\r\n    extraSmall: props.extraSmall,\r\n    small: props.small,\r\n    medium: props.medium,\r\n    large: props.large,\r\n    extraLarge: props.extraLarge\r\n  }\r\n\r\n  return (\r\n    <Card color={props.cardColor} borderColor={props.borderColor} borderMedium {...size}>\r\n      <PanelHeader loading={props.loading} color={props.headerColor} {...size}/>\r\n      <PanelSection disable={props.disable} editing={props.editing} loading={props.loading}\r\n                    status={props.pollStatus} onStatusClick={props.onStatusClick}\r\n                    color={props.textColor} size={size}/>\r\n    </Card>\r\n  )\r\n}\r\n\r\nHostStatusCard.propTypes = propTypes;\r\nHostStatusCard.defaultProps = defaultProps;\r\n\r\nexport default HostStatusCard;\r\n","import React, { useEffect } from 'react';\r\nimport styled               from 'styled-components';\r\n\r\nimport { connect }          from 'react-redux';\r\nimport ActionTypes          from '../store/actionTypes';\r\n\r\nimport history              from '../history';\r\n\r\nimport LoadingCard              from '../components/cards/LoadingCard';\r\n\r\nimport { Colors }           from '../components/theme/Colors';\r\nimport ViewportHandler      from './format-pages/ViewportHandler';\r\nimport SideBarPage          from './format-pages/SideBarPage';\r\n\r\nimport HostAgendaCard       from '../components/cards/HostAgendaCard';\r\nimport HostEditAgendaCard   from '../components/cards/HostEditAgendaCard';\r\nimport HostStatusCard       from '../components/cards/HostStatusCard'\r\n\r\n\r\nconst getSize = (viewport) => {\r\n\r\n  let size = {};\r\n  switch (viewport) {\r\n    case 'mobile':\r\n    case 'smallMobile':\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'hdDesktop':\r\n    case 'uhdDesktop':\r\n      size.medium = true;\r\n      break;\r\n    default:\r\n      size.small = true;\r\n  }\r\n\r\n  return size;\r\n}\r\n\r\nconst SideBarComponent = ( props ) => {\r\n\r\n  const size = getSize(props.viewport)\r\n\r\n  return (\r\n    <HostStatusCard editing={props.editing}\r\n                    loading={props.loading}\r\n                    pollStatus={props.pollStatus}\r\n                    onStatusClick={props.onStatusClick}\r\n                    headerColor={Colors.White}\r\n                    textColor={Colors.White}\r\n                    cardColor={`none`} borderColor={Colors.White}\r\n                    {...size}/>\r\n  )\r\n}\r\n\r\nconst AgendaComponent = ( props ) => {\r\n\r\n  const size = getSize(props.viewport)\r\n\r\n  if (props.loading) {\r\n    return (\r\n      <LoadingCard cardColor={Colors.Blue}\r\n                   cardBorderColor={Colors.White}\r\n                   textColor={Colors.White}\r\n                   {...size}/>\r\n    );\r\n  }\r\n\r\n  return props.editing ?\r\n      <HostEditAgendaCard {...size} onAddClick={props.onAddClick}\r\n                                 onDeleteClick={props.onDeleteClick}\r\n                                 onDragEnd={props.onDragEnd}\r\n                                 onTitleChange={props.onTitleChange}\r\n                                 onPollEditClick={props.onPollEditClick}\r\n                                 {...props.cardProps}/> :\r\n      <HostAgendaCard {...size} {...props.cardProps}\r\n                      onStatusClick={props.onStatusClick}\r\n                      onViewClick={props.onViewClick}/>\r\n\r\n}\r\n\r\nconst HostRoomPage = ( props ) => {\r\n\r\n  const roomcode = props.match.params.roomcode || '0000';\r\n\r\n  useEffect(() =>  {\r\n    // console.log(props);\r\n    props.onFetchAgenda(roomcode);\r\n  }, [])\r\n\r\n  // if ( props.loading ) { return <Loading/> }\r\n  if ( props.error ) { console.log(props.error); history.replace('/Login') }\r\n\r\n  const cardProps = {\r\n    roomcode: roomcode,\r\n    title: props.title,\r\n    status: props.status,\r\n    polls: props.polls,\r\n    order: props.order,\r\n    onEditClick: () => props.onEditClick(roomcode),\r\n  }\r\n\r\n\r\n  const onViewClick = (poll_id) => {\r\n    props.polls[poll_id].status === 'closed' ?\r\n      history.push(`/PollResults/${roomcode}/${poll_id}`, {roomStatus: props.status}) :\r\n      history.push(`/HostPoll/${roomcode}/${poll_id}`, {roomStatus: props.status})\r\n  };\r\n\r\n  const onPollEditClick = (poll_id) => {\r\n    props.onEditClick(roomcode);\r\n    history.push(`/HostPoll/${roomcode}/${poll_id}`, {roomStatus: props.status, editing: true})\r\n  }\r\n\r\n  const sideContent = <SideBarComponent editing={props.editing}\r\n                                        loading={props.loading}\r\n                                        pollStatus={props.status}\r\n                                        onStatusClick={(newStatus) => props.onUpdateStatus(roomcode, newStatus)}/>\r\n\r\n  return (\r\n    <ViewportHandler>\r\n      <SideBarPage sideContent={sideContent} color={Colors.Blue}>\r\n        <AgendaComponent editing={props.editing}\r\n                         loading={props.loading}\r\n                         onAddClick={() => props.onAddClick(roomcode)}\r\n                         onDeleteClick={props.onDeleteClick}\r\n                         onDragEnd={props.onDragEnd}\r\n                         onTitleChange={props.onTitleChange}\r\n                         onPollEditClick={onPollEditClick}\r\n                         onStatusClick={(poll_id, newStatus) => props.onUpdatePollStatus(roomcode, poll_id, newStatus)}\r\n                         onViewClick={onViewClick}\r\n                         cardProps={cardProps}/>\r\n      </SideBarPage>\r\n    </ViewportHandler>\r\n  )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    title: state.hostagenda.title,\r\n    status: state.hostagenda.status,\r\n    polls: state.hostagenda.polls,\r\n    order: state.hostagenda.order,\r\n    editing: state.hostagenda.editing,\r\n    loading: state.hostagenda.loading,\r\n    error: state.hostagenda.error,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchAgenda: (room_id) => dispatch({ type: ActionTypes.hostagenda.FETCH_AGENDA_START,\r\n                                            room_id }),\r\n    onEditClick: (room_id) => { dispatch({ type: ActionTypes.hostagenda.TOGGLE_EDIT })\r\n                                dispatch({ type: ActionTypes.hostagenda.UPDATE_AGENDA_START,\r\n                                          room_id })},\r\n    onTitleChange: (event) => { dispatch({ type: ActionTypes.hostagenda.UPDATE_TITLE,\r\n                                             event })},\r\n    onAddClick: (room_id) => dispatch({ type: ActionTypes.hostagenda.ADD_POLL_START,\r\n                                 room_id }),\r\n    onDeleteClick: (poll_id) => dispatch({ type: ActionTypes.hostagenda.DELETE_POLL,\r\n                                           poll_id }),\r\n    onDragEnd: (newPendingOrder) => dispatch({ type: ActionTypes.hostagenda.UPDATE_ORDER,\r\n                                        newPendingOrder }),\r\n    onUpdatePollStatus: (room_id, poll_id, newStatus) => dispatch({ type: ActionTypes.hostagenda.UPDATE_POLL_STATUS_START,\r\n                                                              room_id, poll_id, newStatus }),\r\n    onUpdateStatus: (room_id, newStatus) => dispatch({ type:ActionTypes.hostagenda.UPDATE_ROOM_STATUS_START,\r\n                                                    room_id, newStatus }),\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HostRoomPage);\r\n","import React            from 'react';\r\nimport styled, { css }  from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Body             from '../theme/Body';\r\nimport Input            from '../inputs/Input';\r\nimport Card             from './Card';\r\nimport Button           from '../buttons/Button';\r\nimport Jumbo             from '../theme/Jumbo';\r\n\r\n\r\nconst propTypes = {\r\n  value: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  handleSubmit: PropTypes.func,\r\n};\r\n\r\nconst defaultProps = {\r\n  handleChange: undefined,\r\n  handleSubmit: undefined\r\n};\r\n\r\nconst ComponentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  width: 50%;\r\n`;\r\n\r\nconst TextInputWrapper = styled.div`\r\n  padding-bottom: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  padding-bottom: ${({padding}) => padding}px;\r\n`;\r\n\r\nconst Title = (props) => {\r\n\r\n  const { title, extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  let titlePadding;\r\n  if ( extraSmall ) { titlePadding = 5; }\r\n  else if ( small ) { titlePadding = 10; }\r\n  else if ( large ) { titlePadding = 20; }\r\n  else { titlePadding = 15; }\r\n\r\n  return (\r\n    <TitleWrapper padding={titlePadding}>\r\n      <Jumbo twoExtraSmall={extraSmall}\r\n             extraSmall={small}\r\n             small={medium}\r\n             medium={large}\r\n             large={extraLarge}\r\n             color={Colors.White}>\r\n        {title}\r\n      </Jumbo>\r\n    </TitleWrapper>\r\n  )\r\n};\r\n\r\nconst CodeInput = (props) => {\r\n\r\n  const { label, value, handleChange, handleSubmit,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  let inputPadding;\r\n  if ( extraSmall ) { inputPadding = 10 }\r\n  else if ( small ) { inputPadding = 15 }\r\n  else if ( large ) { inputPadding =  25 }\r\n  else { inputPadding = 20  }\r\n\r\n  return (\r\n    <TextInputWrapper padding={inputPadding}>\r\n      <Input type={\"inputfield\"} value={value} fontColor={Colors.White}\r\n             onChange={handleChange} placeholder={\"Enter Room Code\"}\r\n             backgroundColor={Colors.Blue} borderColor={Colors.White}\r\n             placeholderColor={Colors.White}\r\n             {...{extraSmall, small, medium, large, extraLarge}}/>\r\n    </TextInputWrapper>\r\n  )\r\n};\r\n\r\nconst EnterButton = (props) => {\r\n\r\n  const { extraSmall, small, medium, large, extraLarge, handleSubmit } = props;\r\n\r\n  return(\r\n    <ButtonWrapper>\r\n      <Button onClick={handleSubmit} color={Colors.White} backgroundColor={Colors.Buff}\r\n              {...{extraSmall, small, medium, large, extraLarge}}>\r\n         ENTER\r\n      </Button>\r\n    </ButtonWrapper>\r\n\r\n  )\r\n};\r\n\r\nconst RoomCodeForm = (props) => {\r\n\r\n    return (\r\n      <Card borderLarge color={Colors.Blue} borderColor={Colors.Blue}>\r\n        <ComponentWrapper>\r\n          <Title {...props}/>\r\n          <CodeInput {...props}/>\r\n          <EnterButton {...props}/>\r\n          </ComponentWrapper>\r\n      </Card>\r\n\r\n\r\n    );\r\n\r\n};\r\n\r\nRoomCodeForm.propTypes = propTypes;\r\nRoomCodeForm.defaultProps = defaultProps;\r\n\r\nexport default RoomCodeForm;\r\n","import React                from 'react';\r\nimport styled               from 'styled-components';\r\nimport ParticlesBg          from 'particles-bg';\r\n\r\nimport { connect }          from 'react-redux';\r\nimport ActionTypes           from '../store/actionTypes';\r\nimport history              from '../history';\r\n\r\nimport ViewportHandler      from './format-pages/ViewportHandler';\r\nimport { Colors }           from '../components/theme/Colors';\r\nimport MainPage             from './format-pages/MainPage';\r\n\r\nimport RoomcodeCard         from '../components/cards/RoomcodeCard';\r\n\r\nconst RoomcodeWrapper = styled.div`\r\n  width: ${({width}) => width};\r\n`;\r\n\r\nconst RoomcodeComponent = ( props ) => {\r\n\r\n  let width;\r\n  let size = {};\r\n  switch (props.viewport) {\r\n    case 'smallDesktop':\r\n      width = `75%`;\r\n      size.small = true;\r\n      break;\r\n    case 'tablet':\r\n      width = `100%`;\r\n      size.small = true;\r\n      break;\r\n    case 'mobile':\r\n    case 'smallMobile':\r\n      width = `100%`\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'hdDesktop':\r\n    case 'uhdDesktop':\r\n      width = `50%`\r\n      size.medium = true;\r\n      break;\r\n    default:\r\n      width = `50%`\r\n      size.small = true;\r\n  }\r\n\r\n  return (\r\n    <RoomcodeWrapper width={width}>\r\n       <RoomcodeCard title=\"Faculty Voting\"\r\n                     viewport={props.viewport} {...size}\r\n                     value={props.roomcode}\r\n                     handleChange={props.handleChange}\r\n                     handleSubmit={props.handleSubmit}/>\r\n    </RoomcodeWrapper>\r\n  )\r\n}\r\n\r\nconst RoomCodeScreen = ( props ) => {\r\n\r\n  if (props.submitted) {\r\n    if (props.error) {\r\n      alert(`Invalid code, please enter a valid code.`);\r\n    }\r\n    else {\r\n      props.resetCode();\r\n      alert('You are entering room: ' + props.roomcode);\r\n\r\n      history.push(`/UserAgenda/${props.roomcode}`);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ViewportHandler>\r\n       <MainPage color={Colors.Blue}>\r\n           <RoomcodeComponent viewport={props.viewport}\r\n                              value={props.roomcode}\r\n                              handleChange={(event) => props.updateCode(event.target.value)}\r\n                              handleSubmit={() => props.validateCode(props.roomcode)}/>\r\n       </MainPage>\r\n    </ViewportHandler>\r\n   );\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    roomcode: state.roomcode.roomcode,\r\n    submitted: state.roomcode.submitted,\r\n    loading: state.roomcode.loading,\r\n    error: state.roomcode.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    updateCode: (value) => dispatch({ type: ActionTypes.roomcode.UPDATE_ROOMCODE,\r\n                                      value }),\r\n    validateCode: (room_id) => dispatch({ type: ActionTypes.roomcode.CHECK_ROOMCODE_START,\r\n                                          room_id }),\r\n    resetCode: () => dispatch({ type: ActionTypes.roomcode.RESET_ROOMCODE,}),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomCodeScreen);\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport SecondaryCard            from '../format-cards/SecondaryCard';\r\nimport AgendaItem                from '../items/AgendaItem';\r\nimport Group                 from '../groups/Group';\r\n\r\nconst propTypes = {\r\n  roomcode: PropTypes.string,\r\n  title: PropTypes.string,\r\n  status: PropTypes.string,\r\n\r\n  polls: PropTypes.object,\r\n  order: PropTypes.object,\r\n\r\n  onViewClick: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n\r\n};\r\n\r\n\r\nconst UserAgendaCard = ( props ) => {\r\n\r\n  const { roomcode, title, status, polls, order, onViewClick,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  let allPolls = [];\r\n  let statusList = ['open', 'pending', 'closed'];\r\n  statusList = statusList.filter((status) => order[status] && order[status].length != 0);\r\n\r\n  for (let i = 0; i < statusList.length; i++) {\r\n    allPolls = allPolls.concat(order[statusList[i]]) }\r\n\r\n  return (\r\n    <SecondaryCard header={title} width={`100%`}\r\n                   extraSmall={extraSmall} small={small}\r\n                   medium={medium} large={large} extraLarge={extraLarge}>\r\n      <Group>\r\n        {allPolls.map((id) => {\r\n          const poll = polls[id];\r\n          return (\r\n            <AgendaItem pollTitle={poll.title}\r\n                        status={poll.status}\r\n                        onViewClick={onViewClick ? () => onViewClick(id) : undefined}/>\r\n          )\r\n        })}\r\n      </Group>\r\n    </SecondaryCard>\r\n  )\r\n};\r\n\r\nUserAgendaCard.propTypes = propTypes;\r\nUserAgendaCard.defaultProps = defaultProps;\r\n\r\nexport default UserAgendaCard;\r\n","import React, { useEffect }                from 'react';\r\nimport styled               from 'styled-components';\r\n\r\nimport { connect }          from 'react-redux';\r\nimport ActionTypes          from '../store/actionTypes';\r\nimport history              from '../history';\r\n\r\nimport LoadingCard              from '../components/cards/LoadingCard';\r\n\r\nimport { Colors }           from '../components/theme/Colors';\r\nimport ViewportHandler      from './format-pages/ViewportHandler';\r\nimport MainPage             from './format-pages/MainPage';\r\n\r\nimport UserAgendaCard       from '../components/cards/UserAgendaCard';\r\n\r\n\r\nconst PageWrapper = styled.div`\r\n  background-color: ${Colors.LightBlue};\r\n  right: 0;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n\r\n  position: fixed;\r\n  overflow: auto;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst ComponentWrapper = styled.div`\r\n  height: 80%;\r\n  width: 80%;\r\n`;\r\n\r\nconst AgendaComponent = ( props ) => {\r\n\r\n  let size = {};\r\n  switch (props.viewport) {\r\n    case 'mobile':\r\n    case 'smallMobile':\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'hdDesktop':\r\n    case 'uhdDesktop':\r\n      size.medium = true;\r\n      break;\r\n    default:\r\n      size.small = true;\r\n  }\r\n\r\n  if (props.loading) {\r\n    return (\r\n      <LoadingCard cardColor={Colors.Blue}\r\n                   cardBorderColor={Colors.White}\r\n                   textColor={Colors.White}\r\n                   {...size}/>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <UserAgendaCard {...size}\r\n                    roomcode={props.roomcode}\r\n                    title={props.title}\r\n                    status={props.status}\r\n                    polls={props.polls}\r\n                    order={props.order}\r\n                    onViewClick={props.onViewClick}/>\r\n  )\r\n}\r\n\r\nconst UserAgendaPage = ( props ) => {\r\n\r\n  const roomcode = props.match.params.roomcode || '0000'\r\n\r\n  useEffect(() =>  {\r\n    props.onFetchAgenda(roomcode);\r\n  }, [])\r\n\r\n  // if ( props.loading ) { return <Loading/> }\r\n  if ( props.error ) { console.log(props.error); history.replace('/Login') }\r\n\r\n  const onViewClick = (poll_id) => {\r\n    props.polls[poll_id].status === 'closed' ?\r\n      history.push(`/PollResults/${roomcode}/${poll_id}`) :\r\n      history.push(`/UserPoll/${roomcode}/${poll_id}`)\r\n  };\r\n\r\n\r\n  return (\r\n    <ViewportHandler>\r\n      <MainPage>\r\n          <AgendaComponent loading={props.loading}\r\n                           viewport={props.viewport}\r\n                           roomcode={roomcode}\r\n                           title={props.title}\r\n                           status={props.status}\r\n                           polls={props.polls}\r\n                           order={props.order}\r\n                           onViewClick={onViewClick}/>\r\n      </MainPage>\r\n    </ViewportHandler>\r\n  );\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    title: state.useragenda.title,\r\n    status: state.useragenda.status,\r\n    polls: state.useragenda.polls,\r\n    order: state.useragenda.order,\r\n    loading: state.useragenda.loading,\r\n    error: state.useragenda.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchAgenda: (room_id) => dispatch({ type: ActionTypes.useragenda.FETCH_AGENDA_START,\r\n                                            room_id }),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserAgendaPage);\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Group            from '../groups/Group';\r\nimport { Colors }       from '../theme/Colors';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  selectedOptions: PropTypes.object,\r\n  onSelect: PropTypes.func, // for exterior use\r\n  disabled: PropTypes.bool,\r\n\r\n  type: PropTypes.oneOf(['single', 'multiple']),\r\n\r\n  // Option Props\r\n  iconColor: ExtraPropTypes.color,\r\n  fontColor: ExtraPropTypes.color,\r\n  backgroundColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  type: 'single',\r\n  iconColor: Colors.Blue,\r\n\r\n  fontColor: Colors.Black,\r\n  borderColor: Colors.Blue,\r\n};\r\n\r\nclass OptionGroup extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // const selectedOptions = props.selectedOptions ? props.selectedOptions.map((item) => item) :\r\n    //                                   Array(props.children.length).fill(false);\r\n\r\n    this.state = { selectedOptions: props.selectedOptions ? {...props.selectedOptions} : {} }\r\n\r\n    this._handleClickMulti = this._handleClickMulti.bind(this);\r\n    this._handleClickSngl = this._handleClickSngl.bind(this);\r\n\r\n    this._handleClick = this._handleClick.bind(this);\r\n    this._renderOptions = this._renderOptions.bind(this);\r\n  };\r\n\r\n  async _handleClickMulti ( event, id ) {\r\n\r\n    let newSelected = {...this.state.selectedOptions};\r\n\r\n    if (this.state.selectedOptions[id]) { newSelected[id] = false; }\r\n    else { newSelected[id] = true; }\r\n\r\n    await this.setState({...this.state, selectedOptions: newSelected});\r\n\r\n    if (this.props.onSelect) { this.props.onSelect(this.state.selectedOptions)}\r\n\r\n  }\r\n\r\n  async _handleClickSngl ( event, id ) {\r\n\r\n    let newSelected;\r\n\r\n    if (this.state.selectedOptions[id]) {\r\n      newSelected = {};\r\n    }\r\n    else {\r\n      newSelected = {};\r\n      newSelected[id] = true;\r\n    }\r\n\r\n    await this.setState({...this.state, selectedOptions: newSelected});\r\n\r\n    if (this.props.onSelect) { this.props.onSelect(this.state.selectedOptions)}\r\n  }\r\n\r\n\r\n  _handleClick = ( event, id ) => {\r\n\r\n    if (this.props.disabled) { return; }\r\n\r\n    this.props.type === 'multiple' ? this._handleClickMulti(event, id) :\r\n                                     this._handleClickSngl(event, id);\r\n  };\r\n\r\n   _renderOptions = ( props ) => {\r\n    const { children, iconColor, ...rest } = props;\r\n\r\n    // console.log(this.state.selectedOptions);\r\n\r\n    return React.Children.map(children, (item, index) => {\r\n\r\n      const id = item.props.id;\r\n\r\n      const onClick = (event) => this._handleClick(event, id);\r\n      const clicked = this.state.selectedOptions[id];\r\n      const iconType = (this.props.type === 'multiple') ? 'checkbox' : 'bubble';\r\n\r\n      const itemProps = { onClick: onClick,\r\n                          clicked: clicked,\r\n                          iconColor: iconColor,\r\n                          iconType: iconType};\r\n      return (\r\n        React.cloneElement(item, {...itemProps})\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Group {...this.props}>\r\n        {this._renderOptions(this.props)}\r\n      </Group>\r\n    )\r\n  }\r\n};\r\n\r\nOptionGroup.propTypes = propTypes;\r\nOptionGroup.defaultProps = defaultProps;\r\n\r\nexport default OptionGroup;\r\n","import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Icon             from '../theme/Icon';\r\n\r\nconst propTypes = {\r\n  onClick: PropTypes.func,\r\n  clicked: PropTypes.bool,\r\n\r\n  color: ExtraPropTypes.color,\r\n\r\n  extraLarge: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  extraSmall: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  onClick: undefined,\r\n  clicked: false,\r\n  color: Colors.Black,\r\n};\r\n\r\nconst renderClicked = ( props ) => {\r\n  return (\r\n  <Icon type={'bubble'}\r\n        {...props}/>\r\n);}\r\n\r\nconst renderUnClicked = ( props ) => (\r\n  <Icon type={'circle'}\r\n        {...props} />\r\n);\r\n\r\nconst Bubble = ( props ) => {\r\n\r\n  const { clicked, ...rest } = props;\r\n\r\n  return (\r\n    clicked ? renderClicked(rest) :\r\n              renderUnClicked(rest)\r\n  );\r\n};\r\n\r\nBubble.propTypes = propTypes;\r\nBubble.defaultProps = defaultProps;\r\n\r\nexport default Bubble;\r\n","import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Icon       from '../theme/Icon';\r\n\r\nconst propTypes = {\r\n  onClick: PropTypes.func,\r\n  clicked: PropTypes.bool,\r\n\r\n  color: ExtraPropTypes.color,\r\n\r\n  extraLarge: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  extraSmall: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  onClick: undefined,\r\n  clicked: false,\r\n  color: Colors.Black,\r\n};\r\n\r\nconst renderClicked = ( props ) => (\r\n  <Icon type={'checkbox'}\r\n        {...props} />\r\n);\r\n\r\nconst renderUnClicked = ( props ) => (\r\n  <Icon type={'box'}\r\n        {...props} />\r\n);\r\n\r\nconst CheckBox = ( props ) => {\r\n\r\n  const { clicked, ...rest } = props;\r\n\r\n  return(clicked ? renderClicked(rest) : renderUnClicked(rest));\r\n\r\n}\r\n\r\nCheckBox.propTypes = propTypes;\r\nCheckBox.defaultProps = defaultProps;\r\n\r\nexport default CheckBox;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Icon             from '../theme/Icon';\r\nimport { Colors }       from '../theme/Colors';\r\nimport Bubble           from '../buttons/Bubble';\r\nimport CheckBox         from '../buttons/CheckBox';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  iconButton: PropTypes.node,\r\n  extraIcons: PropTypes.arrayOf(PropTypes.node),\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  buttonColor: Colors.Black,\r\n  onClick: undefined,\r\n  clicked: false,\r\n  buttonType: 'bubble',\r\n};\r\n\r\nconst ChildrenWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-right: ${({padding}) => padding};\r\n`;\r\n\r\nconst ExtraIconWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  padding-left: ${({padding}) => padding};\r\n`;\r\n\r\nconst OptionWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  width: auto;\r\n  /* border: 1px solid black; */\r\n`;\r\n\r\n\r\nconst DummyIcon = styled.div`\r\n  height: ${({size}) => size};\r\n  width: ${({size}) => size};\r\n`;\r\n\r\nconst optionConfig = {\r\n  extraSmall: { padding: `10px`,\r\n               iconSize: '0.75em' },\r\n  small: { padding: `12px`,\r\n           iconSize: '1em' },\r\n  medium: { padding: `16px`,\r\n           iconSize: '1.5em'},\r\n  large: { padding: `20px`,\r\n           iconSize: '1.75em'},\r\n  extraLarge: { padding: `28px`,\r\n           iconSize: '2em'},\r\n};\r\n\r\nconst renderExtraIcons = ( props, padding ) => {\r\n\r\n  const { extraIcons, extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  const itemProps = { extraSmall: extraSmall, small: small, medium: medium,\r\n                      large: large, extraLarge: extraLarge };\r\n\r\n  return extraIcons.map((item) => (\r\n    <ExtraIconWrapper padding={padding}>\r\n      {React.cloneElement(item, {...itemProps})}\r\n    </ExtraIconWrapper>\r\n  ))\r\n}\r\n\r\n\r\nconst OptionBase = (props) => {\r\n\r\n  const { children, iconButton, extraIcons,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  let padding;\r\n\r\n  if (extraLarge) { padding = `28px` }\r\n  else if (large) { padding =  `20px` }\r\n  else if (small) { padding = `12px` }\r\n  else if (extraSmall) { padding = `10px`}\r\n  else { padding = `16px` }\r\n\r\n  const itemProps = { extraSmall: extraSmall, small: small, medium: medium,\r\n                      large: large, extraLarge: extraLarge };\r\n\r\n  return (\r\n    <OptionWrapper>\r\n      <IconButtonWrapper padding={padding}>\r\n        {React.cloneElement(iconButton, {...itemProps})}\r\n      </IconButtonWrapper>\r\n      <ChildrenWrapper>\r\n        {children}\r\n      </ChildrenWrapper>\r\n      { extraIcons ? renderExtraIcons(props, padding) : <div/>}\r\n    </OptionWrapper>\r\n  )\r\n\r\n};\r\n\r\nOptionBase.propTypes = propTypes;\r\nOptionBase.defaultProps = defaultProps;\r\n\r\nexport default OptionBase;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Icon             from '../theme/Icon';\r\nimport { Colors }       from '../theme/Colors';\r\nimport Bubble           from '../buttons/Bubble';\r\nimport CheckBox         from '../buttons/CheckBox';\r\n\r\nimport OptionBase       from './OptionBase';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  extraIcons: PropTypes.arrayOf(PropTypes.node),\r\n  type: PropTypes.oneOf(['bubble', 'checkbox', 'add']),\r\n\r\n  iconColor: ExtraPropTypes.color,\r\n  onClick: PropTypes.func,\r\n  clicked: PropTypes.bool,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  type: 'checkbox',\r\n  iconColor: Colors.Black,\r\n  onClick: undefined,\r\n  clicked: false\r\n};\r\n\r\nconst bubble = ( props ) => {\r\n\r\n  const { iconColor, onClick, clicked,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  return (\r\n    <Bubble color={iconColor} onClick={onClick} clicked={clicked}/>\r\n  )\r\n};\r\n\r\nconst checkbox = ( props ) => {\r\n\r\n  const { iconColor, onClick, clicked,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  return (\r\n    <CheckBox color={iconColor} onClick={onClick} clicked={clicked}/>\r\n  )\r\n\r\n};\r\n\r\nconst add = ( props ) => {\r\n\r\n  const { iconColor, onClick,\r\n           extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  return (\r\n    <Icon type={'addCircle'} color={iconColor} onClick={onClick}/>\r\n  )\r\n\r\n};\r\n\r\nconst Option = ( props ) => {\r\n\r\n  const { type, children, extraIcons,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  let iconButton;\r\n  switch (type) {\r\n    case 'bubble':\r\n      iconButton = bubble(props);\r\n      break;\r\n    case 'add':\r\n      iconButton = add(props);\r\n      break;\r\n    default:\r\n      iconButton = checkbox(props);\r\n  }\r\n\r\n  return (\r\n    <OptionBase iconButton={iconButton} extraIcons={extraIcons}\r\n                extraSmall={extraSmall} small={small} medium={medium} large={large} extraLarge={extraLarge}>\r\n      {children}\r\n    </OptionBase>\r\n  );\r\n}\r\n\r\nOption.propTypes = propTypes;\r\nOption.defaultProps = defaultProps;\r\n\r\nexport default Option;\r\n","import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Option           from './Option';\r\nimport Body             from '../theme/Body';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n\r\n  //Option Props\r\n  extraIcons: PropTypes.arrayOf(PropTypes.node),\r\n  iconType: PropTypes.oneOf(['bubble', 'checkbox', 'add']),\r\n  iconColor: ExtraPropTypes.color,\r\n  onClick: PropTypes.func,\r\n  clicked: PropTypes.bool,\r\n\r\n  // Body props\r\n  fontColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n};\r\n\r\nconst TextOption = ( props ) => {\r\n\r\n  const { children, extraIcons,\r\n          iconType, iconColor, onClick, clicked,\r\n          fontColor,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  return (\r\n    <Option extraIcons={extraIcons} type={iconType} iconColor={iconColor}\r\n            onClick={onClick} clicked={clicked}\r\n            extraSmall={extraSmall} small={small} medium={medium} large={large} extraLarge={extraLarge}>\r\n      <Body color={fontColor}\r\n            extraSmall={extraSmall} small={small} medium={medium} large={large} extraLarge={extraLarge}>\r\n          {children}\r\n      </Body>\r\n    </Option>\r\n  )\r\n\r\n};\r\n\r\nTextOption.propTypes = propTypes;\r\nTextOption.defaultProps = defaultProps;\r\n\r\nexport default TextOption;\r\n","import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Option           from './Option';\r\nimport Input            from '../inputs/Input';\r\n\r\nconst propTypes = {\r\n  inputType: PropTypes.oneOf(['inputfield', 'textarea', 'select']),\r\n  value: PropTypes.string,\r\n\r\n  //Option Props\r\n  extraIcons: PropTypes.arrayOf(PropTypes.node),\r\n  iconType: PropTypes.oneOf(['bubble', 'checkbox', 'add']),\r\n  iconColor: ExtraPropTypes.color,\r\n  onClick: PropTypes.func,\r\n  clicked: PropTypes.bool,\r\n\r\n  // Input props\r\n  placeholder: PropTypes.string,\r\n  fontColor: ExtraPropTypes.color,\r\n  backgroundColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n  onChange: ExtraPropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  inputType: 'inputfield',\r\n  placeholder: 'Other...'\r\n};\r\n\r\nconst InputOption = ( props ) => {\r\n\r\n  const { inputType, value, extraIcons,\r\n          iconType, iconColor, onClick, clicked,\r\n          placeholder, fontColor, backgroundColor, borderColor, onChange,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  return (\r\n    <Option extraIcons={extraIcons} type={iconType} iconColor={iconColor}\r\n            onClick={onClick} clicked={clicked}\r\n            extraSmall={extraSmall} small={small} medium={medium} large={large} extraLarge={extraLarge}>\r\n      <Input type={inputType} value={value} onChange={onChange} placeholder={placeholder}\r\n             fontColor={fontColor} backgroundColor={backgroundColor}\r\n             borderColor={borderColor}\r\n             extraSmall={extraSmall} small={small} medium={medium} large={large} extraLarge={extraLarge}/>\r\n    </Option>\r\n  )\r\n\r\n};\r\n\r\nInputOption.propTypes = propTypes;\r\nInputOption.defaultProps = defaultProps;\r\n\r\nexport default InputOption;\r\n","import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport styled           from 'styled-components';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Icon             from '../theme/Icon';\r\nimport { Colors }       from '../theme/Colors';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  submitted: PropTypes.bool,\r\n\r\n  iconColor: ExtraPropTypes.color,\r\n  fontColor: ExtraPropTypes.color,\r\n  backgroundColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nconst ComponentWrapper = styled.div``;\r\n\r\nconst submitIcon = (\r\n  <Icon type={'checkCircle'} color={Colors.Green}/>\r\n)\r\n\r\nconst VotingOption = ( props ) => {\r\n\r\n  const { children, submitted,\r\n          extraSmall, small, medium, large, extraLarge,\r\n          ...rest } = props;\r\n\r\n  const extraIcons = submitted ? [ submitIcon ] : undefined;\r\n\r\n  const childProps = { ...rest,\r\n                       extraSmall: extraSmall, small: small, medium: medium,\r\n                       large: large, extraLarge: extraLarge,\r\n                       extraIcons: extraIcons, };\r\n\r\n  return (\r\n    <ComponentWrapper>\r\n      {React.Children.map (children, (child) => React.cloneElement(child, {...childProps}))}\r\n    </ComponentWrapper>\r\n  )\r\n};\r\n\r\nVotingOption.propTypes = propTypes;\r\nVotingOption.defaultProps = defaultProps;\r\n\r\nexport default VotingOption;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Body             from '../theme/Body';\r\nimport Button           from  './Button';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  onClick: PropTypes.bool,\r\n\r\n  unselected: PropTypes.bool,\r\n  submit: PropTypes.bool,\r\n  submitted: PropTypes.bool,\r\n  resubmit: PropTypes.bool,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  onClick: undefined,\r\n};\r\n\r\nconst SubmitWrapper = styled.div`\r\n`\r\nconst ComponentWrapper = styled.div`\r\n  ${({extraSmall}) => extraSmall && `padding-bottom: 16px`}\r\n  ${({small}) => small && `padding-bottom: 20px`}\r\n  ${({medium}) => medium && `padding-bottom: 26px`}\r\n  ${({large}) => large && `padding-bottom: 32px`}\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n    width: ${({width}) => width}px;\r\n`;\r\n\r\nconst CenterWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\n\r\nconst config = {\r\n  unfilledInput: { subText: 'Please fill write in to record your response.',\r\n                   text: 'SUBMIT',\r\n                   color: Colors.Red,\r\n                   disabled: true,\r\n                 },\r\n  submit: { subText: 'Please press submit to record your response.',\r\n            text: 'SUBMIT',\r\n            color: Colors.Yellow,\r\n            disabled: false,\r\n          },\r\n  submitted: { subText: 'Your response has been recorded.',\r\n               text: 'SUBMITTED',\r\n               color: Colors.Green,\r\n               disabled: true\r\n             },\r\n  unselected: { subText: 'Please make a selection.',\r\n                text: 'SUBMIT',\r\n                color: Colors.Red,\r\n                disabled: true\r\n               },\r\n  resubmit: { subText: 'Please press submit to record your response.',\r\n              text: 'RESUBMIT',\r\n              color: Colors.Yellow,\r\n              disabled: false\r\n            },\r\n  pollpending: { subText: 'Please wait to record your response.',\r\n                 text: 'SUBMIT',\r\n                 color: Colors.LightGrey,\r\n                 disabled: true\r\n               },\r\n  submitloading: { subText: 'Your response is being recorded.',\r\n                   text: 'SUBMIT',\r\n                   color: Colors.LightGrey,\r\n                   disabled: true\r\n                },\r\n}\r\n\r\nconst renderText = (props) => {\r\n\r\n  const { buttonConfig, extraSmall, small, medium, large } = props;\r\n\r\n  console.log(extraSmall)\r\n\r\n  return(\r\n    <CenterWrapper>\r\n      <Body twoExtraSmall={extraSmall} extraSmall={small} small={medium} medium={large} color={Colors.Black}>\r\n        {buttonConfig.subText}\r\n      </Body>\r\n    </CenterWrapper>\r\n  )\r\n}\r\n\r\nconst renderButton = (props) => {\r\n\r\n  const { onClick, buttonConfig, ...rest} = props;\r\n\r\n  let width;\r\n  if (props.large) { width = 225}\r\n  else if ( props.small ) { width = 125 }\r\n  else if ( props.extraSmall ) { width = 100 }\r\n  else { width = 150 }\r\n\r\n  return (\r\n    <ComponentWrapper {...rest}>\r\n      <CenterWrapper>\r\n        <ButtonWrapper width={width}>\r\n          <Button onClick={buttonConfig.disabled ? undefined : onClick} disabled={buttonConfig.disabled}\r\n                  backgroundColor={buttonConfig.color}\r\n                  {...rest}>\r\n            {buttonConfig.text}\r\n          </Button>\r\n        </ButtonWrapper>\r\n      </CenterWrapper>\r\n    </ComponentWrapper>\r\n  );\r\n};\r\n\r\nconst SubmitButton = (props) => {\r\n  const { submissionStatus } = props;\r\n\r\n  let buttonConfig;\r\n\r\n  switch (submissionStatus) {\r\n    case 'unfilledInput':\r\n      buttonConfig = config.unfilledInput;\r\n      break;\r\n    case 'submit':\r\n      buttonConfig = config.submit;\r\n      break;\r\n    case 'submitted':\r\n      buttonConfig = config.submitted;\r\n      break;\r\n    case 'resubmit':\r\n      buttonConfig = config.resubmit;\r\n      break;\r\n    case 'pollpending':\r\n      buttonConfig = config.pollpending;\r\n      break;\r\n    case 'submitloading':\r\n      buttonConfig = config.pollpending;\r\n      break;\r\n    default:\r\n      buttonConfig = config.unselected;\r\n  }\r\n\r\n  return (\r\n    <SubmitWrapper>\r\n      {renderButton({...props, buttonConfig})}\r\n      {renderText({...props, buttonConfig})}\r\n    </SubmitWrapper>\r\n  )\r\n};\r\n\r\nSubmitButton.propTypes = propTypes;\r\nSubmitButton.defaultProps = defaultProps;\r\n\r\nexport default SubmitButton;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body            from '../theme/Body';\r\n\r\nimport TertiaryCard      from '../format-cards/TertiaryCard';\r\nimport OptionGroup      from '../option-groups/OptionGroup';\r\nimport TextOption       from '../options/TextOption';\r\nimport InputOption       from '../options/InputOption';\r\nimport VotingOption       from '../options/VotingOption';\r\nimport EditButton       from '../buttons/EditButton';\r\nimport SubmitButton     from '../buttons/SubmitButton';\r\n\r\nconst PollWrappper = styled.div``;\r\n\r\nconst DescriptionWrapper = styled.div`\r\n  ${({padding}) => padding && `padding-bottom: ${padding}px;`}\r\n`;\r\n\r\nconst PollComponent = ( props ) => {\r\n  const { pollData, onEditClick, ...rest } = props;\r\n\r\n  let padding;\r\n  if (props.extraSmall) { padding = 14}\r\n  else if (props.small) { padding = 16}\r\n  else if (props.large) { padding = 28}\r\n  else if (props.extraLarge) { padding = 32}\r\n  else { padding = 22}\r\n\r\n  const _description = (\r\n    <Body color={Colors.Charcol}>\r\n      {pollData.description}\r\n    </Body>\r\n  )\r\n\r\n  const _renderOptionGroup = () => {\r\n    const optionComponents = pollData.optionsOrder.map(id => {\r\n\r\n      return (\r\n        <TextOption>\r\n          {pollData.options[id].value}\r\n        </TextOption>\r\n     )\r\n    });\r\n\r\n    if ( pollData.userInputOption ) {\r\n      optionComponents.push(\r\n        <InputOption/>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <OptionGroup type={pollData.type} disabled fontColor={Colors.Black}\r\n                  {...rest}>\r\n        {optionComponents}\r\n      </OptionGroup>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <PollComponent>\r\n      <DescriptionWrapper padding={padding}>\r\n        {_description}\r\n      </DescriptionWrapper>\r\n      {_renderOptionGroup()}\r\n    </PollComponent>\r\n  )\r\n}\r\n\r\nconst HostPollCard = ( props ) => {\r\n\r\n  const { pollData, onEditClick,\r\n          ...rest } = props;\r\n\r\n  const _editButton = <EditButton type={'edit'} color={Colors.Blue} onClick={onEditClick}/>\r\n\r\n  const _submitButton = (\r\n    <SubmitButton submissionStatus={'unselected'}\r\n                  {...rest}/>\r\n  )\r\n\r\n  const _description = (\r\n    <Body color={Colors.Charcol}>\r\n      {pollData.description}\r\n    </Body>\r\n  )\r\n\r\n  const _renderOptionGroup = () => {\r\n    const optionComponents = pollData.optionsOrder.map(id => {\r\n\r\n      return (\r\n        <TextOption>\r\n          {pollData.options[id].value}\r\n        </TextOption>\r\n     )\r\n    });\r\n\r\n    if ( pollData.userInputOption ) {\r\n      optionComponents.push(\r\n        <InputOption/>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <OptionGroup type={pollData.type} disabled fontColor={Colors.Black}\r\n                  {...rest}>\r\n        {optionComponents}\r\n      </OptionGroup>\r\n    );\r\n  }\r\n\r\n  const sections = [{content: _description},\r\n                    {content: _renderOptionGroup()}]\r\n\r\n  return (\r\n    <TertiaryCard {...rest}\r\n                   width={'100%'}\r\n                   height={props.extraSmall ? `100%` : `stretch`}\r\n                   cardColor={Colors.White}\r\n                   header={pollData.title}\r\n                   headerColor={Colors.Blue}\r\n                   headerButton={_editButton}\r\n                   sections={sections}\r\n                   footer={_submitButton}/>\r\n  )\r\n};\r\n\r\nexport default HostPollCard;\r\n","import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport InputOption            from './InputOption';\r\n\r\nconst propTypes = {\r\n\r\n  //Option Props\r\n  iconColor: ExtraPropTypes.color,\r\n  onClick: PropTypes.func,\r\n\r\n  // Input props\r\n  placeholder: PropTypes.string,\r\n  fontColor: ExtraPropTypes.color,\r\n  backgroundColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n};\r\n\r\nconst AdderOption = ( props ) => {\r\n\r\n  const { iconColor, onClick,\r\n          placeholder, fontColor, backgroundColor, borderColor,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  return (\r\n    <InputOption inputType={'select'} iconType={'add'}\r\n                 iconColor={iconColor} onClick={onClick}\r\n                 placeholder={placeholder} fontColor={fontColor}\r\n                 backgroundColor={backgroundColor} borderColor={borderColor}\r\n                 extraSmall={extraSmall} small={small} medium={medium} large={large} extraLarge={extraLarge}/>\r\n  )\r\n\r\n};\r\n\r\nAdderOption.propTypes = propTypes;\r\nAdderOption.defaultProps = defaultProps;\r\n\r\nexport default AdderOption;\r\n","import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport styled           from 'styled-components';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Icon           from '../theme/Icon';\r\nimport { Colors }     from '../theme/Colors';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  onDelete: PropTypes.func,\r\n\r\n  iconColor: ExtraPropTypes.color,\r\n  fontColor: ExtraPropTypes.color,\r\n  backgroundColor: ExtraPropTypes.color,\r\n  borderColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {};\r\n\r\nconst ComponentWrapper = styled.div``;\r\n\r\nconst deleteIcon = (onDelete) => (\r\n  <Icon type={'x'} color={Colors.Blue} onClick={onDelete}/>\r\n)\r\n\r\nconst EditingOption = ( props ) => {\r\n\r\n  const { children, onDelete,\r\n          iconColor, fontColor, backgroundColor, borderColor,\r\n          extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  const extraIcons = [ deleteIcon(onDelete) ]\r\n\r\n  const childProps = { iconColor: iconColor, fontColor: fontColor,\r\n                       backgroundColor: backgroundColor, borderColor: borderColor,\r\n                       extraSmall: extraSmall, small: small, medium: medium,\r\n                       large: large, extraLarge: extraLarge,\r\n                       extraIcons: extraIcons, };\r\n\r\n  return (\r\n    <ComponentWrapper>\r\n      {React.Children.map (children, (child) => React.cloneElement(child, {...childProps}))}\r\n    </ComponentWrapper>\r\n  )\r\n};\r\n\r\nEditingOption.propTypes = propTypes;\r\nEditingOption.defaultProps = defaultProps;\r\n\r\nexport default EditingOption;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\n\r\nimport EditItem         from './EditItem';\r\nimport Button           from '../buttons/Button';\r\n\r\nimport Input            from '../inputs/Input';\r\n\r\nconst propTypes = {\r\n  id: PropTypes.string,\r\n  type: PropTypes.oneOf(['inputfield', 'textarea']),\r\n  value: PropTypes.string,\r\n  onDelete: PropTypes.func,\r\n\r\n  iconColor: ExtraPropTypes.color,\r\n  fontColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  type: 'inputfield',\r\n  iconColor: Colors.Blue,\r\n  fontColor: Colors.Black,\r\n};\r\n\r\n\r\nconst HostEditPollOptionItem = ( props ) => {\r\n\r\n  const { id, type, value, onChange, onDelete, ...rest } = props;\r\n\r\n  return (\r\n    <EditItem id={id} iconColor={Colors.Blue} onDelete={onDelete} {...rest}>\r\n      <Input type={type} value={value} onChange={onChange}/>\r\n    </EditItem>\r\n  )\r\n}\r\n\r\nHostEditPollOptionItem.propTypes = propTypes;\r\nHostEditPollOptionItem.defaultProps = defaultProps;\r\n\r\nexport default HostEditPollOptionItem;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body             from '../theme/Body';\r\n\r\nimport TextOption       from '../options/TextOption';\r\nimport InputOption      from '../options/InputOption';\r\nimport AdderOption      from '../options/AdderOption';\r\nimport Option           from '../options/Option';\r\nimport Button           from '../buttons/Button';\r\nimport Input            from '../inputs/Input';\r\nimport InputField       from '../inputs/InputField';\r\nimport TextArea         from '../inputs/TextArea';\r\nimport EditingOption    from '../options/EditingOption';\r\nimport TertiaryCard      from '../format-cards/TertiaryCard';\r\nimport EditButton       from '../buttons/EditButton';\r\nimport EditingGroup     from '../groups/EditingGroup';\r\nimport AddItem          from '../items/AddItem';\r\nimport EditItem          from '../items/EditItem';\r\nimport HostEditPollOptionItem from '../items/HostEditPollOptionItem'\r\n\r\nconst propTypes = {\r\n  pollData: PropTypes.object,\r\n\r\n  onTitleChange: PropTypes.func,\r\n  onDescriptionChange: PropTypes.func,\r\n  onOptionChange: PropTypes.func,\r\n\r\n  onEditClick: PropTypes.func,\r\n  onAddClick: PropTypes.func,\r\n  onDragEnd : PropTypes.func,\r\n\r\n  iconColor: ExtraPropTypes.color,\r\n  fontColor: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n};\r\n\r\n\r\nconst Header = ( props ) => (\r\n  <Input label={'Title'} type={'inputfield'}\r\n         value={props.title} fontColor={Colors.Charcol}\r\n         onChange={props.onChange}\r\n         {...props.size}/>\r\n)\r\n\r\nconst HeaderButton = (props) => (\r\n  <EditButton type={'save'} color={Colors.Blue} onClick={props.onClick} {...props.size}/>\r\n)\r\n\r\nconst Description = ( props ) => (\r\n  <Input label={'Description'} type={'textarea'}\r\n         value={props.description} fontColor={Colors.Charcol}\r\n         onChange={props.onChange}\r\n         {...props.size}/>\r\n)\r\n\r\nconst AddComponent = ( props ) => {\r\n  return (\r\n    <AddItem onClick={props.onAddClick} textColor={Colors.Blue} iconColor={Colors.Blue} {...props.size}>\r\n      Add new option\r\n    </AddItem>\r\n  )\r\n}\r\n\r\nconst EditPollCard = ( props ) => {\r\n\r\n  const { pollData, onEditClick, onAddClick, onDeleteClick, onDragEnd,\r\n          onTitleChange, onDescriptionChange, onOptionChange, ...rest } = props;\r\n\r\n  const { title, description } = pollData;\r\n\r\n  const size = {\r\n    extraSmall: props.extraSmall,\r\n    small: props.small,\r\n    medium: props.medium,\r\n    large: props.large,\r\n    extraLarge: props.extraLarge\r\n  }\r\n\r\n\r\n  const renderOptionGroup = () => {\r\n    let optionsOrder = pollData.optionsOrder || [];\r\n\r\n    const optionComponents = optionsOrder.map(id => {\r\n\r\n      return(\r\n          <HostEditPollOptionItem id={id} type={'inputfield'}\r\n                                  value={pollData.options[id].value}\r\n                                  onChange={(event) => onOptionChange(id, event)}\r\n                                  onDelete={() => onDeleteClick(id)}\r\n                                  fontColor={Colors.Charcol}\r\n                                  iconColor={Colors.Blue}\r\n                                  {...size}/>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <EditingGroup order={pollData.optionsOrder}\r\n                    addItem={<AddComponent onAddClick={onAddClick} size={size}/>}\r\n                    onDragEnd={onDragEnd}\r\n                    handleColor={Colors.Blue} {...rest}>\r\n        {optionComponents}\r\n      </EditingGroup>\r\n    );\r\n  }\r\n\r\n  const sections = [{content: <Description description={description} onChange={onDescriptionChange} size={size}/>},\r\n                    {content: renderOptionGroup()}]\r\n\r\n  return (\r\n    <TertiaryCard {...rest}\r\n                   width={'100%'}\r\n                   height={size.extraSmall ? `100%` : `stretch`}\r\n                   cardColor={Colors.White}\r\n                   headerComponent={<Header onChange={onTitleChange} title={title} size={size}/>}\r\n                   headerButton={<HeaderButton onClick={onEditClick}  size={size}/>}\r\n                   sections={sections} />\r\n  )\r\n};\r\n\r\nexport default EditPollCard;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body             from '../theme/Body';\r\n\r\nimport Card             from './Card';\r\nimport TextOption       from '../options/TextOption';\r\nimport Group            from '../groups/Group';\r\nimport OptionGroup      from '../option-groups/OptionGroup';\r\n\r\nconst propTypes = {\r\n  pollType: PropTypes.string,\r\n  showResults: PropTypes.bool,\r\n  userInputOption: PropTypes.bool,\r\n\r\n  updateSettings: PropTypes.func,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n\r\n};\r\n\r\nconst HeadingWrapper = styled.div`\r\n`;\r\n\r\nconst SectionWrapper = styled.div`\r\n  padding-top: 15px;\r\n`;\r\n\r\nconst HorizontalContentWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between\r\n`;\r\n\r\nconst SectionHeadingWrapper = styled.div`\r\n  padding-bottom: 10px;\r\n`;\r\n\r\nconst PanelHeader = ( props ) => {\r\n\r\n  return (\r\n    <HeadingWrapper>\r\n      <Jumbo fiveExtraSmall={props.extraSmall} fourExtraSmall={props.small}\r\n             threeExtraSmall={props.medium} twoExtraSmall={props.large}\r\n             extraSmall={props.extraLarge} color={Colors.Blue}>\r\n        SETTINGS\r\n      </Jumbo>\r\n    </HeadingWrapper>\r\n  )\r\n}\r\n\r\nconst PanelSection = ( props ) => {\r\n\r\n  const { title, children, size, ...rest } = props;\r\n\r\n  return (\r\n    <SectionWrapper>\r\n      <SectionHeadingWrapper>\r\n        <Body {...size} color={Colors.Blue}>\r\n          {title}\r\n        </Body>\r\n      </SectionHeadingWrapper>\r\n      {children}\r\n    </SectionWrapper>\r\n  )\r\n}\r\n\r\nconst PanelContent = ( props ) => {\r\n\r\n  return props.extraSmall ?\r\n    <HorizontalContentWrapper>\r\n      {props.children}\r\n    </HorizontalContentWrapper> : props.children;\r\n}\r\n\r\nclass HostEditPanelCard extends React.Component {\r\n\r\n  constructor(props){\r\n    super(props)\r\n\r\n    this.state = {\r\n      typeSelection: {\r\n        '0': props.pollType === 'single',\r\n        '1': props.pollType === 'multiple'\r\n      },\r\n      otherSelection: {\r\n        '0': props.showResults || false,\r\n        '1': props.userInputOption || false,\r\n      }\r\n    }\r\n\r\n    this.updateSettings = this.updateSettings.bind(this)\r\n    this.onTypeClick = this.onTypeClick.bind(this);\r\n    this.onOtherClick = this.onOtherClick.bind(this);\r\n  }\r\n\r\n  updateSettings = () => {\r\n    const type = this.state.typeSelection['0'] ? 'single' : 'multiple';\r\n    const showResults = this.state.otherSelection['0'];\r\n    const userInputOption = this.state.otherSelection['1'];\r\n\r\n    console.log(this.state)\r\n    this.props.updateSettings && this.props.updateSettings({type, showResults, userInputOption})\r\n  }\r\n\r\n  async onTypeClick(id) {\r\n    if (!this.state.typeSelection[id]) {\r\n      await this.setState({\r\n        ...this.state,\r\n        typeSelection: {\r\n          '0': id === '0',\r\n          '1': id === '1'\r\n        }\r\n      })\r\n    }\r\n\r\n    this.updateSettings();\r\n  }\r\n\r\n  async onOtherClick( selection ) {\r\n    await this.setState({\r\n      ...this.state,\r\n      otherSelection: selection\r\n    })\r\n\r\n    this.updateSettings();\r\n  }\r\n\r\n  render () {\r\n    const size = {\r\n      extraSmall: this.props.extraSmall,\r\n      small: this.props.small,\r\n      medium: this.props.medium,\r\n      large: this.props.large,\r\n      extraLarge: this.props.extraLarge\r\n    }\r\n\r\n    return (\r\n      <Card borderMedium>\r\n        <PanelHeader {...size}/>\r\n        <PanelContent {...size}>\r\n          <PanelSection title={'POLL TYPE'} size={size}>\r\n            <Group {...size}>\r\n              <TextOption id={'0'} iconType={'bubble'} iconColor={Colors.Blue}\r\n                          clicked={this.state.typeSelection['0']} onClick={() => this.onTypeClick('0')}>\r\n                Single choice\r\n              </TextOption>\r\n              <TextOption id={'1'} iconType={'bubble'} iconColor={Colors.Blue}\r\n                          clicked={this.state.typeSelection['1']} onClick={() => this.onTypeClick('1')}>\r\n                Multiple choice\r\n              </TextOption>\r\n            </Group>\r\n          </PanelSection>\r\n          <PanelSection title={'OTHER'} size={size}>\r\n            <OptionGroup type={'multiple'}\r\n                         selectedOptions={this.state.otherSelection}\r\n                         onSelect={this.onOtherClick}\r\n                         {...size}>\r\n              <TextOption id={'0'}>\r\n                Display results\r\n              </TextOption>\r\n              <TextOption id={'1'}>\r\n                Input option\r\n              </TextOption>\r\n            </OptionGroup>\r\n          </PanelSection>\r\n        </PanelContent>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nHostEditPanelCard.propTypes = propTypes;\r\nHostEditPanelCard.defaultProps = defaultProps;\r\n\r\nexport default HostEditPanelCard;\r\n","import React, { useEffect }                from 'react';\r\nimport styled               from 'styled-components';\r\n\r\nimport { connect }          from 'react-redux';\r\nimport ActionTypes          from '../store/actionTypes';\r\nimport history              from '../history';\r\n\r\nimport LoadingCard              from '../components/cards/LoadingCard';\r\n\r\nimport { Colors }           from '../components/theme/Colors';\r\nimport ViewportHandler      from './format-pages/ViewportHandler';\r\nimport SideBarPage          from './format-pages/SideBarPage';\r\n\r\nimport HostPollCard         from '../components/cards/HostPollCard';\r\nimport EditPollCard         from '../components/cards/EditPollCard';\r\nimport HostStatusCard       from '../components/cards/HostStatusCard'\r\nimport HostEditPanelCard    from '../components/cards/HostEditPanelCard';\r\n\r\nconst getSize = (viewport) => {\r\n\r\n  let size = {};\r\n  switch (viewport) {\r\n    case 'mobile':\r\n    case 'smallMobile':\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'hdDesktop':\r\n    case 'uhdDesktop':\r\n      size.medium = true;\r\n      break;\r\n    default:\r\n      size.small = true;\r\n  }\r\n\r\n  return size;\r\n}\r\n\r\nconst SideBarComponent = ( props ) => {\r\n\r\n  const size = getSize(props.viewport)\r\n  console.log(props)\r\n\r\n  return ( props.editing ?\r\n    <HostEditPanelCard pollType={props.pollType}\r\n                       userInputOption={props.userInputOption}\r\n                       showResults={props.showResults}\r\n                       updateSettings={props.updateSettings}\r\n                       {...size}\r\n                       /> :\r\n    <HostStatusCard disable={props.roomStatus === 'pending'}\r\n                    loading={props.loading}\r\n                    pollStatus={props.pollStatus}\r\n                    headerColor={Colors.Blue}\r\n                    onStatusClick={props.onStatusClick}\r\n                    {...size}/>\r\n  )\r\n}\r\n\r\nconst PollComponent = ( props ) => {\r\n\r\n  const size = getSize(props.viewport)\r\n  console.log(props);\r\n  console.log(size)\r\n\r\n  if (props.loading) {\r\n    return (\r\n      <LoadingCard cardColor={Colors.White}\r\n                   cardBorderColor={Colors.White}\r\n                   textColor={Colors.Blue}\r\n                   {...size}/>\r\n    );\r\n  }\r\n\r\n  return props.editing ?\r\n    <EditPollCard pollData={props.pollData}\r\n                  onEditClick={props.onEditClick}\r\n                  onAddClick={props.onAddClick}\r\n                  onDeleteClick={props.onDeleteClick}\r\n                  onDragEnd={props.onDragEnd}\r\n                  onTitleChange={props.onTitleChange}\r\n                  onDescriptionChange={props.onDescriptionChange}\r\n                  onOptionChange={props.onOptionChange}\r\n                  {...size} /> :\r\n    <HostPollCard pollData={props.pollData}\r\n                  onEditClick={props.onEditClick}\r\n                  {...size} />\r\n\r\n}\r\n\r\nconst HostPollPage = ( props ) => {\r\n\r\n  const roomcode = props.match.params.roomcode || '0000';\r\n  const pollcode = props.match.params.pollcode || '00';\r\n\r\n  useEffect(() =>  {\r\n    console.log(props.location.state);\r\n    props.onFetchPoll(roomcode, pollcode, props.location.state);\r\n  }, [])\r\n\r\n  console.log(props)\r\n  // if ( props.loading ) { return <Loading/> }\r\n  if ( props.error ) { console.log(props.error); history.replace('/Login') }\r\n\r\n  if (props.poll.status === 'closed') {\r\n    history.replace(`/PollResults/${roomcode}/${pollcode}`);\r\n  }\r\n\r\n  const sideContent = (\r\n    <SideBarComponent roomStatus={props.location.state.roomStatus}\r\n                      loading={props.loading}\r\n                      editing={props.editing}\r\n                      pollType={props.poll.type}\r\n                      pollStatus={props.poll.status}\r\n                      userInputOption={props.poll.userInputOption}\r\n                      showResults={props.poll.showResults}\r\n                      updateSettings={props.onUpdateSettings}\r\n                      onStatusClick={(newStatus) => props.onUpdateStatus(roomcode, pollcode, newStatus)}/>\r\n  )\r\n\r\n  // props.editing ?\r\n  //   <HostEditPanelCard pollType={props.poll.type}\r\n  //                      userInputOption={props.poll.userInputOption}\r\n  //                      showResults={props.poll.showResults}\r\n  //                      updateSettings={props.onUpdateSettings}\r\n  //                      medium\r\n  //                      /> :\r\n  //   <HostStatusCard pollStatus={props.poll.status}\r\n  //                   headerColor={Colors.Blue}\r\n  //                   onStatusClick={(newStatus) => props.onUpdateStatus(roomcode, pollcode, newStatus)}\r\n  //                   medium/>\r\n\r\n  return (\r\n    <ViewportHandler>\r\n      <SideBarPage sideContent={sideContent}>\r\n        <PollComponent loading={props.loading}\r\n                       editing={props.editing}\r\n                       pollData={props.poll}\r\n                       onEditClick={() => props.onToggleEdit(roomcode, pollcode)}\r\n                       onAddClick={props.onAddOption}\r\n                       onDeleteClick={props.onDeleteOption}\r\n                       onDragEnd={props.onUpdateOrder}\r\n                       onTitleChange={props.onUpdateTitle}\r\n                       onDescriptionChange={props.onUpdateDescription}\r\n                       onOptionChange={props.onUpdateOption}/>\r\n      </SideBarPage>\r\n    </ViewportHandler>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    poll: state.hostpoll.poll,\r\n    editing: state.hostpoll.editing,\r\n    loading: state.hostpoll.loading,\r\n    error: state.hostpoll.error\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchPoll: (room_id, poll_id, location_state ) => dispatch({ type: ActionTypes.hostpoll.FETCH_POLL_START,\r\n                                                                    room_id, poll_id, location_state }),\r\n    onToggleEdit: (room_id, poll_id ) => { dispatch({ type: ActionTypes.hostpoll.TOGGLE_EDIT});\r\n                                           dispatch({ type: ActionTypes.hostpoll.UPDATE_POLL_START,\r\n                                           room_id, poll_id })},\r\n    onAddOption: () => dispatch({ type: ActionTypes.hostpoll.ADD_POLL, }),\r\n    onDeleteOption: (option_id) => dispatch({ type: ActionTypes.hostpoll.DELETE_POLL,\r\n                                            option_id }),\r\n    onUpdateOrder: (order) => dispatch({ type: ActionTypes.hostpoll.UPDATE_ORDER,\r\n                                            order }),\r\n    onUpdateOption: (option_id, event) => dispatch({ type: ActionTypes.hostpoll.UPDATE_OPTION,\r\n                                            option_id, event }),\r\n    onUpdateTitle: (event) => dispatch({ type: ActionTypes.hostpoll.UPDATE_TITLE,\r\n                                          event }),\r\n    onUpdateDescription: (event) => dispatch({ type: ActionTypes.hostpoll.UPDATE_DESCRIPTION,\r\n                                               event }),\r\n    onUpdateSettings: (settings) => dispatch({ type:ActionTypes.hostpoll.UPDATE_SETTINGS,\r\n                                               settings }),\r\n    onUpdateStatus: (room_id, poll_id, status) => dispatch({ type:ActionTypes.hostpoll.UPDATE_POLL_STATUS_START,\r\n                                                               room_id, poll_id, status }),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HostPollPage);\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body            from '../theme/Body';\r\n\r\nimport TertiaryCard      from '../format-cards/TertiaryCard';\r\nimport OptionGroup      from '../option-groups/OptionGroup';\r\nimport TextOption       from '../options/TextOption';\r\nimport InputOption       from '../options/InputOption';\r\nimport VotingOption       from '../options/VotingOption';\r\nimport EditButton       from '../buttons/EditButton';\r\nimport SubmitButton     from '../buttons/SubmitButton';\r\n\r\n\r\nconst UserPollCard = ( props ) => {\r\n\r\n  const { pollData, userInput, submittedOptions, onOptionChange,\r\n          onSubmit, submissionStatus, onInputChange,\r\n          submitLoading,\r\n          ...rest } = props;\r\n\r\n  const _description = (\r\n    <Body color={Colors.Charcol}>\r\n      {pollData.description}\r\n    </Body>\r\n  )\r\n\r\n  const _renderOptionGroup = () => {\r\n    const optionComponents = pollData.optionsOrder.map(id => {\r\n\r\n      const submitted = submittedOptions[id];\r\n\r\n      return (\r\n        <VotingOption id={id} submitted={submitted}>\r\n          <TextOption>\r\n            {pollData.options[id].value}\r\n          </TextOption>\r\n        </VotingOption>\r\n      )\r\n    });\r\n\r\n    if ( pollData.userInputOption ) {\r\n      console.log(userInput.id)\r\n      const submitted = submittedOptions[userInput.id];\r\n      optionComponents.push(\r\n        <VotingOption id={userInput.id} submitted={submitted}>\r\n          <InputOption value={userInput.value} onChange={onInputChange}/>\r\n        </VotingOption>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <OptionGroup type={pollData.type} fontColor={Colors.Black}\r\n                   onSelect={onOptionChange} {...rest}>\r\n        {optionComponents}\r\n      </OptionGroup>\r\n    );\r\n  }\r\n\r\n  let submitButtonStatus = submissionStatus;\r\n  if ( pollData.status === 'pending' ) { submitButtonStatus = 'pollpending'}\r\n  else if (submitLoading) { submitButtonStatus = 'submitloading'}\r\n\r\n  const _submitButton = (\r\n    <SubmitButton submissionStatus={submitButtonStatus}\r\n                  onClick={onSubmit} {...rest}/>\r\n  )\r\n\r\n  const sections = [{content: _description},\r\n                    {content: _renderOptionGroup()}]\r\n\r\n  return (\r\n    <TertiaryCard {...rest} width={`100%`} cardColor={Colors.White}\r\n                   header={pollData.title} headerColor={Colors.Blue}\r\n                   sections={sections} footer={_submitButton}/>\r\n  )\r\n};\r\n\r\nexport default UserPollCard;\r\n","import React, { useEffect }                from 'react';\r\nimport styled               from 'styled-components';\r\n\r\nimport { connect }          from 'react-redux';\r\nimport ActionTypes          from '../store/actionTypes';\r\nimport history              from '../history';\r\n\r\nimport LoadingCard              from '../components/cards/LoadingCard';\r\n\r\nimport { Colors }           from '../components/theme/Colors';\r\nimport ViewportHandler      from './format-pages/ViewportHandler';\r\nimport MainPage             from './format-pages/MainPage';\r\n\r\nimport UserPollCard         from '../components/cards/UserPollCard';\r\n\r\n\r\nconst getSize = (viewport) => {\r\n\r\n  let size = {};\r\n  switch (viewport) {\r\n    case 'mobile':\r\n    case 'smallMobile':\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'hdDesktop':\r\n    case 'uhdDesktop':\r\n      size.medium = true;\r\n      break;\r\n    default:\r\n      size.small = true;\r\n  }\r\n\r\n  return size;\r\n}\r\n\r\nconst PollComponent = ( props ) => {\r\n\r\n  const size = getSize(props.viewport);\r\n\r\n  if (props.loading) {\r\n    return (\r\n      <LoadingCard cardColor={Colors.White}\r\n                   cardBorderColor={Colors.White}\r\n                   textColor={Colors.Blue}\r\n                   {...size}/>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <UserPollCard pollData={props.pollData}\r\n                  userInput={props.userInput}\r\n                  onOptionChange={props.onOptionChange}\r\n                  onInputChange={props.onInputChange}\r\n                  onSubmit={props.onSubmit}\r\n                  submittedOptions={props.submittedOptions}\r\n                  submissionStatus={props.submissionStatus}\r\n                  submitLoading={props.submitLoading}\r\n                  {...size} />\r\n  )\r\n}\r\n\r\nconst UserPollPage = ( props ) => {\r\n\r\n  const roomcode = props.match.params.roomcode || '0000';\r\n  const pollcode = props.match.params.pollcode || '00';\r\n\r\n  useEffect(() =>  {\r\n    props.onFetchPoll(roomcode, pollcode);\r\n  }, [])\r\n\r\n  // if ( props.loading ) { return <Loading/> }\r\n  if ( props.error ) { console.log(props.error); history.replace('/Login') }\r\n\r\n  return (\r\n    <MainPage>\r\n      <ViewportHandler>\r\n        <PollComponent loading={props.loading}\r\n                       pollData={props.poll}\r\n                       userInput={props.userInput}\r\n                       onOptionChange={props.onOptionChange}\r\n                       onInputChange={props.onInputChange}\r\n                       onSubmit={() => props.onSubmit(roomcode, pollcode)}\r\n                       submittedOptions={props.submission}\r\n                       submissionStatus={props.submissionStatus}\r\n                       submitLoading={props.submitLoading}/>\r\n      </ViewportHandler>\r\n    </MainPage>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    poll: state.userpoll.poll,\r\n    userInput: state.userpoll.userInput,\r\n    selection: state.userpoll.pollStatus.selection,\r\n    submission: state.userpoll.pollStatus.submission,\r\n    submissionStatus: state.userpoll.pollStatus.submitStatus,\r\n    submitloading: state.userpoll.submitLoading,\r\n    loading: state.userpoll.loading,\r\n    error: state.userpoll.error,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchPoll: (room_id, poll_id ) => dispatch({ type: ActionTypes.userpoll.FETCH_POLL_START,\r\n                                                   room_id, poll_id }),\r\n    onOptionChange: (selection) => dispatch({ type: ActionTypes.userpoll.UPDATE_SELECTION,\r\n                                              selection}),\r\n    onSubmit: (room_id, poll_id) => dispatch({ type: ActionTypes.userpoll.SUBMIT_VOTE_START,\r\n                                                room_id, poll_id }),\r\n    onInputChange: (event) => dispatch({ type: ActionTypes.userpoll.UPDATE_INPUT,\r\n                                         event}),\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPollPage);\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body             from '../theme/Body';\r\n\r\nimport {HorizontalBar} from 'react-chartjs-2';\r\nimport 'chartjs-plugin-datalabels';\r\n\r\nconst BarChart = (props) => {\r\n  const { dataLabels, dataValues,\r\n          extraSmall, small, medium, large, extraLarge} = props;\r\n\r\n  const data = {\r\n    labels: dataLabels,\r\n    datasets: [\r\n      {\r\n        label: 'Responses',\r\n        showLabel: false,\r\n        backgroundColor: Colors.Blue,\r\n        borderColor: Colors.Blue,\r\n        borderWidth: 1,\r\n        hoverBackgroundColor: Colors.Blue,\r\n        hoverBorderColor: Colors.Blue,\r\n        data: dataValues,\r\n      }\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    legend: {\r\n            display: false\r\n         },\r\n     scales: {\r\n         xAxes: [{\r\n             ticks: {\r\n                 beginAtZero: true\r\n             }\r\n         }]\r\n     }\r\n  }\r\n\r\n  return (\r\n    <HorizontalBar data={data}\r\n                   options={options}\r\n                   height={medium || large || extraLarge ? 100 : 75}/>\r\n  )\r\n}\r\n\r\nexport default BarChart;\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body             from '../theme/Body';\r\n\r\nimport OptionGroup      from '../option-groups/OptionGroup';\r\nimport TextOption       from '../options/TextOption';\r\nimport InputOption      from '../options/InputOption';\r\nimport AdderOption      from '../options/AdderOption';\r\nimport Option           from '../options/Option';\r\nimport Button           from '../buttons/Button';\r\nimport Input            from '../inputs/Input';\r\nimport InputField       from '../inputs/InputField';\r\nimport TextArea         from '../inputs/TextArea';\r\nimport EditingOption    from '../options/EditingOption';\r\nimport SecondaryCard      from '../format-cards/SecondaryCard';\r\n\r\nimport PieChart    from '../charts/PieChart';\r\nimport BarChart    from '../charts/BarChart';\r\n\r\nimport Pdf from \"react-to-pdf\";\r\n\r\nconst ref = React.createRef();\r\n\r\n\r\nconst HiddenWrapper = styled.div`\r\n  position: absolute;\r\n  bottom: 20000px;\r\n`;\r\n\r\nconst PollResultsCard = ( props ) => {\r\n\r\n  const { pollResults,\r\n          extraSmall, small, medium, large, extraLarge} = props;\r\n\r\n\r\n  const _description = (\r\n    <Body small color={Colors.Charcol}>\r\n      {pollResults.description}\r\n    </Body>\r\n  )\r\n\r\n\r\n  const _chart = (\r\n    <BarChart dataLabels={pollResults.optionsOrder.map(id => pollResults.options[id].value)}\r\n              dataValues={pollResults.optionsOrder.map(id => pollResults.results[id].count)}/>\r\n  )\r\n\r\n  const _children = (\r\n    <>\r\n      {_description}\r\n      {_chart}\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <SecondaryCard cardColor={Colors.White} width={`100%`}\r\n                   height={extraSmall ? `100%` : `stretch`}\r\n                   header={props.pollResults.title} headerColor={Colors.Blue}\r\n                   extraSmall={extraSmall} small={small}\r\n                   medium={medium} large={large} extraLarge={extraLarge}\r\n                   children={_children}/>\r\n  )\r\n};\r\n\r\nexport default PollResultsCard;\r\n","import React, { useEffect }                from 'react';\r\nimport styled               from 'styled-components';\r\nimport ReactDOMServer       from \"react-dom/server\";\r\n\r\n\r\nimport { connect }          from 'react-redux';\r\nimport ActionTypes          from '../store/actionTypes';\r\n\r\nimport { Colors }           from '../components/theme/Colors';\r\nimport MainPage             from './format-pages/MainPage';\r\n\r\nimport PollResultsCard         from '../components/cards/PollResultsCard';\r\nimport ViewportHandler      from './format-pages/ViewportHandler';\r\n\r\nconst getSize = (viewport) => {\r\n\r\n  let size = {};\r\n  switch (viewport) {\r\n    case 'mobile':\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'smallMobile':\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'hdDesktop':\r\n    case 'uhdDesktop':\r\n      size.medium = true;\r\n      break;\r\n    default:\r\n      size.small = true;\r\n  }\r\n\r\n  return size;\r\n}\r\n\r\nconst ResultsComponent = (props) => {\r\n  const size = getSize(props.viewport)\r\n\r\n  return <PollResultsCard pollResults={props.pollResults}/>\r\n}\r\n\r\nconst PollResultsPage = ( props ) => {\r\n\r\n  const roomcode = props.match.params.roomcode || '0000';\r\n  const pollcode = props.match.params.pollcode || '00';\r\n\r\n  useEffect(() =>  {\r\n    props.onFetchResults(roomcode, pollcode);\r\n  }, [])\r\n\r\n  return (\r\n    <ViewportHandler>\r\n      <MainPage>\r\n        <ResultsComponent pollResults={props.pollResults}/>\r\n      </MainPage>\r\n    </ViewportHandler>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    pollResults: state.pollresults.pollResults,\r\n    loading: state.pollresults.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchResults: (room_id, poll_id ) => dispatch({ type: ActionTypes.pollresults.FETCH_RESULTS_START,\r\n                                                   room_id, poll_id }),\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PollResultsPage);\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\nimport { CSVLink }      from \"react-csv\";\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body             from '../theme/Body';\r\nimport Button           from '../buttons/Button';\r\n\r\n\r\nconst CSVButton = ( props ) => {\r\n\r\n  const { buttonColor, textColor } = props;\r\n\r\n  const csvLinkStyle  = {\r\n    'text-decoration': 'none',\r\n    color: (textColor ? textColor : Colors.White)\r\n  };\r\n\r\n  return (\r\n    <Button backgroundColor={buttonColor ? buttonColor : Colors.Blue} extraSmall={props.extraSmall} small={props.extraSmall}\r\n            medium={props.extraSmall} large={props.large} extraLarge={props.extraLarge}>\r\n      <CSVLink data={props.table} style={csvLinkStyle} filename={'results.csv'}>\r\n        Export CSV\r\n      </CSVLink>\r\n    </Button>\r\n  )\r\n};\r\n\r\nexport default CSVButton;\r\n","const formatResultsAsCSV = (roomResults) => {\r\n  var csv = [\r\n    ['Poll Title', 'Options', 'Number of Votes']\r\n  ]\r\n\r\n  roomResults.order.forEach((poll_id) => {\r\n    let pollResults = roomResults.allResults[poll_id];\r\n    let options = pollResults.optionsOrder.map(id => pollResults.options[id].value);\r\n    let numVotes = pollResults.optionsOrder.map(id => pollResults.results[id].count);\r\n\r\n    for (var i = 0; i < options.length; i++) {\r\n      var row;\r\n      if (i == 0) {\r\n        csv.push([pollResults.title, options[i], numVotes[i]]);\r\n      } else {\r\n        csv.push([\"\", options[i], numVotes[i]]);\r\n      }\r\n    }\r\n  })\r\n\r\n  return csv\r\n}\r\n\r\nexport  { formatResultsAsCSV };\r\n","import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\nimport { CSVLink }      from \"react-csv\";\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Jumbo            from '../theme/Jumbo';\r\nimport Body             from '../theme/Body';\r\nimport Button           from '../buttons/Button';\r\nimport SecondaryCard    from '../format-cards/SecondaryCard';\r\nimport PieChart         from '../charts/PieChart';\r\nimport BarChart         from '../charts/BarChart';\r\nimport CSVButton        from '../buttons/CSVButton';\r\nimport { formatResultsAsCSV } from '../../csv/csvFunctions.js';\r\n\r\nconst RoomResultsCard = ( props ) => {\r\n\r\n  const { extraSmall, small, medium, large, extraLarge } = props;\r\n\r\n  const filename = props.roomResults.title + \".csv\"\r\n\r\n  const _toCSVButton = (\r\n    <CSVButton table={formatResultsAsCSV(props.roomResults)}\r\n               extraSmall={extraSmall} small={small}\r\n               medium={medium} large={large} extraLarge={extraLarge} />\r\n  )\r\n\r\n  const _renderCharts = () =>  {\r\n    var chartComponents = props.roomResults.order.map((poll_id) => {\r\n    const pollResults = props.roomResults.allResults[poll_id]\r\n\r\n      return (\r\n        <>\r\n          <Body medium>\r\n            {pollResults.title}\r\n          </Body>\r\n          <BarChart dataLabels={pollResults.optionsOrder.map(id => pollResults.options[id].value)}\r\n                    dataValues={pollResults.optionsOrder.map(id => pollResults.results[id].count)}\r\n                    extraSmall={extraSmall} small={small}\r\n                    medium={medium} large={large} extraLarge={extraLarge}/>\r\n        </>\r\n      )\r\n    });\r\n\r\n    return (\r\n      <>\r\n        {chartComponents}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const _children = (\r\n    <>\r\n      {_renderCharts()}\r\n    </>\r\n  )\r\n\r\n  return (\r\n    <SecondaryCard cardColor={Colors.White} width={`100%`}\r\n                   height={extraSmall ? `100%` : `stretch`}\r\n                   header={props.roomResults.title} headerColor={Colors.Blue}\r\n                   extraSmall={extraSmall} small={small}\r\n                   medium={medium} large={large} extraLarge={extraLarge}\r\n                   headerButton={_toCSVButton} children={_children}/>\r\n  )\r\n};\r\n\r\nexport default RoomResultsCard;\r\n","import React, { useEffect }                from 'react';\r\nimport styled               from 'styled-components';\r\n\r\nimport { connect }          from 'react-redux';\r\nimport ActionTypes          from '../store/actionTypes';\r\n\r\nimport { Colors }           from '../components/theme/Colors';\r\nimport MainPage             from './format-pages/MainPage';\r\n\r\nimport RoomResultsCard         from '../components/cards/RoomResultsCard';\r\nimport ViewportHandler      from './format-pages/ViewportHandler';\r\n\r\nconst getSize = (viewport) => {\r\n\r\n  let size = {};\r\n  switch (viewport) {\r\n    case 'mobile':\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'smallMobile':\r\n      size.extraSmall = true;\r\n      break;\r\n    case 'hdDesktop':\r\n    case 'uhdDesktop':\r\n      size.medium = true;\r\n      break;\r\n    default:\r\n      size.small = true;\r\n  }\r\n\r\n  return size;\r\n}\r\n\r\nconst ResultsComponent = (props) => {\r\n  const size = getSize(props.viewport);\r\n  console.log('here')\r\n  console.log(props.viewport)\r\n\r\n  return <RoomResultsCard {...size} roomResults={props.roomResults}/>\r\n}\r\n\r\nconst PollResultsPage = ( props ) => {\r\n\r\n  const { roomResults } = props\r\n\r\n  const roomcode = props.match.params.roomcode || '0000';\r\n\r\n\r\n  useEffect(() =>  {\r\n    props.onFetchResults(roomcode);\r\n  }, [])\r\n\r\n  console.log(props);\r\n\r\n  return (\r\n    <ViewportHandler>\r\n      <MainPage>\r\n        <ResultsComponent roomResults={roomResults}/>\r\n      </MainPage>\r\n    </ViewportHandler>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n\r\n  return {\r\n    roomResults: state.roomresults.roomResults,\r\n    loading: state.roomresults.loading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchResults: (room_id) => dispatch({ type: ActionTypes.roomresults.FETCH_RESULTS_START,\r\n                                            room_id }),\r\n\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PollResultsPage);\r\n","import React, { Component } from \"react\";\r\nimport { Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport Login       from \"./pages/Login\"\r\nimport HostDash    from './pages/HostDash'\r\nimport HostAgenda       from \"./pages/HostAgenda\"\r\nimport Roomcode from \"./pages/Roomcode\"\r\nimport UserAgenda    from './pages/UserAgenda'\r\nimport HostPoll       from \"./pages/HostPoll\"\r\nimport UserPoll    from './pages/UserPoll'\r\nimport PollResults from './pages/PollResults'\r\nimport RoomResults from './pages/RoomResults'\r\n\r\n\r\nimport history from './history';\r\n\r\nexport default class Routes extends Component {\r\n    render() {\r\n        return (\r\n            <Router history={history}>\r\n                <Switch>\r\n                    <Route path=\"/Login\" exact component={Login}/>\r\n                    <Route path=\"/HostDash\" exact component={HostDash}/>\r\n                    <Route path='/Roomcode' exact component={Roomcode}/>\r\n                    <Route path=\"/HostAgenda/:roomcode\" exact component={HostAgenda}/>\r\n                    <Route path=\"/UserAgenda/:roomcode\" exact component={UserAgenda}/>\r\n                    <Route path=\"/HostPoll/:roomcode/:pollcode\" exact component={HostPoll}/>\r\n                    <Route path=\"/UserPoll/:roomcode/:pollcode\" exact component={UserPoll}/>\r\n                    <Route path=\"/PollResults/:roomcode/:pollcode\" exact component={PollResults}/>\r\n                    <Route path=\"/RoomResults/:roomcode\" exact component={RoomResults}/>\r\n                    <Route path=\"/:\" exact component={Login}/>\r\n                </Switch>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport rootReducer from './store/reducers/index';\r\nimport { watcherSaga }    from './store/sagas/index';\r\n\r\nimport App from './App';\r\nimport Routes from './Routes';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\nsagaMiddleware.run(watcherSaga);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <div className=\"App\">\r\n        <App />\r\n        <Routes />\r\n      </div>\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// ReactDOM.render(\r\n//     <Router>\r\n//       <div className=\"App\">\r\n//         <App />\r\n//         <Routes />\r\n//       </div>\r\n//     </Router>,\r\n//   document.getElementById('root')\r\n// );\r\n"],"sourceRoot":""}