{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dubin\\\\Github\\\\faculty-voting\\\\code\\\\src\\\\components\\\\RoomCodeForm.js\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ExtraPropTypes from 'react-extra-prop-types';\nimport { Colors } from './theme/Colors';\nimport Body from './theme/Body';\nimport Card from './Card';\nimport Button from './Button';\nimport Jumbo from './theme/Jumbo';\nconst propTypes = {\n  value: PropTypes.string,\n  handleChange: PropTypes.func,\n  handleSubmit: PropTypes.func\n};\nconst defaultProps = {\n  handleChange: undefined,\n  handleSubmit: undefined\n};\nconst ComponentWrapper = styled.div`\n  ${({\n  small\n}) => small && `padding-bottom: 16px`}\n  ${({\n  medium\n}) => medium && `padding-bottom: 20px`}\n  ${({\n  large\n}) => large && `padding-bottom: 26px`}\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n\n  margin: 0;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n\n  transform: translate(0, 65%);\n\n`;\nconst TextInputWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  text-align: center;\n`;\nconst Form = styled.form`\n  width: 100%;\n  height: 25px;\n`;\nconst Input = styled.input`\n  width: 200px;\n  height: 25px;\n  padding: 8px;\n  font-size: 18px;\n`;\nconst TitleWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  text-align: center;\n\n  transform: translate(0%, -30%);\n\n`;\n\nconst renderTitle = props => {\n  const {\n    title,\n    small,\n    medium,\n    large\n  } = props;\n  return /*#__PURE__*/React.createElement(TitleWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Jumbo, {\n    extraSmall: true,\n    color: Colors.Blue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nconst renderInput = props => {\n  const {\n    label,\n    small,\n    medium,\n    large,\n    value,\n    handleChange,\n    handleSubmit\n  } = props;\n  return /*#__PURE__*/React.createElement(TextInputWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    value: value,\n    onChange: handleChange,\n    placeholder: \"Enter Room Code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst renderButton = props => {\n  const {\n    small,\n    medium,\n    large,\n    handleSubmit\n  } = props;\n  let width;\n\n  if (large) {\n    width = 175;\n  } else if (small) {\n    width = 125;\n  } else {\n    width = 150;\n  }\n\n  return /*#__PURE__*/React.createElement(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    small: small,\n    medium: medium,\n    large: large,\n    width: width,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, \"SUBMIT\"));\n};\n\nconst RoomCodeForm = props => {\n  const {\n    title,\n    width,\n    value,\n    handleChange,\n    handleSubmit\n  } = props;\n  return /*#__PURE__*/React.createElement(ComponentWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, renderTitle(props), renderInput(props), renderButton(props)));\n};\n\nRoomCodeForm.propTypes = propTypes;\nRoomCodeForm.defaultProps = defaultProps;\nexport default RoomCodeForm;","map":{"version":3,"sources":["C:/Users/dubin/Github/faculty-voting/code/src/components/RoomCodeForm.js"],"names":["React","styled","css","PropTypes","ExtraPropTypes","Colors","Body","Card","Button","Jumbo","propTypes","value","string","handleChange","func","handleSubmit","defaultProps","undefined","ComponentWrapper","div","small","medium","large","ButtonWrapper","TextInputWrapper","Form","form","Input","input","TitleWrapper","renderTitle","props","title","Blue","renderInput","label","renderButton","width","RoomCodeForm"],"mappings":"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","sourcesContent":["import React            from 'react';\r\nimport styled, { css }  from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from './theme/Colors';\r\nimport Body             from './theme/Body';\r\nimport Card             from './Card';\r\nimport Button           from './Button';\r\nimport Jumbo             from './theme/Jumbo';\r\n\r\n\r\n\r\nconst propTypes = {\r\n  value: PropTypes.string,\r\n  handleChange: PropTypes.func,\r\n  handleSubmit: PropTypes.func,\r\n};\r\n\r\nconst defaultProps = {\r\n  handleChange: undefined,\r\n  handleSubmit: undefined\r\n};\r\n\r\nconst ComponentWrapper = styled.div`\r\n  ${({small}) => small && `padding-bottom: 16px`}\r\n  ${({medium}) => medium && `padding-bottom: 20px`}\r\n  ${({large}) => large && `padding-bottom: 26px`}\r\n\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n\r\n  margin: 0;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n\r\n  transform: translate(0, 65%);\r\n\r\n`;\r\n\r\nconst TextInputWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  text-align: center;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  width: 100%;\r\n  height: 25px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 200px;\r\n  height: 25px;\r\n  padding: 8px;\r\n  font-size: 18px;\r\n`;\r\n\r\nconst TitleWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n  text-align: center;\r\n\r\n  transform: translate(0%, -30%);\r\n\r\n`;\r\n\r\nconst renderTitle = (props) => {\r\n\r\n  const { title, small, medium, large } = props;\r\n\r\n  return (\r\n    <TitleWrapper>\r\n      <Jumbo extraSmall color={Colors.Blue}>\r\n        {title}\r\n      </Jumbo>\r\n    </TitleWrapper>\r\n  )\r\n};\r\n\r\nconst renderInput = (props) => {\r\n  const { label, small, medium, large, value, handleChange, handleSubmit } = props;\r\n\r\n  return (\r\n    <TextInputWrapper>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input type=\"text\" value={value} onChange={handleChange} placeholder=\"Enter Room Code\" />\r\n      </Form>\r\n    </TextInputWrapper>\r\n  )\r\n};\r\n\r\nconst renderButton = (props) => {\r\n\r\n  const { small, medium, large, handleSubmit } = props;\r\n\r\n  let width;\r\n\r\n  if (large) { width = 175}\r\n  else if ( small ) { width = 125 }\r\n  else { width = 150 }\r\n\r\n  return(\r\n    <ButtonWrapper>\r\n      <Button small={small} medium={medium} large={large} width={width} onClick={handleSubmit}>\r\n         SUBMIT\r\n      </Button>\r\n    </ButtonWrapper>\r\n\r\n  )\r\n};\r\n\r\nconst RoomCodeForm = (props) => {\r\n\r\n    const { title, width, value, handleChange, handleSubmit } = props;\r\n\r\n    return (\r\n      <ComponentWrapper>\r\n        <Card width={width}>\r\n          {renderTitle(props)}\r\n          {renderInput(props)}\r\n          {renderButton(props)}\r\n        </Card>\r\n      </ComponentWrapper>\r\n\r\n\r\n    );\r\n\r\n};\r\n\r\nRoomCodeForm.propTypes = propTypes;\r\nRoomCodeForm.defaultProps = defaultProps;\r\n\r\nexport default RoomCodeForm;\r\n"]},"metadata":{},"sourceType":"module"}