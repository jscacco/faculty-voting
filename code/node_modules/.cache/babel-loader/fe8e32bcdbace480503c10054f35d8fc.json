{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dubin\\\\Github\\\\faculty-voting\\\\code\\\\src\\\\components\\\\buttons\\\\Button.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ExtraPropTypes from 'react-extra-prop-types';\nimport { Colors } from '../theme/Colors';\nimport Body from '../theme/Body';\nconst propTypes = {\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  backgroundColor: ExtraPropTypes.color,\n  textColor: ExtraPropTypes.color,\n  extraLarge: PropTypes.bool,\n  large: PropTypes.bool,\n  medium: PropTypes.bool,\n  small: PropTypes.bool,\n  extraSmall: PropTypes.bool\n};\nconst defaultProps = {\n  onClick: undefined,\n  backgroundColor: Colors.Blue,\n  textColor: Colors.White\n};\nconst BodyText = styled(Body)`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\nconst ButtonComponent = styled.button`\n  background: ${({\n  backgroundColor\n}) => backgroundColor};\n  position: relative;\n  display: inline-block;\n  cursor: ${({\n  disabled\n}) => disabled ? `default` : `pointer`};\n  outline: none;\n  border: 0px;\n  vertical-align: middle;\n  horizontal-align: middle;\n  text-decoration: none;\n  border-radius: 42px;\n  height: ${({\n  buttonHeight\n}) => buttonHeight};\n  width: 100%;\n  padding-right: ${({\n  padding\n}) => padding};\n  padding-left: ${({\n  padding\n}) => padding};\n`;\nconst buttonConfig = {\n  extraLarge: {\n    buttonHeight: `58px`,\n    padding: `28px`\n  },\n  large: {\n    buttonHeight: `48px`,\n    padding: `22px`\n  },\n  medium: {\n    buttonHeight: `40px`,\n    padding: `16px`\n  },\n  small: {\n    buttonHeight: `32px`,\n    padding: `14px`\n  },\n  extraSmall: {\n    buttonHeight: `28px`,\n    padding: `12px`\n  }\n};\n\nconst Button = props => {\n  const {\n    children,\n    backgroundColor,\n    textColor,\n    extraLarge,\n    large,\n    medium,\n    small,\n    extraSmall\n  } = props;\n  let config;\n\n  if (extraLarge) {\n    config = buttonConfig.extraLarge;\n  } else if (large) {\n    config = buttonConfig.large;\n  } else if (small) {\n    config = buttonConfig.small;\n  } else if (extraSmall) {\n    config = buttonConfig.extraSmall;\n  } else {\n    config = buttonConfig.medium;\n  }\n\n  return /*#__PURE__*/React.createElement(ButtonComponent, Object.assign({\n    padding: config.padding,\n    buttonHeight: config.buttonHeight\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(BodyText, Object.assign({\n    color: textColor\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  })));\n};\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","map":{"version":3,"sources":["C:/Users/dubin/Github/faculty-voting/code/src/components/buttons/Button.js"],"names":["React","styled","PropTypes","ExtraPropTypes","Colors","Body","propTypes","children","node","onClick","func","backgroundColor","color","textColor","extraLarge","bool","large","medium","small","extraSmall","defaultProps","undefined","Blue","White","BodyText","ButtonComponent","button","disabled","buttonHeight","padding","buttonConfig","Button","props","config"],"mappings":"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","sourcesContent":["import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Body             from '../theme/Body';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  onClick: PropTypes.func,\r\n\r\n  backgroundColor: ExtraPropTypes.color,\r\n  textColor: ExtraPropTypes.color,\r\n\r\n  extraLarge: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  extraSmall: PropTypes.bool\r\n};\r\n\r\nconst defaultProps = {\r\n  onClick: undefined,\r\n  backgroundColor: Colors.Blue,\r\n  textColor: Colors.White,\r\n};\r\n\r\nconst BodyText = styled(Body)`\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ButtonComponent = styled.button`\r\n  background: ${({backgroundColor}) => backgroundColor};\r\n  position: relative;\r\n  display: inline-block;\r\n  cursor: ${({disabled}) => disabled ? `default` : `pointer`};\r\n  outline: none;\r\n  border: 0px;\r\n  vertical-align: middle;\r\n  horizontal-align: middle;\r\n  text-decoration: none;\r\n  border-radius: 42px;\r\n  height: ${({buttonHeight}) => buttonHeight};\r\n  width: 100%;\r\n  padding-right: ${({padding}) => padding};\r\n  padding-left: ${({padding}) => padding};\r\n`;\r\n\r\nconst buttonConfig = {\r\n  extraLarge: { buttonHeight: `58px`,\r\n                padding: `28px` },\r\n  large: { buttonHeight: `48px`,\r\n           padding: `22px`},\r\n  medium: { buttonHeight: `40px`,\r\n            padding: `16px` },\r\n  small: { buttonHeight: `32px`,\r\n           padding: `14px`},\r\n  extraSmall: { buttonHeight: `28px`,\r\n           padding: `12px`},\r\n};\r\n\r\nconst Button = ( props ) => {\r\n\r\n  const { children, backgroundColor,textColor,\r\n          extraLarge, large, medium, small, extraSmall } = props;\r\n\r\n  let config;\r\n\r\n  if (extraLarge) { config = buttonConfig.extraLarge }\r\n  else if (large) { config = buttonConfig.large }\r\n  else if (small) { config = buttonConfig.small }\r\n  else if (extraSmall) { config = buttonConfig.extraSmall }\r\n  else { config = buttonConfig.medium }\r\n\r\n  return(\r\n    <ButtonComponent padding={config.padding}\r\n                     buttonHeight={config.buttonHeight}\r\n                     {...props}>\r\n      <BodyText color={textColor} {...props}/>\r\n    </ButtonComponent>\r\n  );\r\n};\r\n\r\nButton.propTypes = propTypes;\r\nButton.defaultProps = defaultProps;\r\n\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}