{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dubin\\\\Github\\\\faculty-voting\\\\code\\\\src\\\\pages\\\\MeetingRoom.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../components/theme/Colors';\nimport history from '../history';\nimport HostControlPanel from '../components/HostControlPanel';\nimport Input from '../components/inputs/Input';\nimport firebase from '../firebase';\nimport { code } from './RoomCode';\nconst PageWrapper = styled.div`\n  background-color: ${Colors.LightBlue};\n  position: absolute;\n  right: 0;\n  left: 0;\n  top: 0;\n  bottom: 0;\n`;\n\nclass MeetingRoomScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addOption = () => {\n      this.setState({\n        optionComponents: [...this.state.optionComponents, /*#__PURE__*/React.createElement(Input, {\n          placeholder: 'Option',\n          onChange: this.handleOptionChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 26\n          }\n        })]\n      });\n      console.log('Option added');\n      console.log(this.state.optionComponents.length);\n    };\n\n    this.handleTitleChange = event => {\n      this.setState({\n        pollTitle: event.target.value\n      });\n      console.log('New title: ' + this.state.pollTitle);\n    };\n\n    this.handleDescriptionChange = event => {\n      this.setState({\n        pollDescription: event.target.value\n      });\n      console.log('New Desc: ' + this.state.pollDescription);\n    };\n\n    this.handleOptionChange = event => {\n      console.log('Option value being changed');\n      console.log(event.target.value);\n\n      for (const component of this.state.optionComponents) {\n        console.log(component.value);\n      }\n    };\n\n    this.handleCreatePoll = () => {\n      alert('Creating poll ' + this.state.description + ' ' + this.state.description);\n    };\n\n    this.state = {\n      // State values for creating a new poll\n      optionComponents: [/*#__PURE__*/React.createElement(Input, {\n        placeholder: 'Option',\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 26\n        }\n      }), /*#__PURE__*/React.createElement(Input, {\n        placeholder: 'Option',\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 26\n        }\n      })],\n      options: [],\n      pollTitle: '',\n      pollDescription: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(PageWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(HostControlPanel, {\n      width: 300,\n      title: \"Create a Poll\",\n      handleSubmit: this.handleCreatePoll,\n      handleCreateOption: this.addOption,\n      handleOptionChange: this.handleOptionChange,\n      handleTitleChange: this.handleTitleChange,\n      handleDescriptionChange: this.handleDescriptionChange,\n      options: this.state.optionComponents,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\n;\nexport default MeetingRoomScreen;","map":{"version":3,"sources":["C:/Users/dubin/Github/faculty-voting/code/src/pages/MeetingRoom.js"],"names":["React","styled","Colors","history","HostControlPanel","Input","firebase","code","PageWrapper","div","LightBlue","MeetingRoomScreen","Component","constructor","props","addOption","setState","optionComponents","state","handleOptionChange","console","log","length","handleTitleChange","event","pollTitle","target","value","handleDescriptionChange","pollDescription","component","handleCreatePoll","alert","description","handleChange","options","render"],"mappings":"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","sourcesContent":["import React                from 'react';\r\nimport styled               from 'styled-components';\r\n\r\nimport { Colors }           from '../components/theme/Colors';\r\nimport history              from '../history';\r\nimport HostControlPanel     from '../components/HostControlPanel';\r\nimport Input                from '../components/inputs/Input';\r\nimport firebase             from '../firebase';\r\nimport {code}               from './RoomCode';\r\n\r\nconst PageWrapper = styled.div`\r\n  background-color: ${Colors.LightBlue};\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n`;\r\n\r\nclass MeetingRoomScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // State values for creating a new poll\r\n      optionComponents: [<Input placeholder={'Option'}\r\n                                onChange={this.handleChange}/>,\r\n                         <Input placeholder={'Option'}\r\n                                onChange={this.handleChange}/>],\r\n      options: [],\r\n      pollTitle: '',\r\n      pollDescription: ''\r\n    }\r\n  }\r\n\r\n  addOption = () => {\r\n    this.setState({\r\n      optionComponents: [...this.state.optionComponents,\r\n                         <Input placeholder={'Option'}\r\n                                onChange={this.handleOptionChange}/>]\r\n    })\r\n\r\n    console.log('Option added')\r\n    console.log(this.state.optionComponents.length)\r\n  }\r\n\r\n  handleTitleChange = (event) => {\r\n    this.setState({\r\n      pollTitle: event.target.value\r\n    })\r\n\r\n    console.log('New title: ' + this.state.pollTitle)\r\n  }\r\n\r\n  handleDescriptionChange = (event) => {\r\n    this.setState({\r\n      pollDescription: event.target.value\r\n    })\r\n\r\n    console.log('New Desc: ' + this.state.pollDescription)\r\n  }\r\n\r\n  handleOptionChange = (event) => {\r\n    console.log('Option value being changed')\r\n\r\n    console.log(event.target.value)\r\n    for (const component of this.state.optionComponents) {\r\n      console.log(component.value)\r\n    }\r\n  }\r\n\r\n  handleCreatePoll = () => {\r\n    alert('Creating poll ' + this.state.description + ' ' + this.state.description)\r\n  \r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PageWrapper>\r\n        <HostControlPanel width={300} title=\"Create a Poll\"\r\n                          handleSubmit={this.handleCreatePoll}\r\n                          handleCreateOption={this.addOption}\r\n                          handleOptionChange={this.handleOptionChange}\r\n                          handleTitleChange={this.handleTitleChange}\r\n                          handleDescriptionChange={this.handleDescriptionChange}\r\n                          options={this.state.optionComponents} />\r\n      </PageWrapper>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default MeetingRoomScreen;\r\n"]},"metadata":{},"sourceType":"module"}