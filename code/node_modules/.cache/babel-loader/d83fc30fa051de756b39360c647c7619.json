{"ast":null,"code":"var _jsxFileName = \"/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/pages/Poll.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../components/theme/Colors';\nimport Button from '../components/Button';\nimport Bubble from '../components/Bubble';\nimport Option from '../components/Option';\nimport OptionGroup from '../components/OptionGroup';\nimport Card from '../components/Card';\nimport VotingCard from '../components/VotingCard';\nconst PageWrapper = styled.div`\n  background-color: ${Colors.LightBlue};\n  position: absolute;\n  right: 0;\n  left: 0;\n  top: 0;\n  bottom: 0;\n`;\n\nclass PollScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOptionClick = id => {\n      if (this.state.selectedBubble === id) {\n        this.setState({\n          selectedBubble: null\n        });\n      } else {\n        this.setState({\n          selectedBubble: id\n        });\n      }\n    };\n\n    this.handleSubmit = event => {\n      if (this.state.selectedBubble && !this.state.voted) {\n        this.setState({\n          voted: true,\n          vote: this.state.selectedBubble\n        });\n      } else if (this.state.selectedBubble != this.state.submittedBubble) {\n        this.setState({\n          voted: true,\n          vote: this.state.selectedBubble\n        });\n      }\n    };\n\n    this.state = {\n      selectedBubble: null,\n      submittedBubble: null,\n      voted: false,\n      vote: null\n    }; //\n\n    this.handleOptionClick = this.handleOptionClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    const unselected = this.state.selectedBubble === null;\n    const submit = !this.state.voted;\n    const submitted = this.state.selectedBubble === this.state.vote;\n    const resubmit = this.state.selectedBubble != this.state.vote;\n    return /*#__PURE__*/React.createElement(PageWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(VotingCard, {\n      medium: true,\n      width: 600,\n      title: 'Poll Title',\n      description: 'Description of the poll... very informative.',\n      options: ['Option 1', 'Option 2', 'Option 3'],\n      handleOptionClick: this.handleOptionClick,\n      selectedBubble: this.state.selectedBubble,\n      handleSubmit: this.handleSubmit,\n      unselected: unselected,\n      submit: submit,\n      resubmit: resubmit,\n      submitted: submitted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\n; // const PollScreen = (props) => {\n//\n//   return(\n//     <PageWrapper>\n//       <VotingCard medium\n//                   width={600}\n//                   title={'Poll Title'}\n//                   description={'Description of the poll... very informative.'}\n//                   options={['Option 1', 'Option 2', 'Option 3']}/>\n//     </PageWrapper>\n//   )\n//\n// };\n\nexport default PollScreen;","map":{"version":3,"sources":["/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/pages/Poll.js"],"names":["React","styled","Colors","Button","Bubble","Option","OptionGroup","Card","VotingCard","PageWrapper","div","LightBlue","PollScreen","Component","constructor","props","handleOptionClick","id","state","selectedBubble","setState","handleSubmit","event","voted","vote","submittedBubble","bind","render","unselected","submit","submitted","resubmit"],"mappings":"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","sourcesContent":["import React    from 'react';\nimport styled   from 'styled-components';\n\nimport { Colors } from '../components/theme/Colors';\nimport Button from '../components/Button';\nimport Bubble from '../components/Bubble';\nimport Option from '../components/Option';\nimport OptionGroup from '../components/OptionGroup';\nimport Card from '../components/Card';\nimport VotingCard from '../components/VotingCard';\n\nconst PageWrapper = styled.div`\n  background-color: ${Colors.LightBlue};\n  position: absolute;\n  right: 0;\n  left: 0;\n  top: 0;\n  bottom: 0;\n`;\n\nclass PollScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {selectedBubble: null,\n                  submittedBubble: null,\n                  voted: false,\n                  vote: null};\n    //\n    this.handleOptionClick = this.handleOptionClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleOptionClick = (id) => {\n    if (this.state.selectedBubble === id) {\n      this.setState({selectedBubble: null});\n    }\n    else { this.setState({selectedBubble: id}); }\n  }\n\n\n  handleSubmit = (event) => {\n    if (this.state.selectedBubble && !this.state.voted){\n      this.setState({voted: true,\n                     vote: this.state.selectedBubble});\n    }\n    else if (this.state.selectedBubble != this.state.submittedBubble){\n      this.setState({voted: true,\n                     vote: this.state.selectedBubble});\n    }\n  }\n\n  render() {\n\n    const unselected = this.state.selectedBubble === null;\n    const submit = !this.state.voted;\n    const submitted = this.state.selectedBubble === this.state.vote;\n    const resubmit = this.state.selectedBubble != this.state.vote;\n\n    return (\n        <PageWrapper>\n          <VotingCard medium\n                      width={600}\n                      title={'Poll Title'}\n                      description={'Description of the poll... very informative.'}\n                      options={['Option 1', 'Option 2', 'Option 3']}\n                      handleOptionClick={this.handleOptionClick}\n                      selectedBubble={this.state.selectedBubble}\n                      handleSubmit={this.handleSubmit}\n                      unselected={unselected} submit={submit} resubmit={resubmit} submitted={submitted}/>\n        </PageWrapper>\n      );\n  }\n};\n\n\n\n\n// const PollScreen = (props) => {\n//\n//   return(\n//     <PageWrapper>\n//       <VotingCard medium\n//                   width={600}\n//                   title={'Poll Title'}\n//                   description={'Description of the poll... very informative.'}\n//                   options={['Option 1', 'Option 2', 'Option 3']}/>\n//     </PageWrapper>\n//   )\n//\n// };\n\nexport default PollScreen;\n"]},"metadata":{},"sourceType":"module"}