{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dubin\\\\Github\\\\faculty-voting\\\\code\\\\src\\\\components\\\\theme\\\\Body.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ExtraPropTypes from 'react-extra-prop-types';\nimport Text from './Text';\nimport { Fonts } from './Fonts';\nimport { Colors } from './Colors';\nconst propTypes = {\n  children: PropTypes.node.isRequired,\n  primative: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h6', 'span', 'p']),\n  color: ExtraPropTypes.color,\n  extraSmall: PropTypes.bool,\n  small: PropTypes.bool,\n  medium: PropTypes.bool,\n  large: PropTypes.bool,\n  extraLarge: PropTypes.bool\n};\nconst defaultProps = {\n  primitive: 'p',\n  color: Colors.Black\n};\nconst fontConfig = {\n  fontFamily: Fonts.WorkSans,\n  fontWeight: 'bold',\n  extraSmall: {\n    fontSize: 14,\n    lineHeight: 20\n  },\n  small: {\n    fontSize: 16,\n    lineHeight: 22\n  },\n  medium: {\n    fontSize: 20,\n    lineHeight: 28\n  },\n  large: {\n    fontSize: 26,\n    lineHeight: 36\n  },\n  extraLarge: {\n    fontSize: 32,\n    lineHeight: 42\n  }\n};\nconst BodyWrapper = styled(Text)`\n  font-weight: ${fontConfig.fontWeight};\n  font-family: ${fontConfig.fontFamily};\n  color: ${({\n  color\n}) => color};\n  white-space: pre-line;\n`;\n\nconst Body = props => {\n  const {\n    primitive,\n    extraLarge,\n    large,\n    medium,\n    small,\n    extraSmall,\n    children,\n    color,\n    ...rest\n  } = props;\n  let sizeConfig = {};\n\n  if (extraLarge) {\n    sizeConfig = fontConfig.extraLarge;\n  } else if (large) {\n    sizeConfig = fontConfig.large;\n  } else if (medium) {\n    sizeConfig = fontConfig.medium;\n  } else if (small) {\n    sizeConfig = fontConfig.small;\n  } else {\n    sizeConfig = fontConfig.extraSmall;\n  }\n\n  return /*#__PURE__*/React.createElement(BodyWrapper, Object.assign({\n    color: color,\n    primitive: primitive,\n    fontSize: sizeConfig.fontSize,\n    lineHeight: sizeConfig.lineHeight\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nBody.propTypes = propTypes;\nBody.defaultProps = defaultProps;\nexport default Body;","map":{"version":3,"sources":["C:/Users/dubin/Github/faculty-voting/code/src/components/theme/Body.js"],"names":["React","styled","PropTypes","ExtraPropTypes","Text","Fonts","Colors","propTypes","children","node","isRequired","primative","oneOf","color","extraSmall","bool","small","medium","large","extraLarge","defaultProps","primitive","Black","fontConfig","fontFamily","WorkSans","fontWeight","fontSize","lineHeight","BodyWrapper","Body","props","rest","sizeConfig"],"mappings":"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","sourcesContent":["import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport Text             from './Text'\r\nimport { Fonts }        from './Fonts';\r\nimport { Colors }       from './Colors';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  primative: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h6', 'span', 'p']),\r\n\r\n  color: ExtraPropTypes.color,\r\n\r\n  extraSmall: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  extraLarge: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  primitive: 'p',\r\n\r\n  color: Colors.Black,\r\n};\r\n\r\nconst fontConfig = {\r\n  fontFamily: Fonts.WorkSans,\r\n  fontWeight: 'bold',\r\n\r\n  extraSmall: { fontSize: 14, lineHeight: 20  },\r\n  small: { fontSize: 16, lineHeight: 22 },\r\n  medium: { fontSize: 20, lineHeight: 28  },\r\n  large: { fontSize: 26, lineHeight: 36 },\r\n  extraLarge: { fontSize: 32, lineHeight: 42 }\r\n};\r\n\r\nconst BodyWrapper = styled(Text)`\r\n  font-weight: ${fontConfig.fontWeight};\r\n  font-family: ${fontConfig.fontFamily};\r\n  color: ${({color}) => color};\r\n  white-space: pre-line;\r\n`;\r\n\r\nconst Body = ( props ) => {\r\n\r\n  const { primitive, extraLarge, large, medium, small, extraSmall,\r\n          children, color, ...rest } = props;\r\n\r\n  let sizeConfig = {};\r\n  if (extraLarge) { sizeConfig = fontConfig.extraLarge }\r\n  else if (large) { sizeConfig = fontConfig.large }\r\n  else if (medium) { sizeConfig = fontConfig.medium }\r\n  else if (small) { sizeConfig = fontConfig.small }\r\n  else { sizeConfig = fontConfig.extraSmall }\r\n\r\n  return(\r\n    <BodyWrapper color={color}\r\n                 primitive={primitive}\r\n                 fontSize={sizeConfig.fontSize}\r\n                 lineHeight={sizeConfig.lineHeight}\r\n                 {...rest}>\r\n      {children}\r\n    </BodyWrapper>\r\n  );\r\n};\r\n\r\nBody.propTypes = propTypes;\r\nBody.defaultProps = defaultProps;\r\n\r\nexport default Body;\r\n"]},"metadata":{},"sourceType":"module"}