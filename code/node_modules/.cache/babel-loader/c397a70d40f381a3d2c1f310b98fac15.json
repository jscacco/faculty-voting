{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dubin\\\\Github\\\\faculty-voting\\\\code\\\\src\\\\components\\\\buttons\\\\IconButton.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ExtraPropTypes from 'react-extra-prop-types';\nimport { Colors } from '../theme/Colors';\nimport Icon from '../theme/Icon';\nconst propTypes = {\n  onClick: PropTypes.func,\n  icon: PropTypes.string.isRequired,\n  clickedIcon: PropTypes.string.isRequired,\n  color: ExtraPropTypes.color,\n  extraLarge: PropTypes.bool,\n  large: PropTypes.bool,\n  medium: PropTypes.bool,\n  small: PropTypes.bool,\n  extraSmall: PropTypes.bool\n};\nconst defaultProps = {\n  onClick: undefined,\n  color: Colors.Black\n};\nconst sizeConfig = {\n  extraLarge: '2em',\n  large: '1.75em',\n  medium: '1.5em',\n  small: '1em',\n  extraSmall: '0.75em'\n};\n\nclass IconButton extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._handleClick = event => {\n      const {\n        clicked\n      } = this.state;\n      this.setState({\n        clicked: !clicked\n      });\n\n      if (this.props.onClick) {\n        this.props.onClick(event);\n      }\n\n      ;\n    };\n\n    this._renderClicked = size => /*#__PURE__*/React.createElement(Icon, {\n      type: this.props.clickedIcon,\n      onClick: this._handleClick,\n      size: size,\n      color: this.props.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    });\n\n    this._renderUnClicked = size => /*#__PURE__*/React.createElement(Icon, {\n      type: this.props.icon,\n      onClick: this._handleClick,\n      size: size,\n      color: this.props.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    });\n\n    this.state = {\n      clicked: false\n    };\n    this._renderClicked = this._renderClicked.bind(this);\n    this._renderUnClicked = this._renderUnClicked.bind(this);\n  }\n\n  render() {\n    const {\n      extraLarge,\n      large,\n      medium,\n      small,\n      extraSmall\n    } = this.props;\n    let size;\n\n    if (extraLarge) {\n      size = sizeConfig.extraLarge;\n    } else if (large) {\n      size = sizeConfig.large;\n    } else if (small) {\n      size = sizeConfig.small;\n    } else if (extraSmall) {\n      size = size.extraSmall;\n    } else {\n      size = sizeConfig.medium;\n    }\n\n    return this.state.clicked ? this._renderClicked(size) : this._renderUnClicked(size);\n  }\n\n}\n\nIconButton.propTypes = propTypes;\nIconButton.defaultProps = defaultProps;\nexport default IconButton;","map":{"version":3,"sources":["C:/Users/dubin/Github/faculty-voting/code/src/components/buttons/IconButton.js"],"names":["React","styled","PropTypes","ExtraPropTypes","Colors","Icon","propTypes","onClick","func","icon","string","isRequired","clickedIcon","color","extraLarge","bool","large","medium","small","extraSmall","defaultProps","undefined","Black","sizeConfig","IconButton","Component","constructor","props","_handleClick","event","clicked","state","setState","_renderClicked","size","_renderUnClicked","bind","render"],"mappings":"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","sourcesContent":["import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Icon             from '../theme/Icon';\r\n\r\nconst propTypes = {\r\n  onClick: PropTypes.func,\r\n\r\n  icon: PropTypes.string.isRequired,\r\n  clickedIcon: PropTypes.string.isRequired,\r\n  color: ExtraPropTypes.color,\r\n\r\n  extraLarge: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  extraSmall: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  onClick: undefined,\r\n\r\n  color: Colors.Black,\r\n};\r\n\r\nconst sizeConfig = {\r\n  extraLarge: '2em',\r\n  large: '1.75em',\r\n  medium: '1.5em' ,\r\n  small: '1em',\r\n  extraSmall: '0.75em'\r\n};\r\n\r\nclass IconButton extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { clicked: false };\r\n\r\n    this._renderClicked = this._renderClicked.bind(this);\r\n    this._renderUnClicked = this._renderUnClicked.bind(this);\r\n  };\r\n\r\n  _handleClick = ( event ) => {\r\n\r\n    const { clicked } = this.state;\r\n\r\n    this.setState({ clicked: !clicked });\r\n    if (this.props.onClick) { this.props.onClick(event); };\r\n  };\r\n\r\n  _renderClicked = (size) => (\r\n      <Icon type={this.props.clickedIcon}\r\n            onClick={this._handleClick}\r\n            size={size}\r\n            color={this.props.color} />\r\n  );\r\n\r\n  _renderUnClicked = (size) => (\r\n      <Icon type={this.props.icon}\r\n            onClick={this._handleClick}\r\n            size={size}\r\n            color={this.props.color} />\r\n  );\r\n\r\n  render() {\r\n\r\n    const { extraLarge, large, medium, small, extraSmall } = this.props;\r\n\r\n    let size;\r\n\r\n    if (extraLarge) { size = sizeConfig.extraLarge }\r\n    else if (large) { size = sizeConfig.large }\r\n    else if (small) { size = sizeConfig.small }\r\n    else if (extraSmall) { size = size.extraSmall }\r\n    else { size = sizeConfig.medium }\r\n\r\n    return(this.state.clicked ? this._renderClicked(size) : this._renderUnClicked(size));\r\n  }\r\n}\r\n\r\nIconButton.propTypes = propTypes;\r\nIconButton.defaultProps = defaultProps;\r\n\r\nexport default IconButton;\r\n"]},"metadata":{},"sourceType":"module"}