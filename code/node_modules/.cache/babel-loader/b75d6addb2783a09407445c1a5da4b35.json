{"ast":null,"code":"var _jsxFileName = \"/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/components/PollAgendaCard.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ExtraPropTypes from 'react-extra-prop-types';\nimport { Colors } from './theme/Colors';\nimport Body from './theme/Body';\nimport { Jumbo } from './theme/Jumbo';\nimport OptionGroup from './OptionGroup';\nimport Card from './Card';\nimport Button from './Button';\nconst ComponentWrapper = styled.div`\n  ${({\n  small\n}) => small && `padding-bottom: 20px`}\n  ${({\n  medium\n}) => medium && `padding-bottom: 26px`}\n  ${({\n  large\n}) => large && `padding-bottom: 32px`}\n\n`;\nconst CenterWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n`;\n\nconst renderType = props => {\n  const {\n    type,\n    small,\n    medium,\n    large\n  } = props;\n  return /*#__PURE__*/React.createElement(ComponentWrapper, {\n    small: small,\n    medium: medium,\n    large: large,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Body, {\n    small: small,\n    medium: medium,\n    large: large,\n    color: Colors.Black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, type));\n};\n\nconst renderTitle = props => {\n  const {\n    title,\n    small,\n    medium,\n    large\n  } = props;\n  return /*#__PURE__*/React.createElement(ComponentWrapper, {\n    small: small,\n    medium: medium,\n    large: large,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Body, {\n    small: small,\n    medium: medium,\n    large: large,\n    color: Colors.Black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nconst renderStatus = props => {\n  const {\n    status,\n    small,\n    medium,\n    large\n  } = props;\n  return /*#__PURE__*/React.createElement(ComponentWrapper, {\n    small: small,\n    medium: medium,\n    large: large,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Body, {\n    small: small,\n    medium: medium,\n    large: large,\n    color: Colors.Black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, status));\n};\n\nconst renderButton = props => {\n  const {\n    small,\n    medium,\n    large,\n    handleSubmit,\n    pending,\n    open,\n    closed\n  } = props;\n  let width;\n\n  if (large) {\n    width = 175;\n  } else if (small) {\n    width = 125;\n  } else {\n    width = 150;\n  }\n\n  let text;\n  let color;\n\n  if (pending) {\n    text = 'Pending';\n    color = Colors.Grey;\n  } else if (open) {\n    text = 'Open';\n    color = Colors.Green;\n  } else if (resubmit) {\n    text = 'RESUBMIT';\n    color = Colors.Yellow;\n  } else {\n    text = 'ERROR';\n    color = Colors.Red;\n  }\n\n  ;\n\n  if (unselected) {\n    color = Colors.Red;\n  }\n\n  ;\n};\n\nconst PollAgendaCard = props => {\n  const {\n    width,\n    type,\n    title,\n    status,\n    action\n  } = props;\n  return /*#__PURE__*/React.createElement(Card, {\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CenterWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, renderType(props), renderTitle(props), renderStatus(props), renderButton(props)));\n};\n\nexport default PollAgendaCard;","map":{"version":3,"sources":["/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/components/PollAgendaCard.js"],"names":["React","styled","PropTypes","ExtraPropTypes","Colors","Body","Jumbo","OptionGroup","Card","Button","ComponentWrapper","div","small","medium","large","CenterWrapper","renderType","props","type","Black","renderTitle","title","renderStatus","status","renderButton","handleSubmit","pending","open","closed","width","text","color","Grey","Green","resubmit","Yellow","Red","unselected","PollAgendaCard","action"],"mappings":"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","sourcesContent":["import React            from 'react';\nimport styled           from 'styled-components';\nimport PropTypes        from 'prop-types';\nimport ExtraPropTypes   from 'react-extra-prop-types';\n\nimport { Colors }       from './theme/Colors';\nimport Body             from './theme/Body';\nimport {Jumbo}             from './theme/Jumbo';\n\nimport OptionGroup      from './OptionGroup';\nimport Card             from './Card';\nimport Button           from './Button';\n\nconst ComponentWrapper = styled.div`\n  ${({small}) => small && `padding-bottom: 20px`}\n  ${({medium}) => medium && `padding-bottom: 26px`}\n  ${({large}) => large && `padding-bottom: 32px`}\n\n`;\n\nconst CenterWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n`;\n\nconst renderType = (props) => {\n\n  const { type, small, medium, large } = props;\n\n  return (\n    <ComponentWrapper small={small} medium={medium} large={large}>\n      <Body small={small} medium={medium}\n            large={large} color={Colors.Black}>\n        {type}\n      </Body>\n    </ComponentWrapper>\n  )\n};\n\nconst renderTitle = (props) => {\n  const { title, small, medium, large } = props;\n\n  return (\n    <ComponentWrapper small={small} medium={medium} large={large}>\n      <Body small={small} medium={medium}\n            large={large} color={Colors.Black}>\n        {title}\n      </Body>\n    </ComponentWrapper>\n  )\n};\n\nconst renderStatus = (props) => {\n  const { status, small, medium, large } = props;\n\n  return (\n    <ComponentWrapper small={small} medium={medium} large={large}>\n      <Body small={small} medium={medium}\n            large={large} color={Colors.Black}>\n        {status}\n      </Body>\n    </ComponentWrapper>\n  )\n};\n\nconst renderButton = (props) => {\n  const { small, medium, large,\n          handleSubmit, pending, open, closed } = props;\n\n  let width;\n\n  if (large) { width = 175}\n  else if ( small ) { width = 125 }\n  else { width = 150 }\n\n  let text;\n  let color;\n  if (pending) {\n    text = 'Pending';\n    color = Colors.Grey;\n  }\n  else if (open) {\n    text='Open';\n    color = Colors.Green;\n  }\n  else if (resubmit) {\n    text = 'RESUBMIT';\n    color = Colors.Yellow;\n  }\n  else { text='ERROR';\n         color = Colors.Red;};\n\n  if (unselected) { color = Colors.Red };\n};\n\nconst PollAgendaCard = (props) => {\n\n  const { width, type, title, status, action } = props;\n\n  return (\n    <Card width={width}>\n      <CenterWrapper>\n        {renderType(props)}\n        {renderTitle(props)}\n        {renderStatus(props)}\n        {renderButton(props)}\n      </CenterWrapper>\n    </Card>\n  )\n\n};\n\nexport default PollAgendaCard;\n"]},"metadata":{},"sourceType":"module"}