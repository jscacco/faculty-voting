{"ast":null,"code":"function getPropTypeError(type, propName, componentName) {\n  return new Error('Non-' + type + ' prop ' + propName + ' supplied to' + ' `' + componentName + '`. Validation failed.');\n}\n\nfunction createPropType(type, validator) {\n  function propType(props, propName, componentName) {\n    if (!validator(props[propName])) {\n      return getPropTypeError(type, propName, componentName);\n    }\n  }\n\n  try {\n    Object.defineProperty(propType, 'name', {\n      value: type\n    });\n  } catch (e) {// https://github.com/benwiley4000/react-extra-prop-types/issues/1\n  }\n\n  function optional(props, propName, componentName) {\n    var prop = props[propName];\n\n    if (prop === null || prop === void 0) {\n      return;\n    }\n\n    return propType(props, propName, componentName);\n  }\n\n  optional.isRequired = propType;\n  return optional;\n}\n\nmodule.exports = createPropType;","map":{"version":3,"sources":["C:/Users/dubin/Github/faculty-voting/code/node_modules/react-extra-prop-types/lib/createPropType.js"],"names":["getPropTypeError","type","propName","componentName","Error","createPropType","validator","propType","props","Object","defineProperty","value","e","optional","prop","isRequired","module","exports"],"mappings":"AAAA,SAASA,gBAAT,CAA2BC,IAA3B,EAAiCC,QAAjC,EAA2CC,aAA3C,EAA0D;AACxD,SAAO,IAAIC,KAAJ,CACL,SAASH,IAAT,GAAgB,QAAhB,GAA2BC,QAA3B,GAAsC,cAAtC,GACA,IADA,GACOC,aADP,GACuB,uBAFlB,CAAP;AAID;;AAED,SAASE,cAAT,CAAyBJ,IAAzB,EAA+BK,SAA/B,EAA0C;AACxC,WAASC,QAAT,CAAmBC,KAAnB,EAA0BN,QAA1B,EAAoCC,aAApC,EAAmD;AACjD,QAAI,CAACG,SAAS,CAACE,KAAK,CAACN,QAAD,CAAN,CAAd,EAAiC;AAC/B,aAAOF,gBAAgB,CAACC,IAAD,EAAOC,QAAP,EAAiBC,aAAjB,CAAvB;AACD;AACF;;AACD,MAAI;AACFM,IAAAA,MAAM,CAACC,cAAP,CAAsBH,QAAtB,EAAgC,MAAhC,EAAwC;AAAEI,MAAAA,KAAK,EAAEV;AAAT,KAAxC;AACD,GAFD,CAEE,OAAOW,CAAP,EAAU,CACV;AACD;;AAED,WAASC,QAAT,CAAmBL,KAAnB,EAA0BN,QAA1B,EAAoCC,aAApC,EAAmD;AACjD,QAAIW,IAAI,GAAGN,KAAK,CAACN,QAAD,CAAhB;;AACA,QAAIY,IAAI,KAAK,IAAT,IAAiBA,IAAI,KAAK,KAAK,CAAnC,EAAsC;AACpC;AACD;;AACD,WAAOP,QAAQ,CAACC,KAAD,EAAQN,QAAR,EAAkBC,aAAlB,CAAf;AACD;;AACDU,EAAAA,QAAQ,CAACE,UAAT,GAAsBR,QAAtB;AAEA,SAAOM,QAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiBZ,cAAjB","sourcesContent":["function getPropTypeError (type, propName, componentName) {\n  return new Error(\n    'Non-' + type + ' prop ' + propName + ' supplied to' +\n    ' `' + componentName + '`. Validation failed.'\n  );\n}\n\nfunction createPropType (type, validator) {\n  function propType (props, propName, componentName) {\n    if (!validator(props[propName])) {\n      return getPropTypeError(type, propName, componentName);\n    }\n  }\n  try {\n    Object.defineProperty(propType, 'name', { value: type });\n  } catch (e) {\n    // https://github.com/benwiley4000/react-extra-prop-types/issues/1\n  }\n  \n  function optional (props, propName, componentName) {\n    var prop = props[propName];\n    if (prop === null || prop === void 0) {\n      return;\n    }\n    return propType(props, propName, componentName);\n  }\n  optional.isRequired = propType;\n\n  return optional;\n}\n\nmodule.exports = createPropType;\n"]},"metadata":{},"sourceType":"script"}