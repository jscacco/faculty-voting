{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dubin\\\\Github\\\\faculty-voting\\\\code\\\\src\\\\pages\\\\Poll.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../components/theme/Colors';\nimport Button from '../components/Button';\nimport Bubble from '../components/Bubble';\nimport Option from '../components/Option';\nimport OptionGroup from '../components/OptionGroup';\nimport Card from '../components/Card';\nimport VotingCard from '../components/VotingCard';\nimport firebase from '../firebase';\nconst PageWrapper = styled.div`\n  background-color: ${Colors.LightBlue};\n  position: absolute;\n  right: 0;\n  left: 0;\n  top: 0;\n  bottom: 0;\n`;\n\nclass PollScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOptionClick = id => {\n      if (this.state.selectedBubble === id) {\n        this.setState({\n          selectedBubble: null\n        });\n      } else {\n        this.setState({\n          selectedBubble: id\n        });\n      }\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n      var yes_votes;\n      var no_votes;\n      var abstain_votes;\n      var docRef = firebase.firestore().collection(\"0\").doc(\"general-poll\");\n\n      if (this.state.selectedBubble && !this.state.voted) {\n        this.setState({\n          voted: true,\n          vote: this.state.selectedBubble\n        });\n      } else if (this.state.selectedBubble != this.state.submittedBubble) {\n        this.setState({\n          voted: true,\n          vote: this.state.selectedBubble\n        });\n      }\n    };\n\n    this.state = {\n      selectedBubble: null,\n      submittedBubble: null,\n      voted: false,\n      last_vote: null,\n      vote: null\n    }; //\n\n    this.handleOptionClick = this.handleOptionClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    const unselected = this.state.selectedBubble === null;\n    const submit = !this.state.voted;\n    const submitted = this.state.selectedBubble === this.state.vote;\n    const resubmit = this.state.selectedBubble != this.state.vote;\n    return /*#__PURE__*/React.createElement(PageWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(VotingCard, {\n      medium: true,\n      width: 600,\n      title: 'Poll Title',\n      description: 'Description of the poll... very informative.',\n      options: ['Yes', 'No', 'Abstain'],\n      handleOptionClick: this.handleOptionClick,\n      selectedBubble: this.state.selectedBubble,\n      handleSubmit: this.handleSubmit,\n      unselected: unselected,\n      submit: submit,\n      resubmit: resubmit,\n      submitted: submitted,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\n; // const PollScreen = (props) => {\n//\n//   return(\n//     <PageWrapper>\n//       <VotingCard medium\n//                   width={600}\n//                   title={'Poll Title'}\n//                   description={'Description of the poll... very informative.'}\n//                   options={['Option 1', 'Option 2', 'Option 3']}/>\n//     </PageWrapper>\n//   )\n//\n// };\n\nexport default PollScreen;","map":{"version":3,"sources":["C:/Users/dubin/Github/faculty-voting/code/src/pages/Poll.js"],"names":["React","styled","Colors","Button","Bubble","Option","OptionGroup","Card","VotingCard","firebase","PageWrapper","div","LightBlue","PollScreen","Component","constructor","props","handleOptionClick","id","state","selectedBubble","setState","handleSubmit","event","preventDefault","yes_votes","no_votes","abstain_votes","docRef","firestore","collection","doc","voted","vote","submittedBubble","last_vote","bind","render","unselected","submit","submitted","resubmit"],"mappings":"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","sourcesContent":["import React    from 'react';\r\nimport styled   from 'styled-components';\r\n\r\nimport { Colors } from '../components/theme/Colors';\r\nimport Button from '../components/Button';\r\nimport Bubble from '../components/Bubble';\r\nimport Option from '../components/Option';\r\nimport OptionGroup from '../components/OptionGroup';\r\nimport Card from '../components/Card';\r\nimport VotingCard from '../components/VotingCard';\r\nimport firebase from '../firebase'\r\n\r\nconst PageWrapper = styled.div`\r\n  background-color: ${Colors.LightBlue};\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n`;\r\n\r\nclass PollScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {selectedBubble: null,\r\n                  submittedBubble: null,\r\n                  voted: false,\r\n                  last_vote: null,\r\n                  vote: null};\r\n    //\r\n    this.handleOptionClick = this.handleOptionClick.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleOptionClick = (id) => {\r\n    if (this.state.selectedBubble === id) {\r\n      this.setState({selectedBubble: null});\r\n    }\r\n    else { this.setState({selectedBubble: id}); }\r\n  }\r\n\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    var yes_votes\r\n    var no_votes\r\n    var abstain_votes\r\n    var docRef = firebase.firestore().collection(\"0\").doc(\"general-poll\")\r\n    \r\n    if (this.state.selectedBubble && !this.state.voted){\r\n      this.setState({voted: true,\r\n                     vote: this.state.selectedBubble});\r\n    }\r\n    else if (this.state.selectedBubble != this.state.submittedBubble){\r\n      this.setState({voted: true,\r\n                     vote: this.state.selectedBubble});\r\n    }\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n\r\n    const unselected = this.state.selectedBubble === null;\r\n    const submit = !this.state.voted;\r\n    const submitted = this.state.selectedBubble === this.state.vote;\r\n    const resubmit = this.state.selectedBubble != this.state.vote;\r\n\r\n    return (\r\n        <PageWrapper>\r\n          <VotingCard medium\r\n                      width={600}\r\n                      title={'Poll Title'}\r\n                      description={'Description of the poll... very informative.'}\r\n                      options={['Yes', 'No', 'Abstain']}\r\n                      handleOptionClick={this.handleOptionClick}\r\n                      selectedBubble={this.state.selectedBubble}\r\n                      handleSubmit={this.handleSubmit}\r\n                      unselected={unselected} submit={submit} resubmit={resubmit} submitted={submitted}/>\r\n        </PageWrapper>\r\n      );\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n// const PollScreen = (props) => {\r\n//\r\n//   return(\r\n//     <PageWrapper>\r\n//       <VotingCard medium\r\n//                   width={600}\r\n//                   title={'Poll Title'}\r\n//                   description={'Description of the poll... very informative.'}\r\n//                   options={['Option 1', 'Option 2', 'Option 3']}/>\r\n//     </PageWrapper>\r\n//   )\r\n//\r\n// };\r\n\r\nexport default PollScreen;\r\n"]},"metadata":{},"sourceType":"module"}