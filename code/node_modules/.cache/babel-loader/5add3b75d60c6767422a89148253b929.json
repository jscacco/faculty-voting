{"ast":null,"code":"var _jsxFileName = \"/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/components/RoomCodeForm.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ExtraPropTypes from 'react-extra-prop-types';\nimport { Colors } from './theme/Colors';\nimport Body from './theme/Body';\nimport history from '../history';\n\nclass RoomCodeForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: ''\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      value: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    alert('You are entering room: ' + this.state.value);\n    history.push('/RoomCode');\n    event.preventDefault();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }\n    }, \"Room Code:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default RoomCodeForm; // import React from \"react\";\n//\n// const TextInput = props => {\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         value={props.value}\n//         onChange={event => console.log(\"value changed!\")}\n//       />\n//       <p>// place for errors</p>\n//     </div>\n//   );\n// };\n//\n// export default TextInput;\n// import React, { useContext, useEffect } from \"react\";\n// import { FormCtx } from \"./Form\";\n//\n// const TextInput = props => {\n//   const { id } = props;\n//   const { setFields, addField, fields } = useContext(FormCtx);\n//   const field = fields[id] || {};\n//   const {\n//     name,\n//     rows,\n//     value,\n//     validate,\n//     placeholder,\n//     label = \"\",\n//     type = \"text\",\n//     events = {},\n//     classes = {}\n//   } =  field;\n//   const { onChange, ...restEvents } = events;\n//   const{ contClass, fieldClass, errorClass } = classes;\n//\n//   const handleChange = event => {\n//     try {\n//       setFields(event, field);\n//     } catch (error) {\n//       throw error;\n//     }\n//\n//     if (typeof onChange == \"function\")  {\n//       onChange({\n//         ...field,\n//         value: event.target.value\n//       });\n//     }\n//   };\n//\n//   useEffect(() => {\n//     addField({\n//       field: props,\n//       value\n//     });\n//   }, []);\n//\n//   const fieldProps = {\n//     ...restEvents,\n//     id,\n//     name,\n//     type,\n//     value,\n//     validate,\n//     placeholder,\n//     className: fieldClass,\n//     onChange: handleChange\n//   };\n//\n//   if (type === \"textarea\") {\n//     delete fieldProps.type;\n//     delete fieldProps.value;\n//\n//     fieldProps.defaultValue = value;\n//     fieldProps.rows = rows || 2;\n//   }\n//\n//   return field && field.value !== undefined ? (\n//     <div className={contClass}>\n//       {label}\n//       {type === \"textarea\" ? (\n//         <textarea {...fieldProps} />\n//       ) : (\n//         <input {...fieldProps} />\n//       )}\n//       <p className={errorClass}>// place for errors</p>\n//     </div>\n//   ) : (\n//     \"\"\n//   );\n// };\n//\n// export default TextInput;","map":{"version":3,"sources":["/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/components/RoomCodeForm.js"],"names":["React","styled","PropTypes","ExtraPropTypes","Colors","Body","history","RoomCodeForm","Component","constructor","props","state","value","handleChange","bind","handleSubmit","event","setState","target","alert","push","preventDefault","render"],"mappings":";AAAA,OAAOA,KAAP,MAA6B,OAA7B;AACA,OAAOC,MAAP,MAA6B,mBAA7B;AACA,OAAOC,SAAP,MAA6B,YAA7B;AACA,OAAOC,cAAP,MAA6B,wBAA7B;AAEA,SAASC,MAAT,QAA6B,gBAA7B;AACA,OAAOC,IAAP,MAA6B,cAA7B;AACA,OAAOC,OAAP,MAA6B,YAA7B;;AAEA,MAAMC,YAAN,SAA2BP,KAAK,CAACQ,SAAjC,CAA2C;AACzCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE;AAAR,KAAb;AAEA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAQ;AAClB,SAAKC,QAAL,CAAc;AAACL,MAAAA,KAAK,EAAEI,KAAK,CAACE,MAAN,CAAaN;AAArB,KAAd;AACD;;AAEDG,EAAAA,YAAY,CAACC,KAAD,EAAQ;AAClBG,IAAAA,KAAK,CAAC,4BAA4B,KAAKR,KAAL,CAAWC,KAAxC,CAAL;AACAN,IAAAA,OAAO,CAACc,IAAR,CAAa,WAAb;AACAJ,IAAAA,KAAK,CAACK,cAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAKP,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,KAArC;AAA4C,MAAA,QAAQ,EAAE,KAAKC,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAKE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,CADF;AASD;;AA7BwC;;AA+B3C,eAAeN,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React            from 'react';\nimport styled           from 'styled-components';\nimport PropTypes        from 'prop-types';\nimport ExtraPropTypes   from 'react-extra-prop-types';\n\nimport { Colors }       from './theme/Colors';\nimport Body             from './theme/Body';\nimport history          from '../history'\n\nclass RoomCodeForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {value: ''};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    alert('You are entering room: ' + this.state.value);\n    history.push('/RoomCode')\n    event.preventDefault();\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Room Code:\n          <input type=\"text\" value={this.state.value} onChange={this.handleChange} />\n        </label>\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    );\n  }\n}\nexport default RoomCodeForm;\n\n// import React from \"react\";\n//\n// const TextInput = props => {\n//   return (\n//     <div>\n//       <input\n//         type=\"text\"\n//         value={props.value}\n//         onChange={event => console.log(\"value changed!\")}\n//       />\n//       <p>// place for errors</p>\n//     </div>\n//   );\n// };\n//\n// export default TextInput;\n\n// import React, { useContext, useEffect } from \"react\";\n// import { FormCtx } from \"./Form\";\n//\n// const TextInput = props => {\n//   const { id } = props;\n//   const { setFields, addField, fields } = useContext(FormCtx);\n//   const field = fields[id] || {};\n//   const {\n//     name,\n//     rows,\n//     value,\n//     validate,\n//     placeholder,\n//     label = \"\",\n//     type = \"text\",\n//     events = {},\n//     classes = {}\n//   } =  field;\n//   const { onChange, ...restEvents } = events;\n//   const{ contClass, fieldClass, errorClass } = classes;\n//\n//   const handleChange = event => {\n//     try {\n//       setFields(event, field);\n//     } catch (error) {\n//       throw error;\n//     }\n//\n//     if (typeof onChange == \"function\")  {\n//       onChange({\n//         ...field,\n//         value: event.target.value\n//       });\n//     }\n//   };\n//\n//   useEffect(() => {\n//     addField({\n//       field: props,\n//       value\n//     });\n//   }, []);\n//\n//   const fieldProps = {\n//     ...restEvents,\n//     id,\n//     name,\n//     type,\n//     value,\n//     validate,\n//     placeholder,\n//     className: fieldClass,\n//     onChange: handleChange\n//   };\n//\n//   if (type === \"textarea\") {\n//     delete fieldProps.type;\n//     delete fieldProps.value;\n//\n//     fieldProps.defaultValue = value;\n//     fieldProps.rows = rows || 2;\n//   }\n//\n//   return field && field.value !== undefined ? (\n//     <div className={contClass}>\n//       {label}\n//       {type === \"textarea\" ? (\n//         <textarea {...fieldProps} />\n//       ) : (\n//         <input {...fieldProps} />\n//       )}\n//       <p className={errorClass}>// place for errors</p>\n//     </div>\n//   ) : (\n//     \"\"\n//   );\n// };\n//\n// export default TextInput;\n"]},"metadata":{},"sourceType":"module"}