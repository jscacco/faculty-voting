{"ast":null,"code":"var _jsxFileName = \"/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/components/RoomCodeForm.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ExtraPropTypes from 'react-extra-prop-types';\nimport { Colors } from './theme/Colors';\nimport Body from './theme/Body';\nimport Card from './Card';\nimport Button from './Button';\nconst propTypes = {\n  value: PropTypes.string,\n  handleChange: PropTypes.func,\n  handleSubmit: PropTypes.func\n};\nconst defaultProps = {\n  handleChange: undefined,\n  handleSubmit: undefined\n};\nconst ComponentWrapper = styled.div`\n  ${({\n  small\n}) => small && `padding-bottom: 16px`}\n  ${({\n  medium\n}) => medium && `padding-bottom: 20px`}\n  ${({\n  large\n}) => large && `padding-bottom: 26px`}\n`;\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\nconst TextInputWrapper = styled.div`\n\n`;\n\nconst renderButton = props => {\n  const {\n    small,\n    medium,\n    large\n  } = props;\n  let width;\n\n  if (large) {\n    width = 175;\n  } else if (small) {\n    width = 125;\n  } else {\n    width = 150;\n  }\n\n  return /*#__PURE__*/React.createElement(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    small: small,\n    medium: medium,\n    large: large,\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, \"SUBMIT\"));\n};\n\nconst renderInput = props => {\n  const {\n    label,\n    small,\n    medium,\n    large,\n    value,\n    handleChange,\n    handleSubmit\n  } = props;\n  return /*#__PURE__*/React.createElement(ComponentWrapper, {\n    small: small,\n    medium: medium,\n    large: large,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, \"Room Code:\", /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: value,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst RoomCodeForm = props => {\n  const {\n    width,\n    value,\n    handleChange,\n    handleSubmit\n  } = props;\n  return /*#__PURE__*/React.createElement(Card, {\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }, renderInput(props), renderButton(props));\n};\n\nRoomCodeForm.propTypes = propTypes;\nRoomCodeForm.defaultProps = defaultProps;\nexport default RoomCodeForm;","map":{"version":3,"sources":["/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/components/RoomCodeForm.js"],"names":["React","styled","PropTypes","ExtraPropTypes","Colors","Body","Card","Button","propTypes","value","string","handleChange","func","handleSubmit","defaultProps","undefined","ComponentWrapper","div","small","medium","large","ButtonWrapper","TextInputWrapper","renderButton","props","width","renderInput","label","RoomCodeForm"],"mappings":"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","sourcesContent":["import React            from 'react';\nimport styled           from 'styled-components';\nimport PropTypes        from 'prop-types';\nimport ExtraPropTypes   from 'react-extra-prop-types';\n\nimport { Colors }       from './theme/Colors';\nimport Body             from './theme/Body';\nimport Card             from './Card';\nimport Button           from './Button';\n\n\n\nconst propTypes = {\n  value: PropTypes.string,\n  handleChange: PropTypes.func,\n  handleSubmit: PropTypes.func,\n};\n\nconst defaultProps = {\n  handleChange: undefined,\n  handleSubmit: undefined\n};\n\nconst ComponentWrapper = styled.div`\n  ${({small}) => small && `padding-bottom: 16px`}\n  ${({medium}) => medium && `padding-bottom: 20px`}\n  ${({large}) => large && `padding-bottom: 26px`}\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst TextInputWrapper = styled.div`\n\n`;\n\nconst renderButton = (props) => {\n\n  const { small, medium, large } = props;\n\n  let width;\n\n  if (large) { width = 175}\n  else if ( small ) { width = 125 }\n  else { width = 150 }\n\n  return(\n    <ButtonWrapper>\n      <Button small={small} medium={medium} large={large} width={width}>\n        SUBMIT\n      </Button>\n    </ButtonWrapper>\n\n  )\n};\n\nconst renderInput = (props) => {\n  const { label, small, medium, large, value, handleChange, handleSubmit } = props;\n\n  return (\n    <ComponentWrapper small={small} medium={medium} large={large}>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Room Code:\n          <input type=\"text\" value={value} onChange={handleChange} />\n        </label>\n      </form>\n    </ComponentWrapper>\n  )\n};\n\nconst RoomCodeForm = (props) => {\n\n    const { width, value, handleChange, handleSubmit } = props;\n\n    return (\n      <Card width={width}>\n        {renderInput(props)}\n        {renderButton(props)}\n      </Card>\n\n\n    );\n\n};\n\nRoomCodeForm.propTypes = propTypes;\nRoomCodeForm.defaultProps = defaultProps;\n\nexport default RoomCodeForm;\n"]},"metadata":{},"sourceType":"module"}