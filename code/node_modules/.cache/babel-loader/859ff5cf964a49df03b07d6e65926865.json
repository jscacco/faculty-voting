{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dubin\\\\Github\\\\faculty-voting\\\\code\\\\src\\\\components\\\\Button.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ExtraPropTypes from 'react-extra-prop-types';\nimport { Colors } from './theme/Colors';\nimport Body from './theme/Body';\nconst propTypes = {\n  children: PropTypes.node,\n  width: PropTypes.int,\n  backgroundColor: ExtraPropTypes.color,\n  textColor: ExtraPropTypes.color,\n  large: PropTypes.bool,\n  medium: PropTypes.bool,\n  small: PropTypes.bool,\n  onClick: PropTypes.func\n};\nconst defaultProps = {\n  backgroundColor: Colors.Blue,\n  textColor: Colors.White,\n  onClick: undefined\n};\nconst BodyText = styled(Body)`\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n`;\nconst ButtonComponent = styled.button`\n  background: ${({\n  backgroundColor\n}) => backgroundColor};\n  position: relative;\n  display: inline-block;\n  cursor: pointer;\n  outline: none;\n  border: 0;\n  vertical-align: middle;\n  horizontal-align: middle;\n  text-decoration: none;\n  border-radius: 42px;\n  height: ${({\n  buttonHeight\n}) => buttonHeight};\n  padding-right: ${({\n  padding\n}) => padding};\n  padding-left: ${({\n  padding\n}) => padding};\n  ${({\n  width\n}) => width ? `width: ${width}px;` : ``}\n`;\n\nconst Button = props => {\n  const {\n    children,\n    width,\n    backgroundColor,\n    textColor,\n    extraLarge,\n    large,\n    medium,\n    small\n  } = props;\n  const buttonConfig = {\n    extraLarge: {\n      buttonHeight: `58px`,\n      padding: `28px`,\n      text: /*#__PURE__*/React.createElement(BodyText, {\n        extraLarge: true,\n        color: textColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 26\n        }\n      }, children)\n    },\n    large: {\n      buttonHeight: `48px`,\n      padding: `22px`,\n      text: /*#__PURE__*/React.createElement(BodyText, {\n        large: true,\n        color: textColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, children)\n    },\n    medium: {\n      buttonHeight: `40px`,\n      padding: `16px`,\n      text: /*#__PURE__*/React.createElement(BodyText, {\n        medium: true,\n        color: textColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, children)\n    },\n    small: {\n      buttonHeight: `32px`,\n      padding: `14px`,\n      text: /*#__PURE__*/React.createElement(BodyText, {\n        small: true,\n        color: textColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }, children)\n    }\n  };\n  let config;\n\n  if (extraLarge) {\n    config = buttonConfig.extraLarge;\n  } else if (large) {\n    config = buttonConfig.large;\n  } else if (small) {\n    config = buttonConfig.small;\n  } else {\n    config = buttonConfig.medium;\n  }\n\n  return /*#__PURE__*/React.createElement(ButtonComponent, Object.assign({\n    padding: config.padding,\n    buttonHeight: config.buttonHeight\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }\n  }), config.text);\n};\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","map":{"version":3,"sources":["C:/Users/dubin/Github/faculty-voting/code/src/components/Button.js"],"names":["React","styled","PropTypes","ExtraPropTypes","Colors","Body","propTypes","children","node","width","int","backgroundColor","color","textColor","large","bool","medium","small","onClick","func","defaultProps","Blue","White","undefined","BodyText","ButtonComponent","button","buttonHeight","padding","Button","props","extraLarge","buttonConfig","text","config"],"mappings":"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","sourcesContent":["import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from './theme/Colors';\r\nimport Body             from './theme/Body';\r\n\r\nconst propTypes = {\r\n  children: PropTypes.node,\r\n  width: PropTypes.int,\r\n  backgroundColor: ExtraPropTypes.color,\r\n  textColor: ExtraPropTypes.color,\r\n  large: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nconst defaultProps = {\r\n  backgroundColor: Colors.Blue,\r\n  textColor: Colors.White,\r\n  onClick: undefined\r\n\r\n};\r\n\r\nconst BodyText = styled(Body)`\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n`;\r\n\r\nconst ButtonComponent = styled.button`\r\n  background: ${({backgroundColor}) => backgroundColor};\r\n  position: relative;\r\n  display: inline-block;\r\n  cursor: pointer;\r\n  outline: none;\r\n  border: 0;\r\n  vertical-align: middle;\r\n  horizontal-align: middle;\r\n  text-decoration: none;\r\n  border-radius: 42px;\r\n  height: ${({buttonHeight}) => buttonHeight};\r\n  padding-right: ${({padding}) => padding};\r\n  padding-left: ${({padding}) => padding};\r\n  ${({width}) => width ? `width: ${width}px;` : ``}\r\n`;\r\n\r\nconst Button = (props) => {\r\n  const { children, width, backgroundColor,\r\n          textColor, extraLarge, large, medium, small } = props;\r\n\r\n  const buttonConfig = {\r\n    extraLarge: { buttonHeight: `58px`,\r\n                  padding: `28px`,\r\n                  text: (<BodyText extraLarge color={textColor}>\r\n                           {children}\r\n                         </BodyText>)\r\n                },\r\n    large: { buttonHeight: `48px`,\r\n             padding: `22px`,\r\n             text: (<BodyText large color={textColor}>\r\n                      {children}\r\n                    </BodyText>)\r\n            },\r\n    medium: { buttonHeight: `40px`,\r\n              padding: `16px`,\r\n             text: (<BodyText medium color={textColor}>\r\n                      {children}\r\n                    </BodyText>)\r\n            },\r\n    small: { buttonHeight: `32px`,\r\n             padding: `14px`,\r\n             text: (<BodyText small color={textColor}>\r\n                      {children}\r\n                    </BodyText>)\r\n            },\r\n  };\r\n\r\n  let config;\r\n\r\n  if (extraLarge) { config = buttonConfig.extraLarge }\r\n  else if (large) { config = buttonConfig.large }\r\n  else if (small) { config = buttonConfig.small }\r\n  else { config = buttonConfig.medium }\r\n\r\n  return(\r\n    <ButtonComponent\r\n                     padding={config.padding}\r\n                     buttonHeight={config.buttonHeight}\r\n                     {...props}>\r\n      {config.text}\r\n    </ButtonComponent>\r\n  )\r\n}\r\n\r\nButton.propTypes = propTypes;\r\nButton.defaultProps = defaultProps;\r\n\r\nexport default Button;\r\n"]},"metadata":{},"sourceType":"module"}