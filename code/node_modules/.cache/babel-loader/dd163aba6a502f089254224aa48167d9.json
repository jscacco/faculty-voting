{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dubin\\\\Github\\\\faculty-voting\\\\code\\\\src\\\\components\\\\buttons\\\\CheckBox.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ExtraPropTypes from 'react-extra-prop-types';\nimport { Colors } from '../theme/Colors';\nimport Icon from '../theme/Icon';\nconst propTypes = {\n  clicked: PropTypes.bool,\n  color: ExtraPropTypes.color,\n  extraLarge: PropTypes.bool,\n  large: PropTypes.bool,\n  medium: PropTypes.bool,\n  small: PropTypes.bool,\n  extraSmall: PropTypes.bool\n};\nconst defaultProps = {\n  onClick: undefined,\n  clicked: false,\n  color: Colors.Black\n};\nconst sizeConfig = {\n  extraLarge: '2em',\n  large: '1.75em',\n  medium: '1.5em',\n  small: '1em',\n  extraSmall: '0.75em'\n};\n\nconst renderClicked = props => /*#__PURE__*/React.createElement(Icon, {\n  onClick: props.onClick,\n  type: 'checkbox',\n  size: props.size,\n  color: props.color,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }\n});\n\nconst renderUnClicked = props => /*#__PURE__*/React.createElement(Icon, {\n  onClick: props.onClick,\n  type: 'box',\n  size: props.size,\n  color: props.color,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }\n});\n\nconst CheckBox = props => {\n  const {\n    extraLarge,\n    large,\n    medium,\n    small,\n    extraSmall,\n    clicked\n  } = props;\n  let size;\n\n  if (extraLarge) {\n    size = sizeConfig.extraLarge;\n  } else if (large) {\n    size = sizeConfig.large;\n  } else if (small) {\n    size = sizeConfig.small;\n  } else if (extraSmall) {\n    size = size.extraSmall;\n  } else {\n    size = sizeConfig.medium;\n  }\n\n  return clicked ? renderClicked({ ...props,\n    size: size\n  }) : renderUnClicked({ ...props,\n    size: size\n  });\n};\n\nCheckBox.propTypes = propTypes;\nCheckBox.defaultProps = defaultProps;\nexport default CheckBox;","map":{"version":3,"sources":["C:/Users/dubin/Github/faculty-voting/code/src/components/buttons/CheckBox.js"],"names":["React","PropTypes","ExtraPropTypes","Colors","Icon","propTypes","clicked","bool","color","extraLarge","large","medium","small","extraSmall","defaultProps","onClick","undefined","Black","sizeConfig","renderClicked","props","size","renderUnClicked","CheckBox"],"mappings":";AAAA,OAAOA,KAAP,MAA6B,OAA7B;AACA,OAAOC,SAAP,MAA6B,YAA7B;AACA,OAAOC,cAAP,MAA6B,wBAA7B;AAEA,SAASC,MAAT,QAA6B,iBAA7B;AACA,OAAOC,IAAP,MAAuB,eAAvB;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAEL,SAAS,CAACM,IADH;AAGhBC,EAAAA,KAAK,EAAEN,cAAc,CAACM,KAHN;AAKhBC,EAAAA,UAAU,EAAER,SAAS,CAACM,IALN;AAMhBG,EAAAA,KAAK,EAAET,SAAS,CAACM,IAND;AAOhBI,EAAAA,MAAM,EAAEV,SAAS,CAACM,IAPF;AAQhBK,EAAAA,KAAK,EAAEX,SAAS,CAACM,IARD;AAShBM,EAAAA,UAAU,EAAEZ,SAAS,CAACM;AATN,CAAlB;AAYA,MAAMO,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAEC,SADU;AAEnBV,EAAAA,OAAO,EAAE,KAFU;AAGnBE,EAAAA,KAAK,EAAEL,MAAM,CAACc;AAHK,CAArB;AAMA,MAAMC,UAAU,GAAG;AACjBT,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,KAAK,EAAE,QAFU;AAGjBC,EAAAA,MAAM,EAAE,OAHS;AAIjBC,EAAAA,KAAK,EAAE,KAJU;AAKjBC,EAAAA,UAAU,EAAE;AALK,CAAnB;;AAQA,MAAMM,aAAa,GAAKC,KAAF,iBACpB,oBAAC,IAAD;AAAM,EAAA,OAAO,EAAEA,KAAK,CAACL,OAArB;AACM,EAAA,IAAI,EAAE,UADZ;AAEM,EAAA,IAAI,EAAEK,KAAK,CAACC,IAFlB;AAGM,EAAA,KAAK,EAAED,KAAK,CAACZ,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAOA,MAAMc,eAAe,GAAKF,KAAF,iBACtB,oBAAC,IAAD;AAAM,EAAA,OAAO,EAAEA,KAAK,CAACL,OAArB;AACM,EAAA,IAAI,EAAE,KADZ;AAEM,EAAA,IAAI,EAAEK,KAAK,CAACC,IAFlB;AAGM,EAAA,KAAK,EAAED,KAAK,CAACZ,KAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF;;AAOA,MAAMe,QAAQ,GAAKH,KAAF,IAAa;AAE5B,QAAM;AAAEX,IAAAA,UAAF;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA,KAA7B;AAAoCC,IAAAA,UAApC;AAAgDP,IAAAA;AAAhD,MAA4Dc,KAAlE;AAEA,MAAIC,IAAJ;;AAEA,MAAIZ,UAAJ,EAAgB;AAAEY,IAAAA,IAAI,GAAGH,UAAU,CAACT,UAAlB;AAA8B,GAAhD,MACK,IAAIC,KAAJ,EAAW;AAAEW,IAAAA,IAAI,GAAGH,UAAU,CAACR,KAAlB;AAAyB,GAAtC,MACA,IAAIE,KAAJ,EAAW;AAAES,IAAAA,IAAI,GAAGH,UAAU,CAACN,KAAlB;AAAyB,GAAtC,MACA,IAAIC,UAAJ,EAAgB;AAAEQ,IAAAA,IAAI,GAAGA,IAAI,CAACR,UAAZ;AAAwB,GAA1C,MACA;AAAEQ,IAAAA,IAAI,GAAGH,UAAU,CAACP,MAAlB;AAA0B;;AAEjC,SAAOL,OAAO,GAAGa,aAAa,CAAC,EAAE,GAAGC,KAAL;AAAYC,IAAAA,IAAI,EAAEA;AAAlB,GAAD,CAAhB,GAA6CC,eAAe,CAAC,EAAE,GAAGF,KAAL;AAAYC,IAAAA,IAAI,EAAEA;AAAlB,GAAD,CAA1E;AAED,CAdD;;AAgBAE,QAAQ,CAAClB,SAAT,GAAqBA,SAArB;AACAkB,QAAQ,CAACT,YAAT,GAAwBA,YAAxB;AAEA,eAAeS,QAAf","sourcesContent":["import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Icon       from '../theme/Icon';\r\n\r\nconst propTypes = {\r\n  clicked: PropTypes.bool,\r\n\r\n  color: ExtraPropTypes.color,\r\n\r\n  extraLarge: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  extraSmall: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  onClick: undefined,\r\n  clicked: false,\r\n  color: Colors.Black,\r\n};\r\n\r\nconst sizeConfig = {\r\n  extraLarge: '2em',\r\n  large: '1.75em',\r\n  medium: '1.5em' ,\r\n  small: '1em',\r\n  extraSmall: '0.75em'\r\n};\r\n\r\nconst renderClicked = ( props ) => (\r\n  <Icon onClick={props.onClick}\r\n        type={'checkbox'}\r\n        size={props.size}\r\n        color={props.color} />\r\n);\r\n\r\nconst renderUnClicked = ( props ) => (\r\n  <Icon onClick={props.onClick}\r\n        type={'box'}\r\n        size={props.size}\r\n        color={props.color} />\r\n);\r\n\r\nconst CheckBox = ( props ) => {\r\n\r\n  const { extraLarge, large, medium, small, extraSmall, clicked } = props;\r\n\r\n  let size;\r\n\r\n  if (extraLarge) { size = sizeConfig.extraLarge }\r\n  else if (large) { size = sizeConfig.large }\r\n  else if (small) { size = sizeConfig.small }\r\n  else if (extraSmall) { size = size.extraSmall }\r\n  else { size = sizeConfig.medium }\r\n\r\n  return(clicked ? renderClicked({ ...props, size: size }) : renderUnClicked({ ...props, size: size }));\r\n\r\n}\r\n\r\nCheckBox.propTypes = propTypes;\r\nCheckBox.defaultProps = defaultProps;\r\n\r\nexport default CheckBox;\r\n"]},"metadata":{},"sourceType":"module"}