{"ast":null,"code":"var _jsxFileName = \"/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/components/RoomCodeForm.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ExtraPropTypes from 'react-extra-prop-types';\nimport { Colors } from './theme/Colors';\nimport Body from './theme/Body';\nimport Card from './Card';\nimport Button from './Button';\nimport { Jumbo } from './theme/Jumbo';\nconst propTypes = {\n  value: PropTypes.string,\n  handleChange: PropTypes.func,\n  handleSubmit: PropTypes.func\n};\nconst defaultProps = {\n  handleChange: undefined,\n  handleSubmit: undefined\n};\nconst ComponentWrapper = styled.div`\n  ${({\n  small\n}) => small && `padding-bottom: 16px`}\n  ${({\n  medium\n}) => medium && `padding-bottom: 20px`}\n  ${({\n  large\n}) => large && `padding-bottom: 26px`}\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\nconst SubComponentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-context: center;\n`;\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\nconst TextInputWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  text-align: center;\n`;\nconst TitleWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst renderTitle = props => {\n  const {\n    title,\n    small,\n    medium,\n    large\n  } = props;\n  return /*#__PURE__*/React.createElement(TitleWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Jumbo, {\n    extraSmall: true,\n    color: Colors.Blue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nconst renderInput = props => {\n  const {\n    label,\n    small,\n    medium,\n    large,\n    value,\n    handleChange,\n    handleSubmit\n  } = props;\n  return /*#__PURE__*/React.createElement(TextInputWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: value,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst renderButton = props => {\n  const {\n    small,\n    medium,\n    large,\n    handleSubmit\n  } = props;\n  let width;\n\n  if (large) {\n    width = 175;\n  } else if (small) {\n    width = 125;\n  } else {\n    width = 150;\n  }\n\n  return /*#__PURE__*/React.createElement(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    small: small,\n    medium: medium,\n    large: large,\n    width: width,\n    onClick: () => handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \"SUBMIT\"));\n};\n\nconst RoomCodeForm = props => {\n  const {\n    title,\n    width,\n    value,\n    handleChange,\n    handleSubmit\n  } = props;\n  return /*#__PURE__*/React.createElement(ComponentWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SubComponentWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  }, renderTitle(props), renderInput(props), renderButton(props))));\n};\n\nRoomCodeForm.propTypes = propTypes;\nRoomCodeForm.defaultProps = defaultProps;\nexport default RoomCodeForm;","map":{"version":3,"sources":["/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/components/RoomCodeForm.js"],"names":["React","styled","PropTypes","ExtraPropTypes","Colors","Body","Card","Button","Jumbo","propTypes","value","string","handleChange","func","handleSubmit","defaultProps","undefined","ComponentWrapper","div","small","medium","large","SubComponentWrapper","ButtonWrapper","TextInputWrapper","TitleWrapper","renderTitle","props","title","Blue","renderInput","label","renderButton","width","RoomCodeForm"],"mappings":"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","sourcesContent":["import React            from 'react';\nimport styled           from 'styled-components';\nimport PropTypes        from 'prop-types';\nimport ExtraPropTypes   from 'react-extra-prop-types';\n\nimport { Colors }       from './theme/Colors';\nimport Body             from './theme/Body';\nimport Card             from './Card';\nimport Button           from './Button';\nimport {Jumbo}             from './theme/Jumbo';\n\n\n\nconst propTypes = {\n  value: PropTypes.string,\n  handleChange: PropTypes.func,\n  handleSubmit: PropTypes.func,\n};\n\nconst defaultProps = {\n  handleChange: undefined,\n  handleSubmit: undefined\n};\n\nconst ComponentWrapper = styled.div`\n  ${({small}) => small && `padding-bottom: 16px`}\n  ${({medium}) => medium && `padding-bottom: 20px`}\n  ${({large}) => large && `padding-bottom: 26px`}\n\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst SubComponentWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-context: center;\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst TextInputWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst TitleWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  text-align: center;\n`;\n\nconst renderTitle = (props) => {\n\n  const { title, small, medium, large } = props;\n\n  return (\n    <TitleWrapper>\n      <Jumbo extraSmall color={Colors.Blue}>\n        {title}\n      </Jumbo>\n    </TitleWrapper>\n  )\n};\n\nconst renderInput = (props) => {\n  const { label, small, medium, large, value, handleChange, handleSubmit } = props;\n\n  return (\n    <TextInputWrapper>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" value={value} onChange={handleChange} />\n        <input type=\"submit\" value=\"Submit\" />\n      </form>\n    </TextInputWrapper>\n  )\n};\n\nconst renderButton = (props) => {\n\n  const { small, medium, large, handleSubmit } = props;\n\n  let width;\n\n  if (large) { width = 175}\n  else if ( small ) { width = 125 }\n  else { width = 150 }\n\n  return(\n    <ButtonWrapper>\n      <Button small={small} medium={medium} large={large} width={width} onClick={() => handleSubmit}>\n        SUBMIT\n      </Button>\n    </ButtonWrapper>\n\n  )\n};\n\nconst RoomCodeForm = (props) => {\n\n    const { title, width, value, handleChange, handleSubmit } = props;\n\n    return (\n      <ComponentWrapper>\n        <SubComponentWrapper>\n          <Card width={width}>\n            {renderTitle(props)}\n            {renderInput(props)}\n            {renderButton(props)}\n          </Card>\n        </SubComponentWrapper>\n      </ComponentWrapper>\n\n\n    );\n\n};\n\nRoomCodeForm.propTypes = propTypes;\nRoomCodeForm.defaultProps = defaultProps;\n\nexport default RoomCodeForm;\n"]},"metadata":{},"sourceType":"module"}