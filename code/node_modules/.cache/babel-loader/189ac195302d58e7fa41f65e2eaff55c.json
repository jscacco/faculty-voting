{"ast":null,"code":"import PollItem from './components/PollItem';\nimport firebase from './firebase';\nimport { code } from './pages/RoomCode'; //               (roomCode, pollTitle, \"yes\", 0)\n\nfunction sendFire(collectionName, docName, fieldName, fieldValue) {\n  firebase.firestore().collection(collectionName).doc(docName).set({\n    name: fieldName,\n    value: fieldValue\n  });\n} //const addPollFire = function addPollFire(collectionName, docName, option, fieldName, fieldValue) {\n//    firebase\n//        .firestore()\n//        .collection(collectionName)\n//        .doc(docName)\n//        .collection(\"results\")\n//        .doc(option)\n//        .set({\n//            name: fieldName,\n//            value: fieldValue});\n//}\n\n\nconst addPollFire = function addPollFire(collectionName, poll) {\n  firebase.firestore().collection(collectionName).doc(poll.title).set({\n    description: poll.description,\n    showResult: poll.showResults,\n    order: poll.order,\n    status: poll.status,\n    type: poll.type\n  });\n  firebase.firestore().collection(collectionName).doc(poll.title).collection(\"results\").doc(\"Option\" + poll.order.toString()).set(poll.optionMap);\n};\n\nfunction getPollInfo(collectionName, pollTitle) {\n  var poll = new PollItem();\n  poll.setTitle = pollTitle;\n  poll.setDescription = \"\";\n  poll.setShowResults = true;\n  poll.setOrder = 0;\n} // firebase.firestore().collection(code).doc(\"general-poll\");\n// docRef.get().then(snap =>{\n//    console.log(snap);\n//    if (this.state.vote == 0) {\n//      docRef.update({\n//       yes: Number(snap.data()['yes'].toString()) + 1\n//     });\n//     }\n\n\nexport default addPollFire;","map":{"version":3,"sources":["C:/Users/dubin/Github/faculty-voting/code/src/fire-funcs.js"],"names":["PollItem","firebase","code","sendFire","collectionName","docName","fieldName","fieldValue","firestore","collection","doc","set","name","value","addPollFire","poll","title","description","showResult","showResults","order","status","type","toString","optionMap","getPollInfo","pollTitle","setTitle","setDescription","setShowResults","setOrder"],"mappings":"AAAA,OAAOA,QAAP,MAAiC,uBAAjC;AACA,OAAOC,QAAP,MAAiC,YAAjC;AACA,SAAQC,IAAR,QAAiC,kBAAjC,C,CAGA;;AACA,SAASC,QAAT,CAAkBC,cAAlB,EAAkCC,OAAlC,EAA2CC,SAA3C,EAAsDC,UAAtD,EAAkE;AAC9DN,EAAAA,QAAQ,CACHO,SADL,GAEKC,UAFL,CAEgBL,cAFhB,EAGKM,GAHL,CAGSL,OAHT,EAIKM,GAJL,CAIS;AACDC,IAAAA,IAAI,EAAEN,SADL;AAEDO,IAAAA,KAAK,EAAEN;AAFN,GAJT;AAOH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMO,WAAW,GAAG,SAASA,WAAT,CAAqBV,cAArB,EAAqCW,IAArC,EAA2C;AAC3Dd,EAAAA,QAAQ,CACLO,SADH,GAEGC,UAFH,CAEcL,cAFd,EAGGM,GAHH,CAGOK,IAAI,CAACC,KAHZ,EAIGL,GAJH,CAIO;AACHM,IAAAA,WAAW,EAAEF,IAAI,CAACE,WADf;AAEHC,IAAAA,UAAU,EAAEH,IAAI,CAACI,WAFd;AAGHC,IAAAA,KAAK,EAAEL,IAAI,CAACK,KAHT;AAIHC,IAAAA,MAAM,EAAEN,IAAI,CAACM,MAJV;AAKHC,IAAAA,IAAI,EAAEP,IAAI,CAACO;AALR,GAJP;AAWArB,EAAAA,QAAQ,CACHO,SADL,GAEKC,UAFL,CAEgBL,cAFhB,EAGKM,GAHL,CAGSK,IAAI,CAACC,KAHd,EAIKP,UAJL,CAIgB,SAJhB,EAKKC,GALL,CAKS,WAAWK,IAAI,CAACK,KAAL,CAAWG,QAAX,EALpB,EAMKZ,GANL,CAMSI,IAAI,CAACS,SANd;AAOH,CAnBD;;AAqBA,SAASC,WAAT,CAAqBrB,cAArB,EAAqCsB,SAArC,EAAgD;AAC5C,MAAIX,IAAI,GAAG,IAAIf,QAAJ,EAAX;AAEAe,EAAAA,IAAI,CAACY,QAAL,GAAgBD,SAAhB;AACAX,EAAAA,IAAI,CAACa,cAAL,GAAsB,EAAtB;AACAb,EAAAA,IAAI,CAACc,cAAL,GAAsB,IAAtB;AACAd,EAAAA,IAAI,CAACe,QAAL,GAAgB,CAAhB;AACH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAehB,WAAf","sourcesContent":["import PollItem             from './components/PollItem';\r\nimport firebase             from './firebase';\r\nimport {code}               from './pages/RoomCode';\r\n\r\n\r\n//               (roomCode, pollTitle, \"yes\", 0)\r\nfunction sendFire(collectionName, docName, fieldName, fieldValue) {\r\n    firebase\r\n        .firestore()\r\n        .collection(collectionName)\r\n        .doc(docName)\r\n        .set({\r\n            name: fieldName,\r\n            value: fieldValue});\r\n}\r\n\r\n//const addPollFire = function addPollFire(collectionName, docName, option, fieldName, fieldValue) {\r\n//    firebase\r\n//        .firestore()\r\n//        .collection(collectionName)\r\n//        .doc(docName)\r\n//        .collection(\"results\")\r\n//        .doc(option)\r\n//        .set({\r\n//            name: fieldName,\r\n//            value: fieldValue});\r\n//}\r\n\r\nconst addPollFire = function addPollFire(collectionName, poll) {\r\n    firebase\r\n      .firestore()\r\n      .collection(collectionName)\r\n      .doc(poll.title)\r\n      .set({\r\n        description: poll.description,\r\n        showResult: poll.showResults,\r\n        order: poll.order,\r\n        status: poll.status,\r\n        type: poll.type});\r\n\r\n    firebase\r\n        .firestore()\r\n        .collection(collectionName)\r\n        .doc(poll.title)\r\n        .collection(\"results\")\r\n        .doc(\"Option\" + poll.order.toString())\r\n        .set(poll.optionMap);\r\n}\r\n\r\nfunction getPollInfo(collectionName, pollTitle) {\r\n    var poll = new PollItem();\r\n\r\n    poll.setTitle = pollTitle;\r\n    poll.setDescription = \"\";\r\n    poll.setShowResults = true;\r\n    poll.setOrder = 0;\r\n}\r\n\r\n// firebase.firestore().collection(code).doc(\"general-poll\");\r\n// docRef.get().then(snap =>{\r\n//    console.log(snap);\r\n//    if (this.state.vote == 0) {\r\n//      docRef.update({\r\n//       yes: Number(snap.data()['yes'].toString()) + 1\r\n//     });\r\n//     }\r\n\r\nexport default addPollFire;"]},"metadata":{},"sourceType":"module"}