{"ast":null,"code":"var _jsxFileName = \"/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/components/VotingCard.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ExtraPropTypes from 'react-extra-prop-types';\nimport { Colors } from './theme/Colors';\nimport Body from './theme/Body';\nimport { Jumbo } from './theme/Jumbo';\nimport OptionGroup from './OptionGroup';\nimport Card from './Card';\nimport Button from './Button';\nconst ComponentWrapper = styled.div`\n  ${({\n  small\n}) => small && `padding-bottom: 20px`}\n  ${({\n  medium\n}) => medium && `padding-bottom: 26px`}\n  ${({\n  large\n}) => large && `padding-bottom: 32px`}\n`;\nconst CenterWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst renderTitle = props => {\n  const {\n    title,\n    small,\n    medium,\n    large\n  } = props;\n  return /*#__PURE__*/React.createElement(ComponentWrapper, {\n    small: small,\n    medium: medium,\n    large: large,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Jumbo, {\n    threeExtraSmall: small,\n    twoExtraSmall: medium,\n    extraSmall: large,\n    color: Colors.Blue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nconst renderDescription = props => {\n  const {\n    description,\n    small,\n    medium,\n    large\n  } = props;\n  return /*#__PURE__*/React.createElement(ComponentWrapper, {\n    small: small,\n    medium: medium,\n    large: large,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Body, {\n    small: small,\n    medium: medium,\n    large: large,\n    color: Colors.Black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, description));\n};\n\nconst renderButton = props => {\n  const {\n    small,\n    medium,\n    large,\n    handleSubmit,\n    unselected,\n    submit,\n    submitted,\n    resubmit\n  } = props;\n  let width;\n\n  if (large) {\n    width = 175;\n  } else if (small) {\n    width = 125;\n  } else {\n    width = 150;\n  }\n\n  let text;\n  let color;\n\n  if (submit) {\n    text = 'SUBMIT';\n    color = Colors.Yellow;\n  } else if (submitted) {\n    text = 'SUBMITTED';\n    color = Colors.Green;\n  } else if (resubmit) {\n    text = 'RESUBMIT';\n    color = Colors.Yellow;\n  } else {\n    text = 'ERROR';\n    color = Colors.Red;\n  }\n\n  ;\n\n  if (unselected) {\n    color = Colors.Red;\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(ComponentWrapper, {\n    small: small,\n    medium: medium,\n    large: large,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CenterWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    disabled: unselected || submitted,\n    small: small,\n    medium: medium,\n    large: large,\n    width: width,\n    backgroundColor: color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, text)));\n};\n\nconst renderOptions = props => {\n  const {\n    handleOptionClick,\n    selectedBubble,\n    options,\n    small,\n    medium,\n    large\n  } = props;\n  return /*#__PURE__*/React.createElement(ComponentWrapper, {\n    small: small,\n    medium: medium,\n    large: large,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(OptionGroup, {\n    handleOptionClick: handleOptionClick,\n    selectedBubble: selectedBubble,\n    small: small,\n    medium: medium,\n    large: large,\n    options: options,\n    backgroundColor: Colors.Blue,\n    borderColor: Colors.Blue,\n    textColor: Colors.black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst renderText = props => {\n  const {\n    small,\n    medium,\n    large,\n    handleSubmit,\n    unselected,\n    submit,\n    submitted,\n    resubmit\n  } = props;\n  let text;\n\n  if (unselected) {\n    text = 'Please make a selection.';\n  } else if (submit) {\n    text = 'Please press submit to record your response.';\n  } else if (submitted) {\n    text = 'Your response has been recorded.';\n  } else if (resubmit) {\n    text = 'Press submit to resubmit your response.';\n  } else {\n    text = 'There has been an error.';\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(CenterWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Body, {\n    extraSmall: small,\n    small: medium,\n    medium: large,\n    color: Colors.Black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, text));\n};\n\nconst VotingCard = props => {\n  const {\n    width\n  } = props;\n  return /*#__PURE__*/React.createElement(Card, {\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 5\n    }\n  }, renderTitle(props), renderDescription(props), renderOptions(props), renderButton(props), renderText(props));\n};\n\nexport default VotingCard;","map":{"version":3,"sources":["/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/components/VotingCard.js"],"names":["React","styled","PropTypes","ExtraPropTypes","Colors","Body","Jumbo","OptionGroup","Card","Button","ComponentWrapper","div","small","medium","large","CenterWrapper","renderTitle","props","title","Blue","renderDescription","description","Black","renderButton","handleSubmit","unselected","submit","submitted","resubmit","width","text","color","Yellow","Green","Red","renderOptions","handleOptionClick","selectedBubble","options","black","renderText","VotingCard"],"mappings":"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","sourcesContent":["import React            from 'react';\nimport styled           from 'styled-components';\nimport PropTypes        from 'prop-types';\nimport ExtraPropTypes   from 'react-extra-prop-types';\n\nimport { Colors }       from './theme/Colors';\nimport Body             from './theme/Body';\nimport {Jumbo}             from './theme/Jumbo';\n\nimport OptionGroup      from './OptionGroup';\nimport Card             from './Card';\nimport Button           from './Button';\n\nconst ComponentWrapper = styled.div`\n  ${({small}) => small && `padding-bottom: 20px`}\n  ${({medium}) => medium && `padding-bottom: 26px`}\n  ${({large}) => large && `padding-bottom: 32px`}\n`;\n\nconst CenterWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst renderTitle = (props) => {\n\n  const { title, small, medium, large } = props;\n\n  return (\n    <ComponentWrapper small={small} medium={medium} large={large}>\n      <Jumbo threeExtraSmall={small} twoExtraSmall={medium}\n             extraSmall={large} color={Colors.Blue}>\n        {title}\n      </Jumbo>\n    </ComponentWrapper>\n  )\n};\n\nconst renderDescription = (props) => {\n\n  const { description, small, medium, large } = props;\n\n  return (\n    <ComponentWrapper small={small} medium={medium} large={large}>\n      <Body small={small} medium={medium}\n            large={large} color={Colors.Black}>\n        {description}\n      </Body>\n    </ComponentWrapper>\n  )\n};\n\nconst renderButton = (props) => {\n\n  const { small, medium, large,\n          handleSubmit, unselected, submit, submitted, resubmit } = props;\n\n  let width;\n\n  if (large) { width = 175}\n  else if ( small ) { width = 125 }\n  else { width = 150 }\n\n  let text;\n  let color;\n  if (submit) {\n    text = 'SUBMIT';\n    color = Colors.Yellow;\n  }\n  else if (submitted) {\n    text='SUBMITTED';\n    color = Colors.Green;\n  }\n  else if (resubmit) {\n    text = 'RESUBMIT';\n    color = Colors.Yellow;\n  }\n  else { text='ERROR';\n         color = Colors.Red;};\n\n  if (unselected) { color = Colors.Red };\n\n  return(\n    <ComponentWrapper small={small} medium={medium} large={large}>\n      <CenterWrapper>\n        <Button onClick={handleSubmit} disabled={unselected || submitted}\n                small={small} medium={medium} large={large}\n                width={width} backgroundColor={color}>\n          {text}\n        </Button>\n      </CenterWrapper>\n    </ComponentWrapper>\n  )\n};\n\nconst renderOptions = (props) => {\n\n  const { handleOptionClick, selectedBubble, options, small, medium, large } = props;\n\n  return (\n    <ComponentWrapper small={small} medium={medium} large={large}>\n      <OptionGroup handleOptionClick={handleOptionClick} selectedBubble={selectedBubble}\n                   small={small} medium={medium} large={large}\n                   options={options} backgroundColor={Colors.Blue} borderColor={Colors.Blue}\n                   textColor={Colors.black}/>\n    </ComponentWrapper>\n  )\n};\n\nconst renderText = (props) => {\n\n  const { small, medium, large,\n          handleSubmit, unselected, submit, submitted, resubmit } = props;\n\n  let text;\n  if (unselected) {\n    text = 'Please make a selection.'\n  }\n  else if (submit) {\n    text = 'Please press submit to record your response.';\n  }\n  else if (submitted) {\n    text='Your response has been recorded.';\n  }\n  else if (resubmit) {\n    text = 'Press submit to resubmit your response.';\n  }\n  else { text='There has been an error.';};\n\n  return(\n    <CenterWrapper>\n      <Body extraSmall={small} small={medium} medium={large} color={Colors.Black}>\n        {text}\n      </Body>\n    </CenterWrapper>\n  )\n}\n\nconst VotingCard = (props) => {\n\n  const { width } = props;\n\n  return (\n    <Card width={width}>\n      {renderTitle(props)}\n      {renderDescription(props)}\n      {renderOptions(props)}\n      {renderButton(props)}\n      {renderText(props)}\n    </Card>\n  )\n\n};\n\nexport default VotingCard;\n"]},"metadata":{},"sourceType":"module"}