{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dubin\\\\Github\\\\faculty-voting\\\\code\\\\src\\\\pages\\\\Main.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Colors } from '../components/theme/Colors';\nimport Button from '../components/Button';\nimport Bubble from '../components/Bubble';\nimport Option from '../components/Option';\nimport OptionGroup from '../components/OptionGroup';\nimport Card from '../components/Card';\nimport VotingCard from '../components/VotingCard';\nimport firebase from '../firebase';\nconst PageWrapper = styled.div`\n  background-color: ${Colors.LightBlue};\n  position: absolute;\n  right: 0;\n  left: 0;\n  top: 0;\n  bottom: 0;\n`;\n\nclass MainScreen extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleOptionClick = id => {\n      if (this.state.selectedBubble === id) {\n        this.setState({\n          selectedBubble: null\n        });\n      } else {\n        this.setState({\n          selectedBubble: id\n        });\n      }\n    };\n\n    this.handleSubmit = event => {\n      var yes_votes;\n      var no_votes;\n      var abstain_votes;\n      var docRef = firebase.firestore().collection(\"0\").doc(\"general-poll\");\n      docRef.get().then(function (querySnapshot) {\n        querySnapshot.forEach(function (doc) {\n          yes_votes = doc.data().yes;\n          no_votes = doc.data().no;\n          abstain_votes = doc.data().abstain;\n        });\n      });\n      event.preventDefault();\n\n      if (this.state.selectedBubble == 0) {\n        alert('You voted: Yes!');\n        docRef.update({\n          yes: yes_votes + 1\n        });\n      } else if (this.state.selectedBubble == 1) {\n        alert('You voted: No!');\n        docRef.update({\n          no: docRef.get() + 1\n        });\n      } else if (this.state.selectedBubble == 2) {\n        alert('You voted: Abstain!');\n        docRef.update({\n          abstain: docRef.get() + 1\n        });\n      }\n    };\n\n    this.state = {\n      selectedBubble: null\n    }; //\n\n    this.handleOptionClick = this.handleOptionClick.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(PageWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(VotingCard, {\n      medium: true,\n      width: 600,\n      title: 'Poll Title',\n      description: 'Description of the poll... very informative.',\n      options: ['Yes', 'No', 'Abstain'],\n      handleOptionClick: this.handleOptionClick,\n      handleSubmit: this.handleSubmit,\n      selectedBubble: this.state.selectedBubble,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\n; // const MainScreen = (props) => {\n//\n//   return(\n//     <PageWrapper>\n//       <VotingCard medium\n//                   width={600}\n//                   title={'Poll Title'}\n//                   description={'Description of the poll... very informative.'}\n//                   options={['Option 1', 'Option 2', 'Option 3']}/>\n//     </PageWrapper>\n//   )\n//\n// };\n\nexport default MainScreen;","map":{"version":3,"sources":["C:/Users/dubin/Github/faculty-voting/code/src/pages/Main.js"],"names":["React","styled","Colors","Button","Bubble","Option","OptionGroup","Card","VotingCard","firebase","PageWrapper","div","LightBlue","MainScreen","Component","constructor","props","handleOptionClick","id","state","selectedBubble","setState","handleSubmit","event","yes_votes","no_votes","abstain_votes","docRef","firestore","collection","doc","get","then","querySnapshot","forEach","data","yes","no","abstain","preventDefault","alert","update","bind","render"],"mappings":"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","sourcesContent":["import React    from 'react';\r\nimport styled   from 'styled-components';\r\n\r\nimport { Colors } from '../components/theme/Colors';\r\nimport Button from '../components/Button';\r\nimport Bubble from '../components/Bubble';\r\nimport Option from '../components/Option';\r\nimport OptionGroup from '../components/OptionGroup';\r\nimport Card from '../components/Card';\r\nimport VotingCard from '../components/VotingCard';\r\nimport firebase from '../firebase'\r\n\r\nconst PageWrapper = styled.div`\r\n  background-color: ${Colors.LightBlue};\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n`;\r\n\r\nclass MainScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {selectedBubble: null};\r\n    //\r\n    this.handleOptionClick = this.handleOptionClick.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleOptionClick = (id) => {\r\n    if (this.state.selectedBubble === id) {\r\n      this.setState({selectedBubble: null});\r\n    }\r\n    else { this.setState({selectedBubble: id}); }\r\n  } \r\n\r\n  \r\n   handleSubmit = (event) => {\r\n     var yes_votes\r\n     var no_votes\r\n     var abstain_votes\r\n     var docRef = firebase.firestore().collection(\"0\").doc(\"general-poll\")\r\n     docRef.get().then(function(querySnapshot) {\r\n      querySnapshot.forEach(function(doc) {\r\n        yes_votes = doc.data().yes\r\n        no_votes = doc.data().no\r\n        abstain_votes = doc.data().abstain\r\n      })\r\n     })\r\n\r\n     event.preventDefault();\r\n     if (this.state.selectedBubble == 0) {\r\n      alert('You voted: Yes!');\r\n      docRef.update({\r\n        yes: yes_votes + 1\r\n      })\r\n     }\r\n     else if (this.state.selectedBubble == 1) {\r\n      alert('You voted: No!');\r\n      docRef.update({\r\n        no: docRef.get() + 1\r\n      })\r\n    }\r\n    else if (this.state.selectedBubble == 2) {\r\n      alert('You voted: Abstain!');\r\n      docRef.update({\r\n        abstain: docRef.get() + 1\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <PageWrapper>\r\n          <VotingCard medium\r\n                      width={600}\r\n                      title={'Poll Title'}\r\n                      description={'Description of the poll... very informative.'}\r\n                      options={['Yes', 'No', 'Abstain']}\r\n                      handleOptionClick={this.handleOptionClick}\r\n                      handleSubmit={this.handleSubmit}\r\n                      selectedBubble={this.state.selectedBubble}/>\r\n        </PageWrapper>\r\n      );\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n// const MainScreen = (props) => {\r\n//\r\n//   return(\r\n//     <PageWrapper>\r\n//       <VotingCard medium\r\n//                   width={600}\r\n//                   title={'Poll Title'}\r\n//                   description={'Description of the poll... very informative.'}\r\n//                   options={['Option 1', 'Option 2', 'Option 3']}/>\r\n//     </PageWrapper>\r\n//   )\r\n//\r\n// };\r\n\r\nexport default MainScreen;\r\n"]},"metadata":{},"sourceType":"module"}