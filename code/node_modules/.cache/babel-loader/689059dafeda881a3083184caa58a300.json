{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dubin\\\\Github\\\\faculty-voting\\\\code\\\\src\\\\components\\\\theme\\\\Text.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ExtraPropTypes from 'react-extra-prop-types';\nconst propTypes = {\n  primitive: PropTypes.string,\n  children: PropTypes.node.isRequired,\n  color: ExtraPropTypes.color,\n  fontSize: PropTypes.int,\n  lineHeight: PropTypes.int\n};\nconst defaultProps = {\n  primitive: 'span'\n};\nconst TextWrapper = styled.span`\n  color: ${({\n  color\n}) => color}px;\n  font-size: ${({\n  fontSize\n}) => fontSize}px;\n  line-height: ${({\n  lineHeight\n}) => lineHeight}px;\n  margin: 0;\n`;\n\nconst Text = props => {\n  const {\n    primitive,\n    children,\n    ...rest\n  } = props;\n  return /*#__PURE__*/React.createElement(TextWrapper, Object.assign({\n    as: primitive\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nText.propTypes = propTypes;\nText.defaultProps = defaultProps;\nexport default Text;","map":{"version":3,"sources":["C:/Users/dubin/Github/faculty-voting/code/src/components/theme/Text.js"],"names":["React","styled","PropTypes","ExtraPropTypes","propTypes","primitive","string","children","node","isRequired","color","fontSize","int","lineHeight","defaultProps","TextWrapper","span","Text","props","rest"],"mappings":";AAAA,OAAOA,KAAP,MAA6B,OAA7B;AACA,OAAOC,MAAP,MAA6B,mBAA7B;AACA,OAAOC,SAAP,MAA6B,YAA7B;AACA,OAAOC,cAAP,MAA4B,wBAA5B;AAGA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,SAAS,EAAEH,SAAS,CAACI,MADL;AAEhBC,EAAAA,QAAQ,EAAEL,SAAS,CAACM,IAAV,CAAeC,UAFT;AAIhBC,EAAAA,KAAK,EAAEP,cAAc,CAACO,KAJN;AAKhBC,EAAAA,QAAQ,EAAET,SAAS,CAACU,GALJ;AAMhBC,EAAAA,UAAU,EAAEX,SAAS,CAACU;AANN,CAAlB;AASA,MAAME,YAAY,GAAG;AACnBT,EAAAA,SAAS,EAAE;AADQ,CAArB;AAIA,MAAMU,WAAW,GAAGd,MAAM,CAACe,IAAK;WACrB,CAAC;AAACN,EAAAA;AAAD,CAAD,KAAaA,KAAM;eACf,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgBA,QAAS;iBACvB,CAAC;AAACE,EAAAA;AAAD,CAAD,KAAkBA,UAAW;;CAH9C;;AAOA,MAAMI,IAAI,GAAKC,KAAF,IAAa;AAExB,QAAM;AAAEb,IAAAA,SAAF;AAAaE,IAAAA,QAAb;AAAuB,OAAGY;AAA1B,MAAmCD,KAAzC;AAEA,sBACE,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAEb;AAAjB,KAAgCc,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGZ,QADH,CADF;AAKD,CATD;;AAWAU,IAAI,CAACb,SAAL,GAAiBA,SAAjB;AACAa,IAAI,CAACH,YAAL,GAAoBA,YAApB;AAEA,eAAeG,IAAf","sourcesContent":["import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes\t\tfrom 'react-extra-prop-types';\r\n\r\n\r\nconst propTypes = {\r\n  primitive: PropTypes.string,\r\n  children: PropTypes.node.isRequired,\r\n\r\n  color: ExtraPropTypes.color,\r\n  fontSize: PropTypes.int,\r\n  lineHeight: PropTypes.int,\r\n};\r\n\r\nconst defaultProps = {\r\n  primitive: 'span',\r\n};\r\n\r\nconst TextWrapper = styled.span`\r\n  color: ${({color}) => color}px;\r\n  font-size: ${({fontSize}) => fontSize}px;\r\n  line-height: ${({lineHeight}) => lineHeight}px;\r\n  margin: 0;\r\n`;\r\n\r\nconst Text = ( props ) => {\r\n\r\n  const { primitive, children, ...rest } = props;\r\n\r\n  return (\r\n    <TextWrapper as={primitive} {...rest}>\r\n      {children}\r\n    </TextWrapper>\r\n  );\r\n};\r\n\r\nText.propTypes = propTypes;\r\nText.defaultProps = defaultProps;\r\n\r\nexport default Text;\r\n"]},"metadata":{},"sourceType":"module"}