{"ast":null,"code":"var _jsxFileName = \"/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/components/theme/Body.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ExtraPropTypes from 'react-extra-prop-types';\nimport Text from './Text';\nimport { Fonts } from './Fonts';\nimport { Colors } from './Colors';\nconst propTypes = {\n  color: ExtraPropTypes.color,\n  primative: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h6', 'span', 'p']),\n  extraSmall: PropTypes.bool,\n  small: PropTypes.bool,\n  medium: PropTypes.bool,\n  large: PropTypes.bool,\n  extraLarge: PropTypes.bool\n};\nconst defaultProps = {\n  color: Colors.Black,\n  primitive: 'p'\n};\nconst fontConfig = {\n  fontFamily: Fonts.WorkSans,\n  fontWeight: 'bold',\n  extraSmall: {\n    fontSize: 12,\n    lineHeight: 18\n  },\n  small: {\n    fontSize: 14,\n    lineHeight: 20\n  },\n  medium: {\n    fontSize: 16,\n    lineHeight: 22\n  },\n  large: {\n    fontSize: 20,\n    lineHeight: 28\n  },\n  extraLarge: {\n    fontSize: 26,\n    lineHeight: 36\n  }\n};\nconst BodyWrapper = styled(Text)`\n  font-weight: ${fontConfig.fontWeight};\n  font-family: ${fontConfig.fontFamily};\n  color: ${({\n  color\n}) => color};\n  white-space: pre-line;\n`;\n\nconst Body = props => {\n  const {\n    primitive,\n    extraLarge,\n    large,\n    medium,\n    small,\n    extraSmall,\n    children,\n    width,\n    color,\n    ...rest\n  } = props;\n  let sizeConfig = {};\n\n  if (extraLarge) {\n    sizeConfig = fontConfig.extraLarge;\n  } else if (large) {\n    sizeConfig = fontConfig.large;\n  } else if (medium) {\n    sizeConfig = fontConfig.medium;\n  } else if (small) {\n    sizeConfig = fontConfig.small;\n  } else {\n    sizeConfig = fontConfig.extraSmall;\n  }\n\n  return /*#__PURE__*/React.createElement(BodyWrapper, Object.assign({\n    color: color,\n    primitive: primitive,\n    fontSize: sizeConfig.fontSize,\n    lineHeight: sizeConfig.lineHeight\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }), children);\n};\n\nBody.propTypes = propTypes;\nBody.defaultProps = defaultProps;\nexport default Body;","map":{"version":3,"sources":["/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/components/theme/Body.js"],"names":["React","styled","PropTypes","ExtraPropTypes","Text","Fonts","Colors","propTypes","color","primative","oneOf","extraSmall","bool","small","medium","large","extraLarge","defaultProps","Black","primitive","fontConfig","fontFamily","WorkSans","fontWeight","fontSize","lineHeight","BodyWrapper","Body","props","children","width","rest","sizeConfig"],"mappings":"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","sourcesContent":["import React            from 'react';\nimport styled           from 'styled-components';\nimport PropTypes        from 'prop-types';\nimport ExtraPropTypes   from 'react-extra-prop-types';\n\nimport Text             from './Text'\nimport { Fonts }        from './Fonts';\nimport { Colors }       from './Colors';\n\nconst propTypes = {\n  color: ExtraPropTypes.color,\n  primative: PropTypes.oneOf(['h1', 'h2', 'h3', 'h4', 'h6', 'span', 'p']),\n  extraSmall: PropTypes.bool,\n  small: PropTypes.bool,\n  medium: PropTypes.bool,\n  large: PropTypes.bool,\n  extraLarge: PropTypes.bool,\n};\n\nconst defaultProps = {\n  color: Colors.Black,\n  primitive: 'p'\n};\n\nconst fontConfig = {\n  fontFamily: Fonts.WorkSans,\n  fontWeight: 'bold',\n  extraSmall: { fontSize: 12, lineHeight: 18 },\n  small: { fontSize: 14, lineHeight: 20 },\n  medium: { fontSize: 16, lineHeight: 22 },\n  large: { fontSize: 20, lineHeight: 28 },\n  extraLarge: { fontSize: 26, lineHeight: 36 }\n};\nconst BodyWrapper = styled(Text)`\n  font-weight: ${fontConfig.fontWeight};\n  font-family: ${fontConfig.fontFamily};\n  color: ${({color}) => color};\n  white-space: pre-line;\n`;\n\nconst Body = (props) => {\n  const { primitive, extraLarge, large, medium, small, extraSmall,\n          children, width, color, ...rest } = props;\n\n  let sizeConfig = {};\n  if (extraLarge) { sizeConfig = fontConfig.extraLarge }\n  else if (large) { sizeConfig = fontConfig.large }\n  else if (medium) { sizeConfig = fontConfig.medium }\n  else if (small) { sizeConfig = fontConfig.small }\n  else { sizeConfig = fontConfig.extraSmall }\n\n  return(\n    <BodyWrapper color={color}\n                 primitive={primitive}\n                 fontSize={sizeConfig.fontSize}\n                 lineHeight={sizeConfig.lineHeight}\n                 {...rest}>\n      {children}\n    </BodyWrapper>\n  );\n};\n\nBody.propTypes = propTypes;\nBody.defaultProps = defaultProps;\n\nexport default Body;\n"]},"metadata":{},"sourceType":"module"}