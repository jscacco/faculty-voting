{"ast":null,"code":"var _jsxFileName = \"/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/components/RoomCodeForm.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ExtraPropTypes from 'react-extra-prop-types';\nimport { Colors } from './theme/Colors';\nimport Body from './theme/Body';\nimport Card from './Card';\nimport Button from './Button';\nimport { Jumbo } from './theme/Jumbo';\nconst propTypes = {\n  value: PropTypes.string,\n  handleChange: PropTypes.func,\n  handleSubmit: PropTypes.func\n};\nconst defaultProps = {\n  handleChange: undefined,\n  handleSubmit: undefined\n};\nconst ComponentWrapper = styled.div`\n  ${({\n  small\n}) => small && `padding-bottom: 16px`}\n  ${({\n  medium\n}) => medium && `padding-bottom: 20px`}\n  ${({\n  large\n}) => large && `padding-bottom: 26px`}\n`;\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\nconst TextInputWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst renderTitle = props => {\n  const {\n    title,\n    small,\n    medium,\n    large\n  } = props;\n  return /*#__PURE__*/React.createElement(ComponentWrapper, {\n    small: small,\n    medium: medium,\n    large: large,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fourExtraSmall: small,\n    threeExtraSmall: medium,\n    twoExtraSmall: large,\n    color: Colors.Blue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, title));\n};\n\nconst renderInput = props => {\n  const {\n    label,\n    small,\n    medium,\n    large,\n    value,\n    handleChange,\n    handleSubmit\n  } = props;\n  return /*#__PURE__*/React.createElement(ComponentWrapper, {\n    small: small,\n    medium: medium,\n    large: large,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TextInputWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: value,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst renderButton = props => {\n  const {\n    small,\n    medium,\n    large\n  } = props;\n  let width;\n\n  if (large) {\n    width = 175;\n  } else if (small) {\n    width = 125;\n  } else {\n    width = 150;\n  }\n\n  return /*#__PURE__*/React.createElement(ButtonWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    small: small,\n    medium: medium,\n    large: large,\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"SUBMIT\"));\n};\n\nconst RoomCodeForm = props => {\n  const {\n    title,\n    width,\n    value,\n    handleChange,\n    handleSubmit\n  } = props;\n  return /*#__PURE__*/React.createElement(Card, {\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, renderTitle(props), renderInput(props), renderButton(props));\n};\n\nRoomCodeForm.propTypes = propTypes;\nRoomCodeForm.defaultProps = defaultProps;\nexport default RoomCodeForm;","map":{"version":3,"sources":["/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/components/RoomCodeForm.js"],"names":["React","styled","PropTypes","ExtraPropTypes","Colors","Body","Card","Button","Jumbo","propTypes","value","string","handleChange","func","handleSubmit","defaultProps","undefined","ComponentWrapper","div","small","medium","large","ButtonWrapper","TextInputWrapper","renderTitle","props","title","Blue","renderInput","label","renderButton","width","RoomCodeForm"],"mappings":"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","sourcesContent":["import React            from 'react';\nimport styled           from 'styled-components';\nimport PropTypes        from 'prop-types';\nimport ExtraPropTypes   from 'react-extra-prop-types';\n\nimport { Colors }       from './theme/Colors';\nimport Body             from './theme/Body';\nimport Card             from './Card';\nimport Button           from './Button';\nimport {Jumbo}             from './theme/Jumbo';\n\n\n\nconst propTypes = {\n  value: PropTypes.string,\n  handleChange: PropTypes.func,\n  handleSubmit: PropTypes.func,\n};\n\nconst defaultProps = {\n  handleChange: undefined,\n  handleSubmit: undefined\n};\n\nconst ComponentWrapper = styled.div`\n  ${({small}) => small && `padding-bottom: 16px`}\n  ${({medium}) => medium && `padding-bottom: 20px`}\n  ${({large}) => large && `padding-bottom: 26px`}\n`;\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst TextInputWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst renderTitle = (props) => {\n\n  const { title, small, medium, large } = props;\n\n  return (\n    <ComponentWrapper small={small} medium={medium} large={large}>\n      <Text fourExtraSmall={small} threeExtraSmall={medium}\n             twoExtraSmall={large} color={Colors.Blue}>\n        {title}\n      </Text>\n    </ComponentWrapper>\n  )\n};\n\nconst renderInput = (props) => {\n  const { label, small, medium, large, value, handleChange, handleSubmit } = props;\n\n  return (\n    <ComponentWrapper small={small} medium={medium} large={large}>\n      <TextInputWrapper>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" value={value} onChange={handleChange} />\n        </form>\n      </TextInputWrapper>\n    </ComponentWrapper>\n  )\n};\n\nconst renderButton = (props) => {\n\n  const { small, medium, large } = props;\n\n  let width;\n\n  if (large) { width = 175}\n  else if ( small ) { width = 125 }\n  else { width = 150 }\n\n  return(\n    <ButtonWrapper>\n      <Button small={small} medium={medium} large={large} width={width}>\n        SUBMIT\n      </Button>\n    </ButtonWrapper>\n\n  )\n};\n\nconst RoomCodeForm = (props) => {\n\n    const { title, width, value, handleChange, handleSubmit } = props;\n\n    return (\n      <Card width={width}>\n        {renderTitle(props)}\n        {renderInput(props)}\n        {renderButton(props)}\n      </Card>\n\n\n    );\n\n};\n\nRoomCodeForm.propTypes = propTypes;\nRoomCodeForm.defaultProps = defaultProps;\n\nexport default RoomCodeForm;\n"]},"metadata":{},"sourceType":"module"}