{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dubin\\\\Github\\\\faculty-voting\\\\code\\\\src\\\\components\\\\buttons\\\\Bubble.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ExtraPropTypes from 'react-extra-prop-types';\nimport { Colors } from '../theme/Colors';\nimport Icon from '../theme/Icon';\nconst propTypes = {\n  clicked: PropTypes.bool,\n  color: ExtraPropTypes.color,\n  extraLarge: PropTypes.bool,\n  large: PropTypes.bool,\n  medium: PropTypes.bool,\n  small: PropTypes.bool,\n  extraSmall: PropTypes.bool\n};\nconst defaultProps = {\n  clicked: false\n};\nconst sizeConfig = {\n  extraLarge: '2em',\n  large: '1.75em',\n  medium: '1.5em',\n  small: '1em',\n  extraSmall: '0.75em'\n};\n\nconst renderClicked = props => /*#__PURE__*/React.createElement(Icon, Object.assign({\n  type: 'bubble'\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }\n}));\n\nconst renderUnClicked = props => /*#__PURE__*/React.createElement(Icon, Object.assign({\n  type: 'circle'\n}, props, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }\n}));\n\nconst Bubble = props => {\n  const {\n    extraLarge,\n    large,\n    medium,\n    small,\n    extraSmall,\n    clicked\n  } = props;\n  let size;\n\n  if (extraLarge) {\n    size = sizeConfig.extraLarge;\n  } else if (large) {\n    size = sizeConfig.large;\n  } else if (small) {\n    size = sizeConfig.small;\n  } else if (extraSmall) {\n    size = size.extraSmall;\n  } else {\n    size = sizeConfig.medium;\n  }\n\n  return clicked ? renderClicked({ ...props,\n    size: size\n  }) : renderUnClicked({ ...props,\n    size: size\n  });\n};\n\nBubble.propTypes = propTypes;\nBubble.defaultProps = defaultProps;\nexport default Bubble;","map":{"version":3,"sources":["C:/Users/dubin/Github/faculty-voting/code/src/components/buttons/Bubble.js"],"names":["React","PropTypes","ExtraPropTypes","Colors","Icon","propTypes","clicked","bool","color","extraLarge","large","medium","small","extraSmall","defaultProps","sizeConfig","renderClicked","props","renderUnClicked","Bubble","size"],"mappings":";AAAA,OAAOA,KAAP,MAA6B,OAA7B;AACA,OAAOC,SAAP,MAA6B,YAA7B;AACA,OAAOC,cAAP,MAA6B,wBAA7B;AAEA,SAASC,MAAT,QAA6B,iBAA7B;AACA,OAAOC,IAAP,MAA6B,eAA7B;AAEA,MAAMC,SAAS,GAAG;AAChBC,EAAAA,OAAO,EAAEL,SAAS,CAACM,IADH;AAGhBC,EAAAA,KAAK,EAAEN,cAAc,CAACM,KAHN;AAKhBC,EAAAA,UAAU,EAAER,SAAS,CAACM,IALN;AAMhBG,EAAAA,KAAK,EAAET,SAAS,CAACM,IAND;AAOhBI,EAAAA,MAAM,EAAEV,SAAS,CAACM,IAPF;AAQhBK,EAAAA,KAAK,EAAEX,SAAS,CAACM,IARD;AAShBM,EAAAA,UAAU,EAAEZ,SAAS,CAACM;AATN,CAAlB;AAYA,MAAMO,YAAY,GAAG;AACnBR,EAAAA,OAAO,EAAE;AADU,CAArB;AAIA,MAAMS,UAAU,GAAG;AACjBN,EAAAA,UAAU,EAAE,KADK;AAEjBC,EAAAA,KAAK,EAAE,QAFU;AAGjBC,EAAAA,MAAM,EAAE,OAHS;AAIjBC,EAAAA,KAAK,EAAE,KAJU;AAKjBC,EAAAA,UAAU,EAAE;AALK,CAAnB;;AAQA,MAAMG,aAAa,GAAKC,KAAF,iBACpB,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAE;AAAZ,GACUA,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAKA,MAAMC,eAAe,GAAKD,KAAF,iBACtB,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAE;AAAZ,GACUA,KADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GADF;;AAKA,MAAME,MAAM,GAAKF,KAAF,IAAa;AAE1B,QAAM;AAAER,IAAAA,UAAF;AAAcC,IAAAA,KAAd;AAAqBC,IAAAA,MAArB;AAA6BC,IAAAA,KAA7B;AAAoCC,IAAAA,UAApC;AAAgDP,IAAAA;AAAhD,MAA4DW,KAAlE;AAEA,MAAIG,IAAJ;;AAEA,MAAIX,UAAJ,EAAgB;AAAEW,IAAAA,IAAI,GAAGL,UAAU,CAACN,UAAlB;AAA8B,GAAhD,MACK,IAAIC,KAAJ,EAAW;AAAEU,IAAAA,IAAI,GAAGL,UAAU,CAACL,KAAlB;AAAyB,GAAtC,MACA,IAAIE,KAAJ,EAAW;AAAEQ,IAAAA,IAAI,GAAGL,UAAU,CAACH,KAAlB;AAAyB,GAAtC,MACA,IAAIC,UAAJ,EAAgB;AAAEO,IAAAA,IAAI,GAAGA,IAAI,CAACP,UAAZ;AAAwB,GAA1C,MACA;AAAEO,IAAAA,IAAI,GAAGL,UAAU,CAACJ,MAAlB;AAA0B;;AAEjC,SACEL,OAAO,GAAGU,aAAa,CAAC,EAAE,GAAGC,KAAL;AAAYG,IAAAA,IAAI,EAAEA;AAAlB,GAAD,CAAhB,GACGF,eAAe,CAAC,EAAE,GAAGD,KAAL;AAAYG,IAAAA,IAAI,EAAEA;AAAlB,GAAD,CAF3B;AAID,CAhBD;;AAkBAD,MAAM,CAACd,SAAP,GAAmBA,SAAnB;AACAc,MAAM,CAACL,YAAP,GAAsBA,YAAtB;AAEA,eAAeK,MAAf","sourcesContent":["import React            from 'react';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Icon             from '../theme/Icon';\r\n\r\nconst propTypes = {\r\n  clicked: PropTypes.bool,\r\n\r\n  color: ExtraPropTypes.color,\r\n\r\n  extraLarge: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  small: PropTypes.bool,\r\n  extraSmall: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  clicked: false,\r\n};\r\n\r\nconst sizeConfig = {\r\n  extraLarge: '2em',\r\n  large: '1.75em',\r\n  medium: '1.5em' ,\r\n  small: '1em',\r\n  extraSmall: '0.75em'\r\n};\r\n\r\nconst renderClicked = ( props ) => (\r\n  <Icon type={'bubble'}\r\n        {...props}/>\r\n);\r\n\r\nconst renderUnClicked = ( props ) => (\r\n  <Icon type={'circle'}\r\n        {...props} />\r\n);\r\n\r\nconst Bubble = ( props ) => {\r\n\r\n  const { extraLarge, large, medium, small, extraSmall, clicked } = props;\r\n\r\n  let size;\r\n\r\n  if (extraLarge) { size = sizeConfig.extraLarge }\r\n  else if (large) { size = sizeConfig.large }\r\n  else if (small) { size = sizeConfig.small }\r\n  else if (extraSmall) { size = size.extraSmall }\r\n  else { size = sizeConfig.medium }\r\n\r\n  return (\r\n    clicked ? renderClicked({ ...props, size: size }) :\r\n              renderUnClicked({ ...props, size: size })\r\n  );\r\n};\r\n\r\nBubble.propTypes = propTypes;\r\nBubble.defaultProps = defaultProps;\r\n\r\nexport default Bubble;\r\n"]},"metadata":{},"sourceType":"module"}