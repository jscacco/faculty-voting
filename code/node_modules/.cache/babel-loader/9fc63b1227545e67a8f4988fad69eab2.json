{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dubin\\\\Github\\\\faculty-voting\\\\code\\\\src\\\\components\\\\buttons\\\\SubmitButton.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport ExtraPropTypes from 'react-extra-prop-types';\nimport { Colors } from '../theme/Colors';\nimport Body from '../theme/Body';\nimport Button from './Button';\nconst propTypes = {\n  onClick: PropTypes.bool,\n  unselected: PropTypes.bool,\n  submit: PropTypes.bool,\n  submitted: PropTypes.bool,\n  resubmit: PropTypes.bool,\n  small: PropTypes.bool,\n  medium: PropTypes.bool,\n  large: PropTypes.bool\n};\nconst defaultProps = {\n  onClick: undefined\n};\nconst SubmitWrapper = styled.div`\n`;\nconst ComponentWrapper = styled.div`\n  ${({\n  small\n}) => small && `padding-bottom: 20px`}\n  ${({\n  medium\n}) => medium && `padding-bottom: 26px`}\n  ${({\n  large\n}) => large && `padding-bottom: 32px`}\n`;\nconst ButtonWrapper = styled.div`\n    width: ${({\n  width\n}) => width}px;\n`;\nconst CenterWrapper = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\nconst config = {\n  submit: {\n    subText: 'Please press submit to record your response.',\n    text: 'SUBMIT',\n    color: Colors.Yellow,\n    disabled: false\n  },\n  submitted: {\n    subText: 'Your response has been recorded.',\n    text: 'SUBMITTED',\n    color: Colors.Green,\n    disabled: true\n  },\n  unselected: {\n    subText: 'Please make a selection.',\n    text: 'SUBMIT',\n    color: Colors.Red,\n    disabled: true\n  },\n  resubmit: {\n    subText: 'Please press submit to record your response.',\n    text: 'RESUBMIT',\n    color: Colors.Yellow,\n    disabled: false\n  }\n};\n\nconst renderText = props => {\n  const {\n    buttonConfig,\n    small,\n    medium,\n    large\n  } = props;\n  return /*#__PURE__*/React.createElement(CenterWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Body, {\n    extraSmall: small,\n    small: medium,\n    medium: large,\n    color: Colors.Black,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, buttonConfig.subText));\n};\n\nconst renderButton = props => {\n  const {\n    onClick,\n    buttonConfig,\n    ...rest\n  } = props;\n  let width;\n\n  if (props.large) {\n    width = 225;\n  } else if (props.small) {\n    width = 125;\n  } else {\n    width = 150;\n  }\n\n  return /*#__PURE__*/React.createElement(ComponentWrapper, Object.assign({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CenterWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ButtonWrapper, {\n    width: width,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, Object.assign({\n    onClick: buttonConfig.disabled ? undefined : onClick,\n    disabled: buttonConfig.disabled,\n    backgroundColor: buttonConfig.color\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }), buttonConfig.text))));\n};\n\nconst SubmitButton = props => {\n  const {\n    unselected,\n    submit,\n    submitted,\n    resubmit\n  } = props;\n  console.log({\n    unselected,\n    submit,\n    submitted,\n    resubmit\n  });\n  let buttonConfig;\n\n  if (submit) {\n    buttonConfig = config.submit;\n  } else if (submitted) {\n    buttonConfig = config.submitted;\n  } else if (resubmit) {\n    buttonConfig = config.resubmit;\n  } else {\n    buttonConfig = config.unselected;\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(SubmitWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  }, renderButton({ ...props,\n    buttonConfig\n  }), renderText({ ...props,\n    buttonConfig\n  }));\n};\n\nSubmitButton.propTypes = propTypes;\nSubmitButton.defaultProps = defaultProps;\nexport default SubmitButton;","map":{"version":3,"sources":["C:/Users/dubin/Github/faculty-voting/code/src/components/buttons/SubmitButton.js"],"names":["React","styled","PropTypes","ExtraPropTypes","Colors","Body","Button","propTypes","onClick","bool","unselected","submit","submitted","resubmit","small","medium","large","defaultProps","undefined","SubmitWrapper","div","ComponentWrapper","ButtonWrapper","width","CenterWrapper","config","subText","text","color","Yellow","disabled","Green","Red","renderText","props","buttonConfig","Black","renderButton","rest","SubmitButton","console","log"],"mappings":"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","sourcesContent":["import React            from 'react';\r\nimport styled           from 'styled-components';\r\nimport PropTypes        from 'prop-types';\r\nimport ExtraPropTypes   from 'react-extra-prop-types';\r\n\r\nimport { Colors }       from '../theme/Colors';\r\nimport Body             from '../theme/Body';\r\nimport Button           from  './Button';\r\n\r\nconst propTypes = {\r\n  onClick: PropTypes.bool,\r\n\r\n  unselected: PropTypes.bool,\r\n  submit: PropTypes.bool,\r\n  submitted: PropTypes.bool,\r\n  resubmit: PropTypes.bool,\r\n\r\n  small: PropTypes.bool,\r\n  medium: PropTypes.bool,\r\n  large: PropTypes.bool,\r\n};\r\n\r\nconst defaultProps = {\r\n  onClick: undefined,\r\n};\r\n\r\nconst SubmitWrapper = styled.div`\r\n`\r\nconst ComponentWrapper = styled.div`\r\n  ${({small}) => small && `padding-bottom: 20px`}\r\n  ${({medium}) => medium && `padding-bottom: 26px`}\r\n  ${({large}) => large && `padding-bottom: 32px`}\r\n`;\r\n\r\nconst ButtonWrapper = styled.div`\r\n    width: ${({width}) => width}px;\r\n`;\r\n\r\nconst CenterWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: center;\r\n`;\r\n\r\nconst config = {\r\n  submit: { subText: 'Please press submit to record your response.',\r\n            text: 'SUBMIT',\r\n            color: Colors.Yellow,\r\n            disabled: false,\r\n          },\r\n  submitted: { subText: 'Your response has been recorded.',\r\n               text: 'SUBMITTED',\r\n               color: Colors.Green,\r\n               disabled: true\r\n             },\r\n  unselected: { subText: 'Please make a selection.',\r\n                text: 'SUBMIT',\r\n                color: Colors.Red,\r\n                disabled: true\r\n               },\r\n  resubmit: { subText: 'Please press submit to record your response.',\r\n              text: 'RESUBMIT',\r\n              color: Colors.Yellow,\r\n              disabled: false\r\n            }\r\n}\r\n\r\nconst renderText = (props) => {\r\n\r\n  const { buttonConfig, small, medium, large } = props;\r\n\r\n\r\n  return(\r\n    <CenterWrapper>\r\n      <Body extraSmall={small} small={medium} medium={large} color={Colors.Black}>\r\n        {buttonConfig.subText}\r\n      </Body>\r\n    </CenterWrapper>\r\n  )\r\n}\r\n\r\nconst renderButton = (props) => {\r\n\r\n  const { onClick, buttonConfig, ...rest} = props;\r\n\r\n  let width;\r\n  if (props.large) { width = 225}\r\n  else if ( props.small ) { width = 125 }\r\n  else { width = 150 }\r\n\r\n  return (\r\n    <ComponentWrapper {...rest}>\r\n      <CenterWrapper>\r\n        <ButtonWrapper width={width}>\r\n          <Button onClick={buttonConfig.disabled ? undefined : onClick} disabled={buttonConfig.disabled}\r\n                  backgroundColor={buttonConfig.color}\r\n                  {...rest}>\r\n            {buttonConfig.text}\r\n          </Button>\r\n        </ButtonWrapper>\r\n      </CenterWrapper>\r\n    </ComponentWrapper>\r\n  );\r\n};\r\n\r\nconst SubmitButton = (props) => {\r\n  const { unselected, submit, submitted, resubmit } = props;\r\n  console.log ({ unselected, submit, submitted, resubmit })\r\n\r\n  let buttonConfig;\r\n\r\n  if (submit) { buttonConfig = config.submit }\r\n  else if (submitted) { buttonConfig = config.submitted }\r\n  else if (resubmit) { buttonConfig = config.resubmit }\r\n  else { buttonConfig = config.unselected };\r\n\r\n  return (\r\n    <SubmitWrapper>\r\n      {renderButton({...props, buttonConfig})}\r\n      {renderText({...props, buttonConfig})}\r\n    </SubmitWrapper>\r\n  )\r\n};\r\n\r\nSubmitButton.propTypes = propTypes;\r\nSubmitButton.defaultProps = defaultProps;\r\n\r\nexport default SubmitButton;\r\n"]},"metadata":{},"sourceType":"module"}