{"ast":null,"code":"var _jsxFileName = \"/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/components/TextInput.js\";\nimport React from \"react\";\nimport { FormCtx } from \"./Form\";\n\nconst TextInput = props => {\n  const {\n    id\n  } = props;\n  const {\n    setFields,\n    addField\n  } = useContext(FormCtx);\n  const field = fields[id] || {};\n  const {\n    name,\n    rows,\n    value,\n    validate,\n    placeholder,\n    label = \"\",\n    type = \"text\",\n    events = {},\n    classes = {}\n  } = field;\n  const {\n    onChange,\n    ...restEvents\n  } = events;\n  const {\n    contClass,\n    fieldClass,\n    errorClass\n  } = classes;\n\n  const handleChange = event => {\n    try {\n      setFields(event, field);\n    } catch (error) {\n      throw error;\n    }\n\n    if (typeof onChange == \"function\") {\n      onChange({ ...field,\n        value: event.target.value\n      });\n    }\n  };\n\n  useEffect(() => {\n    addField({\n      field: props,\n      value\n    });\n  }, []);\n  const fieldProps = { ...restEvents,\n    id,\n    name,\n    type,\n    value,\n    validate,\n    placeholder,\n    className: fieldClass,\n    onChange: handleChange\n  };\n\n  if (type === \"textarea\") {\n    delete fieldProps.type;\n    delete fieldProps.value;\n    fieldProps.defaultValue = value;\n    fieldProps.rows = rows || 2;\n  }\n\n  return field && field.value !== undefined ? /*#__PURE__*/React.createElement(\"div\", {\n    className: contClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, label, type === \"textarea\" ? /*#__PURE__*/React.createElement(\"textarea\", Object.assign({}, fieldProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  })) : /*#__PURE__*/React.createElement(\"input\", Object.assign({}, fieldProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: errorClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, \"// place for errors\")) : \"\";\n};\n\nexport default TextInput;","map":{"version":3,"sources":["/Users/connorcates/Documents/Hamilton Senior/faculty-voting/code/src/components/TextInput.js"],"names":["React","FormCtx","TextInput","props","id","setFields","addField","useContext","field","fields","name","rows","value","validate","placeholder","label","type","events","classes","onChange","restEvents","contClass","fieldClass","errorClass","handleChange","event","error","target","useEffect","fieldProps","className","defaultValue","undefined"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,QAAtB;;AAEA,MAAMC,SAAS,GAAGC,KAAK,IAAI;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAASD,KAAf;AACA,QAAM;AAAEE,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAA0BC,UAAU,CAACN,OAAD,CAA1C;AACA,QAAMO,KAAK,GAAGC,MAAM,CAACL,EAAD,CAAN,IAAc,EAA5B;AACA,QAAM;AACJM,IAAAA,IADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,QAJI;AAKJC,IAAAA,WALI;AAMJC,IAAAA,KAAK,GAAG,EANJ;AAOJC,IAAAA,IAAI,GAAG,MAPH;AAQJC,IAAAA,MAAM,GAAG,EARL;AASJC,IAAAA,OAAO,GAAG;AATN,MAUDV,KAVL;AAWA,QAAM;AAAEW,IAAAA,QAAF;AAAY,OAAGC;AAAf,MAA8BH,MAApC;AACA,QAAK;AAAEI,IAAAA,SAAF;AAAaC,IAAAA,UAAb;AAAyBC,IAAAA;AAAzB,MAAwCL,OAA7C;;AAEA,QAAMM,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAI;AACFpB,MAAAA,SAAS,CAACoB,KAAD,EAAQjB,KAAR,CAAT;AACD,KAFD,CAEE,OAAOkB,KAAP,EAAc;AACd,YAAMA,KAAN;AACD;;AAED,QAAI,OAAOP,QAAP,IAAmB,UAAvB,EAAoC;AAClCA,MAAAA,QAAQ,CAAC,EACP,GAAGX,KADI;AAEPI,QAAAA,KAAK,EAAEa,KAAK,CAACE,MAAN,CAAaf;AAFb,OAAD,CAAR;AAID;AACF,GAbD;;AAeAgB,EAAAA,SAAS,CAAC,MAAM;AACdtB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,KAAK,EAAEL,KADA;AAEPS,MAAAA;AAFO,KAAD,CAAR;AAID,GALQ,EAKN,EALM,CAAT;AAOA,QAAMiB,UAAU,GAAG,EACjB,GAAGT,UADc;AAEjBhB,IAAAA,EAFiB;AAGjBM,IAAAA,IAHiB;AAIjBM,IAAAA,IAJiB;AAKjBJ,IAAAA,KALiB;AAMjBC,IAAAA,QANiB;AAOjBC,IAAAA,WAPiB;AAQjBgB,IAAAA,SAAS,EAAER,UARM;AASjBH,IAAAA,QAAQ,EAAEK;AATO,GAAnB;;AAYA,MAAIR,IAAI,KAAK,UAAb,EAAyB;AACvB,WAAOa,UAAU,CAACb,IAAlB;AACA,WAAOa,UAAU,CAACjB,KAAlB;AAEAiB,IAAAA,UAAU,CAACE,YAAX,GAA0BnB,KAA1B;AACAiB,IAAAA,UAAU,CAAClB,IAAX,GAAkBA,IAAI,IAAI,CAA1B;AACD;;AAED,SAAOH,KAAK,IAAIA,KAAK,CAACI,KAAN,KAAgBoB,SAAzB,gBACL;AAAK,IAAA,SAAS,EAAEX,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KADH,EAEGC,IAAI,KAAK,UAAT,gBACC,kDAAca,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,gBAGC,+CAAWA,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALJ,eAOE;AAAG,IAAA,SAAS,EAAEN,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAPF,CADK,GAWL,EAXF;AAaD,CAzED;;AA2EA,eAAerB,SAAf","sourcesContent":["import React from \"react\";\nimport {FormCtx} from \"./Form\";\n\nconst TextInput = props => {\n  const { id } = props;\n  const { setFields, addField } = useContext(FormCtx);\n  const field = fields[id] || {};\n  const {\n    name,\n    rows,\n    value,\n    validate,\n    placeholder,\n    label = \"\",\n    type = \"text\",\n    events = {},\n    classes = {}\n  } =  field;\n  const { onChange, ...restEvents } = events;\n  const{ contClass, fieldClass, errorClass } = classes;\n\n  const handleChange = event => {\n    try {\n      setFields(event, field);\n    } catch (error) {\n      throw error;\n    }\n\n    if (typeof onChange == \"function\")  {\n      onChange({\n        ...field,\n        value: event.target.value\n      });\n    }\n  };\n\n  useEffect(() => {\n    addField({\n      field: props,\n      value\n    });\n  }, []);\n\n  const fieldProps = {\n    ...restEvents,\n    id,\n    name,\n    type,\n    value,\n    validate,\n    placeholder,\n    className: fieldClass,\n    onChange: handleChange\n  };\n\n  if (type === \"textarea\") {\n    delete fieldProps.type;\n    delete fieldProps.value;\n\n    fieldProps.defaultValue = value;\n    fieldProps.rows = rows || 2;\n  }\n\n  return field && field.value !== undefined ? (\n    <div className={contClass}>\n      {label}\n      {type === \"textarea\" ? (\n        <textarea {...fieldProps} />\n      ) : (\n        <input {...fieldProps} />\n      )}\n      <p className={errorClass}>// place for errors</p>\n    </div>\n  ) : (\n    \"\"\n  );\n};\n\nexport default TextInput;\n"]},"metadata":{},"sourceType":"module"}